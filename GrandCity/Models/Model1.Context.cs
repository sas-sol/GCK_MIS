//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MeherEstateDevelopers.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Grand_CityEntities : DbContext
    {
        public Grand_CityEntities()
            : base("name=Grand_CityEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Activity> Activities { get; set; }
        public virtual DbSet<AdminProject> AdminProjects { get; set; }
        public virtual DbSet<AllotmentLetter> AllotmentLetters { get; set; }
        public virtual DbSet<Amount_Clearance> Amount_Clearance { get; set; }
        public virtual DbSet<Architecture_Customers> Architecture_Customers { get; set; }
        public virtual DbSet<Architecture_Requests> Architecture_Requests { get; set; }
        public virtual DbSet<Arrear_Salaries_Details> Arrear_Salaries_Details { get; set; }
        public virtual DbSet<Arrear> Arrears { get; set; }
        public virtual DbSet<AssetGroup> AssetGroups { get; set; }
        public virtual DbSet<Asset> Assets { get; set; }
        public virtual DbSet<Assets_Depreciation_Rules> Assets_Depreciation_Rules { get; set; }
        public virtual DbSet<Assets_Logs> Assets_Logs { get; set; }
        public virtual DbSet<Attachment> Attachments { get; set; }
        public virtual DbSet<Attendance_TimeAdjustments> Attendance_TimeAdjustments { get; set; }
        public virtual DbSet<AttendanceData> AttendanceDatas { get; set; }
        public virtual DbSet<Balance> Balances { get; set; }
        public virtual DbSet<Ballot_Event_Entry> Ballot_Event_Entry { get; set; }
        public virtual DbSet<BallotPlot> BallotPlots { get; set; }
        public virtual DbSet<Bank_Accounts> Bank_Accounts { get; set; }
        public virtual DbSet<Bank_Online_Accounts> Bank_Online_Accounts { get; set; }
        public virtual DbSet<Biding_Reserve_Plots> Biding_Reserve_Plots { get; set; }
        public virtual DbSet<Bill> Bills { get; set; }
        public virtual DbSet<Cancellation_Receipts> Cancellation_Receipts { get; set; }
        public virtual DbSet<Cheque_DemandDraft_PayOrder> Cheque_DemandDraft_PayOrder { get; set; }
        public virtual DbSet<COA_Mapper> COA_Mapper { get; set; }
        public virtual DbSet<Commercial_Cancelation_Req> Commercial_Cancelation_Req { get; set; }
        public virtual DbSet<Commercial_Comments> Commercial_Comments { get; set; }
        public virtual DbSet<Commercial_FloorsPlan> Commercial_FloorsPlan { get; set; }
        public virtual DbSet<Commercial_Installment_Structure> Commercial_Installment_Structure { get; set; }
        public virtual DbSet<Commercial_Installments> Commercial_Installments { get; set; }
        public virtual DbSet<Commercial_Levels_Shop> Commercial_Levels_Shop { get; set; }
        public virtual DbSet<Commercial_Room_Transfer> Commercial_Room_Transfer { get; set; }
        public virtual DbSet<Commercial_Rooms> Commercial_Rooms { get; set; }
        public virtual DbSet<Commercial_ServiceCharges> Commercial_ServiceCharges { get; set; }
        public virtual DbSet<Commercial_Transfer_Request> Commercial_Transfer_Request { get; set; }
        public virtual DbSet<CommercialShopBound> CommercialShopBounds { get; set; }
        public virtual DbSet<Comp_Dep_Desig> Comp_Dep_Desig { get; set; }
        public virtual DbSet<Company> Companies { get; set; }
        public virtual DbSet<Company_Assets> Company_Assets { get; set; }
        public virtual DbSet<Company_Assets_Types> Company_Assets_Types { get; set; }
        public virtual DbSet<Company_Users> Company_Users { get; set; }
        public virtual DbSet<Connection_Charges> Connection_Charges { get; set; }
        public virtual DbSet<CustomerLogin> CustomerLogins { get; set; }
        public virtual DbSet<CustomerRegisteration> CustomerRegisterations { get; set; }
        public virtual DbSet<Deal_Versions> Deal_Versions { get; set; }
        public virtual DbSet<Dealer_Commession> Dealer_Commession { get; set; }
        public virtual DbSet<DealerDeal> DealerDeals { get; set; }
        public virtual DbSet<Dealer> Dealers { get; set; }
        public virtual DbSet<Dealers_Deals> Dealers_Deals { get; set; }
        public virtual DbSet<Dealership> Dealerships { get; set; }
        public virtual DbSet<Dealership_Balance> Dealership_Balance { get; set; }
        public virtual DbSet<Dealership_Comments> Dealership_Comments { get; set; }
        public virtual DbSet<Depreciation_Installments> Depreciation_Installments { get; set; }
        public virtual DbSet<Descripency> Descripencies { get; set; }
        public virtual DbSet<Discount> Discounts { get; set; }
        public virtual DbSet<Discussion_Post> Discussion_Post { get; set; }
        public virtual DbSet<Discussion_Post_Attendees> Discussion_Post_Attendees { get; set; }
        public virtual DbSet<Discussion_Post_Comments> Discussion_Post_Comments { get; set; }
        public virtual DbSet<Education> Educations { get; set; }
        public virtual DbSet<Electricity_Bill> Electricity_Bill { get; set; }
        public virtual DbSet<Electricity_Bill_Details> Electricity_Bill_Details { get; set; }
        public virtual DbSet<Electricity_Bill_Rates> Electricity_Bill_Rates { get; set; }
        public virtual DbSet<Electricity_Meter_Reqs> Electricity_Meter_Reqs { get; set; }
        public virtual DbSet<Electricity_Unit_Slabs> Electricity_Unit_Slabs { get; set; }
        public virtual DbSet<Employee_Allownce> Employee_Allownce { get; set; }
        public virtual DbSet<Employee_Assets> Employee_Assets { get; set; }
        public virtual DbSet<Employee_Designations> Employee_Designations { get; set; }
        public virtual DbSet<Employee_Leaves> Employee_Leaves { get; set; }
        public virtual DbSet<EmployeeAcheivement> EmployeeAcheivements { get; set; }
        public virtual DbSet<EmployeeAward> EmployeeAwards { get; set; }
        public virtual DbSet<EmployeeFuel> EmployeeFuels { get; set; }
        public virtual DbSet<EmployeeHistory> EmployeeHistories { get; set; }
        public virtual DbSet<EmployeePerk> EmployeePerks { get; set; }
        public virtual DbSet<EmployeeReward> EmployeeRewards { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<EmployeeTraining> EmployeeTrainings { get; set; }
        public virtual DbSet<Error_Log> Error_Log { get; set; }
        public virtual DbSet<ErrorLog> ErrorLogs { get; set; }
        public virtual DbSet<FamilyProperty> FamilyProperties { get; set; }
        public virtual DbSet<File_Cancelation_Req> File_Cancelation_Req { get; set; }
        public virtual DbSet<File_Form> File_Form { get; set; }
        public virtual DbSet<File_Installments> File_Installments { get; set; }
        public virtual DbSet<File_Plot_Balance> File_Plot_Balance { get; set; }
        public virtual DbSet<Files_Comments> Files_Comments { get; set; }
        public virtual DbSet<Files_Transfer> Files_Transfer { get; set; }
        public virtual DbSet<Files_Transfer_Request> Files_Transfer_Request { get; set; }
        public virtual DbSet<Final_Deal_Plans> Final_Deal_Plans { get; set; }
        public virtual DbSet<FinancialAssistance> FinancialAssistances { get; set; }
        public virtual DbSet<Follow_ups> Follow_ups { get; set; }
        public virtual DbSet<Fuel_Details> Fuel_Details { get; set; }
        public virtual DbSet<FuelSheet> FuelSheets { get; set; }
        public virtual DbSet<General_Entries> General_Entries { get; set; }
        public virtual DbSet<Head_Configuration> Head_Configuration { get; set; }
        public virtual DbSet<HumanResource_Letter_Issuance> HumanResource_Letter_Issuance { get; set; }
        public virtual DbSet<Installment_Plot_Category> Installment_Plot_Category { get; set; }
        public virtual DbSet<Installment_Structure> Installment_Structure { get; set; }
        public virtual DbSet<Inventory> Inventories { get; set; }
        public virtual DbSet<Inventory_Bidding> Inventory_Bidding { get; set; }
        public virtual DbSet<Inventory_Category> Inventory_Category { get; set; }
        public virtual DbSet<Inventory_Demand_Order> Inventory_Demand_Order { get; set; }
        public virtual DbSet<Inventory_Demand_Req> Inventory_Demand_Req { get; set; }
        public virtual DbSet<Inventory_Department> Inventory_Department { get; set; }
        public virtual DbSet<Inventory_Ledger> Inventory_Ledger { get; set; }
        public virtual DbSet<Inventory_Location> Inventory_Location { get; set; }
        public virtual DbSet<Inventory_PO_Terms> Inventory_PO_Terms { get; set; }
        public virtual DbSet<Inventory_Purchase_Req> Inventory_Purchase_Req { get; set; }
        public virtual DbSet<Inventory_PurchaseOrder> Inventory_PurchaseOrder { get; set; }
        public virtual DbSet<Inventory_Stock_In> Inventory_Stock_In { get; set; }
        public virtual DbSet<Inventory_Stock_Out> Inventory_Stock_Out { get; set; }
        public virtual DbSet<Inventory_Warehouse> Inventory_Warehouse { get; set; }
        public virtual DbSet<Invoice> Invoices { get; set; }
        public virtual DbSet<Invoices_Files> Invoices_Files { get; set; }
        public virtual DbSet<Journal_Entries> Journal_Entries { get; set; }
        public virtual DbSet<Land_Deals> Land_Deals { get; set; }
        public virtual DbSet<Land_Payment_Schedule> Land_Payment_Schedule { get; set; }
        public virtual DbSet<Land_Record> Land_Record { get; set; }
        public virtual DbSet<Land_Seller_Party> Land_Seller_Party { get; set; }
        public virtual DbSet<Lead_Followups> Lead_Followups { get; set; }
        public virtual DbSet<Lead> Leads { get; set; }
        public virtual DbSet<Leave_HD_Requisitions> Leave_HD_Requisitions { get; set; }
        public virtual DbSet<LeaveRequisition> LeaveRequisitions { get; set; }
        public virtual DbSet<LeaveType> LeaveTypes { get; set; }
        public virtual DbSet<Level> Levels { get; set; }
        public virtual DbSet<Loan_Installments> Loan_Installments { get; set; }
        public virtual DbSet<LoanRequisition> LoanRequisitions { get; set; }
        public virtual DbSet<Marketing_Receipt_UpdateRequests> Marketing_Receipt_UpdateRequests { get; set; }
        public virtual DbSet<Material_Statements> Material_Statements { get; set; }
        public virtual DbSet<Members_Subscription> Members_Subscription { get; set; }
        public virtual DbSet<MembersFee> MembersFees { get; set; }
        public virtual DbSet<Messsage> Messsages { get; set; }
        public virtual DbSet<MeterReading> MeterReadings { get; set; }
        public virtual DbSet<MIS_Modules_Configurations> MIS_Modules_Configurations { get; set; }
        public virtual DbSet<MIS_Reminders> MIS_Reminders { get; set; }
        public virtual DbSet<MIS_Requests> MIS_Requests { get; set; }
        public virtual DbSet<Notification> Notifications { get; set; }
        public virtual DbSet<Opening_Closing_Balance> Opening_Closing_Balance { get; set; }
        public virtual DbSet<Other_Employee_Payments> Other_Employee_Payments { get; set; }
        public virtual DbSet<Other_Expense> Other_Expense { get; set; }
        public virtual DbSet<Owners_FingerPrints> Owners_FingerPrints { get; set; }
        public virtual DbSet<PattyCash_Accounts> PattyCash_Accounts { get; set; }
        public virtual DbSet<PattyCash_Items> PattyCash_Items { get; set; }
        public virtual DbSet<Payable_History> Payable_History { get; set; }
        public virtual DbSet<Payable> Payables { get; set; }
        public virtual DbSet<PaymentScheduleDetail> PaymentScheduleDetails { get; set; }
        public virtual DbSet<Plot_BondedBy> Plot_BondedBy { get; set; }
        public virtual DbSet<Plot_Cancelation_Req> Plot_Cancelation_Req { get; set; }
        public virtual DbSet<Plot_DC_Rate> Plot_DC_Rate { get; set; }
        public virtual DbSet<Plot_ElectricityMeters> Plot_ElectricityMeters { get; set; }
        public virtual DbSet<Plot_Installments> Plot_Installments { get; set; }
        public virtual DbSet<Plot_LastOwner> Plot_LastOwner { get; set; }
        public virtual DbSet<Plot_NOC> Plot_NOC { get; set; }
        public virtual DbSet<Plot_Ownership> Plot_Ownership { get; set; }
        public virtual DbSet<Plot_Prefrence> Plot_Prefrence { get; set; }
        public virtual DbSet<Plot_Rates> Plot_Rates { get; set; }
        public virtual DbSet<Plot_Rental> Plot_Rental { get; set; }
        public virtual DbSet<Plot_ServiceCharges> Plot_ServiceCharges { get; set; }
        public virtual DbSet<PlotmetersandArrear> PlotmetersandArrears { get; set; }
        public virtual DbSet<Plot> Plots { get; set; }
        public virtual DbSet<Plots_Category> Plots_Category { get; set; }
        public virtual DbSet<Plots_Comments> Plots_Comments { get; set; }
        public virtual DbSet<Plots_Deleted> Plots_Deleted { get; set; }
        public virtual DbSet<Plots_Transfer_Request> Plots_Transfer_Request { get; set; }
        public virtual DbSet<PlotToMove> PlotToMoves { get; set; }
        public virtual DbSet<Plts_Com_Installment_Structure> Plts_Com_Installment_Structure { get; set; }
        public virtual DbSet<Pre_AllotmentLetter> Pre_AllotmentLetter { get; set; }
        public virtual DbSet<Premium_Ownership> Premium_Ownership { get; set; }
        public virtual DbSet<PremiumPlot> PremiumPlots { get; set; }
        public virtual DbSet<Prj_Attendees> Prj_Attendees { get; set; }
        public virtual DbSet<Prj_Departments> Prj_Departments { get; set; }
        public virtual DbSet<Prj_Files> Prj_Files { get; set; }
        public virtual DbSet<Prj_Milestone_Task_Subtask_Versions> Prj_Milestone_Task_Subtask_Versions { get; set; }
        public virtual DbSet<Prj_Milestone_Tasks_SubTasks> Prj_Milestone_Tasks_SubTasks { get; set; }
        public virtual DbSet<Prj_Resources> Prj_Resources { get; set; }
        public virtual DbSet<Prj_Voucher_Req> Prj_Voucher_Req { get; set; }
        public virtual DbSet<Prj_WBD_Activity> Prj_WBD_Activity { get; set; }
        public virtual DbSet<Project_Payment_Schedule> Project_Payment_Schedule { get; set; }
        public virtual DbSet<Project> Projects { get; set; }
        public virtual DbSet<Property_Deal> Property_Deal { get; set; }
        public virtual DbSet<Property_Deal_Parties> Property_Deal_Parties { get; set; }
        public virtual DbSet<PropertyDeal_Followups> PropertyDeal_Followups { get; set; }
        public virtual DbSet<PropertyDeal_Receipts> PropertyDeal_Receipts { get; set; }
        public virtual DbSet<PropertyDeal_Requests> PropertyDeal_Requests { get; set; }
        public virtual DbSet<PropertyDeal_Voucher> PropertyDeal_Voucher { get; set; }
        public virtual DbSet<QR_Codes> QR_Codes { get; set; }
        public virtual DbSet<QuestionnaireFeedback> QuestionnaireFeedbacks { get; set; }
        public virtual DbSet<QuestionnaireForm> QuestionnaireForms { get; set; }
        public virtual DbSet<RealEstate_Blocks> RealEstate_Blocks { get; set; }
        public virtual DbSet<RealEstate_Phases> RealEstate_Phases { get; set; }
        public virtual DbSet<RealEstate_Projects> RealEstate_Projects { get; set; }
        public virtual DbSet<Receipt_Adjust_Request> Receipt_Adjust_Request { get; set; }
        public virtual DbSet<Receipt_UpdateRequests> Receipt_UpdateRequests { get; set; }
        public virtual DbSet<ReceiptRequest> ReceiptRequests { get; set; }
        public virtual DbSet<Receipt> Receipts { get; set; }
        public virtual DbSet<Receipts_Pending> Receipts_Pending { get; set; }
        public virtual DbSet<Receivable> Receivables { get; set; }
        public virtual DbSet<Refund_Amounts> Refund_Amounts { get; set; }
        public virtual DbSet<RefundAmountsReq> RefundAmountsReqs { get; set; }
        public virtual DbSet<RegisterMember> RegisterMembers { get; set; }
        public virtual DbSet<Reminder_Comments> Reminder_Comments { get; set; }
        public virtual DbSet<Repository_Files> Repository_Files { get; set; }
        public virtual DbSet<Reversel> Reversels { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<Roster_Templates> Roster_Templates { get; set; }
        public virtual DbSet<Salary> Salaries { get; set; }
        public virtual DbSet<Salaries_Details> Salaries_Details { get; set; }
        public virtual DbSet<Salaries_Allownce_Type> Salaries_Allownce_Type { get; set; }
        public virtual DbSet<Salary_Log> Salary_Log { get; set; }
        public virtual DbSet<Sale_Report> Sale_Report { get; set; }
        public virtual DbSet<SAM_Plots_Inventory> SAM_Plots_Inventory { get; set; }
        public virtual DbSet<SAM_Receipts> SAM_Receipts { get; set; }
        public virtual DbSet<SAM_Voucher> SAM_Voucher { get; set; }
        public virtual DbSet<Security> Securities { get; set; }
        public virtual DbSet<Service_Bidding> Service_Bidding { get; set; }
        public virtual DbSet<Service_Charges_Details> Service_Charges_Details { get; set; }
        public virtual DbSet<Service_Charges_Types> Service_Charges_Types { get; set; }
        public virtual DbSet<Service_Completion> Service_Completion { get; set; }
        public virtual DbSet<Service_PurchaseOrder> Service_PurchaseOrder { get; set; }
        public virtual DbSet<ServiceCharges_Arrears> ServiceCharges_Arrears { get; set; }
        public virtual DbSet<ServiceCharges_Bill> ServiceCharges_Bill { get; set; }
        public virtual DbSet<ServiceChargesInstallment> ServiceChargesInstallments { get; set; }
        public virtual DbSet<ServiceChargesPermission> ServiceChargesPermissions { get; set; }
        public virtual DbSet<Services_Purchase_Req> Services_Purchase_Req { get; set; }
        public virtual DbSet<SmartGoal> SmartGoals { get; set; }
        public virtual DbSet<SpeedFest> SpeedFests { get; set; }
        public virtual DbSet<SvcCharges_Installments_Structure> SvcCharges_Installments_Structure { get; set; }
        public virtual DbSet<TEST_Booking> TEST_Booking { get; set; }
        public virtual DbSet<Test_Plot_Ownership> Test_Plot_Ownership { get; set; }
        public virtual DbSet<TEST_Plots> TEST_Plots { get; set; }
        public virtual DbSet<TEst_Receipts> TEst_Receipts { get; set; }
        public virtual DbSet<Ticket_Attendees> Ticket_Attendees { get; set; }
        public virtual DbSet<Ticket_Comments> Ticket_Comments { get; set; }
        public virtual DbSet<Ticket_Types> Ticket_Types { get; set; }
        public virtual DbSet<Ticket> Tickets { get; set; }
        public virtual DbSet<Token_File_Data> Token_File_Data { get; set; }
        public virtual DbSet<UserClaim> UserClaims { get; set; }
        public virtual DbSet<UserLogin> UserLogins { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<UsersLeaf> UsersLeaves { get; set; }
        public virtual DbSet<Vehicle_Fuel_Details> Vehicle_Fuel_Details { get; set; }
        public virtual DbSet<Vendor> Vendors { get; set; }
        public virtual DbSet<Vendor_Credit_Terms> Vendor_Credit_Terms { get; set; }
        public virtual DbSet<Vendor_Representative> Vendor_Representative { get; set; }
        public virtual DbSet<Voucher> Vouchers { get; set; }
        public virtual DbSet<Voucher_Details> Voucher_Details { get; set; }
        public virtual DbSet<VoucherRequest> VoucherRequests { get; set; }
        public virtual DbSet<Warehouse_Shelf> Warehouse_Shelf { get; set; }
        public virtual DbSet<WorkExperience> WorkExperiences { get; set; }
        public virtual DbSet<AggregatedCounter> AggregatedCounters { get; set; }
        public virtual DbSet<Hash> Hashes { get; set; }
        public virtual DbSet<Job> Jobs { get; set; }
        public virtual DbSet<JobParameter> JobParameters { get; set; }
        public virtual DbSet<JobQueue> JobQueues { get; set; }
        public virtual DbSet<List> Lists { get; set; }
        public virtual DbSet<Schema> Schemata { get; set; }
        public virtual DbSet<Server> Servers { get; set; }
        public virtual DbSet<Set> Sets { get; set; }
        public virtual DbSet<State> States { get; set; }
        public virtual DbSet<Fuel> Fuels { get; set; }
        public virtual DbSet<ReceiptNumber> ReceiptNumbers { get; set; }
        public virtual DbSet<SAP_DeletedPlots_202207011835> SAP_DeletedPlots_202207011835 { get; set; }
        public virtual DbSet<Sms_Draft> Sms_Draft { get; set; }
        public virtual DbSet<Counter> Counters { get; set; }
    
        public virtual int Add_CustomerLogin(string name, string father_Husband, string email, string phone, string cNIC, string password)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var father_HusbandParameter = father_Husband != null ?
                new ObjectParameter("Father_Husband", father_Husband) :
                new ObjectParameter("Father_Husband", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var cNICParameter = cNIC != null ?
                new ObjectParameter("CNIC", cNIC) :
                new ObjectParameter("CNIC", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_CustomerLogin", nameParameter, father_HusbandParameter, emailParameter, phoneParameter, cNICParameter, passwordParameter);
        }
    
        public virtual int Add_CustomerRegisteration(string name, string father_Husband, string email, string phone, string cNIC, string password, Nullable<int> otp_number)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var father_HusbandParameter = father_Husband != null ?
                new ObjectParameter("Father_Husband", father_Husband) :
                new ObjectParameter("Father_Husband", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var cNICParameter = cNIC != null ?
                new ObjectParameter("CNIC", cNIC) :
                new ObjectParameter("CNIC", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var otp_numberParameter = otp_number.HasValue ?
                new ObjectParameter("otp_number", otp_number) :
                new ObjectParameter("otp_number", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_CustomerRegisteration", nameParameter, father_HusbandParameter, emailParameter, phoneParameter, cNICParameter, passwordParameter, otp_numberParameter);
        }
    
        public virtual ObjectResult<API_Sp_Get_PlotInfo_Result> API_Sp_Get_PlotInfo(string plotid)
        {
            var plotidParameter = plotid != null ?
                new ObjectParameter("plotid", plotid) :
                new ObjectParameter("plotid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<API_Sp_Get_PlotInfo_Result>("API_Sp_Get_PlotInfo", plotidParameter);
        }
    
        public virtual ObjectResult<API_Sp_Get_Plots_Result> API_Sp_Get_Plots(string phone, string cnic)
        {
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var cnicParameter = cnic != null ?
                new ObjectParameter("cnic", cnic) :
                new ObjectParameter("cnic", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<API_Sp_Get_Plots_Result>("API_Sp_Get_Plots", phoneParameter, cnicParameter);
        }
    
        public virtual ObjectResult<API_Sp_Get_PlotsInstallmentInfo_Result> API_Sp_Get_PlotsInstallmentInfo(Nullable<long> plotid)
        {
            var plotidParameter = plotid.HasValue ?
                new ObjectParameter("plotid", plotid) :
                new ObjectParameter("plotid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<API_Sp_Get_PlotsInstallmentInfo_Result>("API_Sp_Get_PlotsInstallmentInfo", plotidParameter);
        }
    
        public virtual int API_Sp_update_PlotOwnershipEmail(string email, string cnic_nicop)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var cnic_nicopParameter = cnic_nicop != null ?
                new ObjectParameter("cnic_nicop", cnic_nicop) :
                new ObjectParameter("cnic_nicop", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("API_Sp_update_PlotOwnershipEmail", emailParameter, cnic_nicopParameter);
        }
    
        public virtual int Get_Business_Performance_Ratio()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Get_Business_Performance_Ratio");
        }
    
        public virtual int Get_PLotInstallment_Report(Nullable<int> fromyear)
        {
            var fromyearParameter = fromyear.HasValue ?
                new ObjectParameter("Fromyear", fromyear) :
                new ObjectParameter("Fromyear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Get_PLotInstallment_Report", fromyearParameter);
        }
    
        public virtual int getreceipt()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("getreceipt");
        }
    
        public virtual int Plot_Add_ActPlotOwnerShip(string plot_Size, string name, string father_Husband, string cNIC_NICOP, string mobile_1, string mobile_2, string phone_Office, string residential, string postal_Address, string residential_Address, string email, string occupation, string nationality, string date_Of_Birth, string nominee_Name, string nominee_Relation, string nominee_Address, string nominee_CNIC_NICOP, Nullable<long> plot_Id, Nullable<System.DateTime> bookingdate, string city, Nullable<decimal> total, Nullable<decimal> discount, Nullable<long> userid, string inst, string rece)
        {
            var plot_SizeParameter = plot_Size != null ?
                new ObjectParameter("Plot_Size", plot_Size) :
                new ObjectParameter("Plot_Size", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var father_HusbandParameter = father_Husband != null ?
                new ObjectParameter("Father_Husband", father_Husband) :
                new ObjectParameter("Father_Husband", typeof(string));
    
            var cNIC_NICOPParameter = cNIC_NICOP != null ?
                new ObjectParameter("CNIC_NICOP", cNIC_NICOP) :
                new ObjectParameter("CNIC_NICOP", typeof(string));
    
            var mobile_1Parameter = mobile_1 != null ?
                new ObjectParameter("Mobile_1", mobile_1) :
                new ObjectParameter("Mobile_1", typeof(string));
    
            var mobile_2Parameter = mobile_2 != null ?
                new ObjectParameter("Mobile_2", mobile_2) :
                new ObjectParameter("Mobile_2", typeof(string));
    
            var phone_OfficeParameter = phone_Office != null ?
                new ObjectParameter("Phone_Office", phone_Office) :
                new ObjectParameter("Phone_Office", typeof(string));
    
            var residentialParameter = residential != null ?
                new ObjectParameter("Residential", residential) :
                new ObjectParameter("Residential", typeof(string));
    
            var postal_AddressParameter = postal_Address != null ?
                new ObjectParameter("Postal_Address", postal_Address) :
                new ObjectParameter("Postal_Address", typeof(string));
    
            var residential_AddressParameter = residential_Address != null ?
                new ObjectParameter("Residential_Address", residential_Address) :
                new ObjectParameter("Residential_Address", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var occupationParameter = occupation != null ?
                new ObjectParameter("Occupation", occupation) :
                new ObjectParameter("Occupation", typeof(string));
    
            var nationalityParameter = nationality != null ?
                new ObjectParameter("Nationality", nationality) :
                new ObjectParameter("Nationality", typeof(string));
    
            var date_Of_BirthParameter = date_Of_Birth != null ?
                new ObjectParameter("Date_Of_Birth", date_Of_Birth) :
                new ObjectParameter("Date_Of_Birth", typeof(string));
    
            var nominee_NameParameter = nominee_Name != null ?
                new ObjectParameter("Nominee_Name", nominee_Name) :
                new ObjectParameter("Nominee_Name", typeof(string));
    
            var nominee_RelationParameter = nominee_Relation != null ?
                new ObjectParameter("Nominee_Relation", nominee_Relation) :
                new ObjectParameter("Nominee_Relation", typeof(string));
    
            var nominee_AddressParameter = nominee_Address != null ?
                new ObjectParameter("Nominee_Address", nominee_Address) :
                new ObjectParameter("Nominee_Address", typeof(string));
    
            var nominee_CNIC_NICOPParameter = nominee_CNIC_NICOP != null ?
                new ObjectParameter("Nominee_CNIC_NICOP", nominee_CNIC_NICOP) :
                new ObjectParameter("Nominee_CNIC_NICOP", typeof(string));
    
            var plot_IdParameter = plot_Id.HasValue ?
                new ObjectParameter("Plot_Id", plot_Id) :
                new ObjectParameter("Plot_Id", typeof(long));
    
            var bookingdateParameter = bookingdate.HasValue ?
                new ObjectParameter("bookingdate", bookingdate) :
                new ObjectParameter("bookingdate", typeof(System.DateTime));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(decimal));
    
            var discountParameter = discount.HasValue ?
                new ObjectParameter("discount", discount) :
                new ObjectParameter("discount", typeof(decimal));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(long));
    
            var instParameter = inst != null ?
                new ObjectParameter("inst", inst) :
                new ObjectParameter("inst", typeof(string));
    
            var receParameter = rece != null ?
                new ObjectParameter("Rece", rece) :
                new ObjectParameter("Rece", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Plot_Add_ActPlotOwnerShip", plot_SizeParameter, nameParameter, father_HusbandParameter, cNIC_NICOPParameter, mobile_1Parameter, mobile_2Parameter, phone_OfficeParameter, residentialParameter, postal_AddressParameter, residential_AddressParameter, emailParameter, occupationParameter, nationalityParameter, date_Of_BirthParameter, nominee_NameParameter, nominee_RelationParameter, nominee_AddressParameter, nominee_CNIC_NICOPParameter, plot_IdParameter, bookingdateParameter, cityParameter, totalParameter, discountParameter, useridParameter, instParameter, receParameter);
        }
    
        public virtual int PLOT_add_booking(string reg, Nullable<decimal> amount, Nullable<System.DateTime> date)
        {
            var regParameter = reg != null ?
                new ObjectParameter("reg", reg) :
                new ObjectParameter("reg", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PLOT_add_booking", regParameter, amountParameter, dateParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Plot_add_Plot(string plot_Number, Nullable<long> block_Id, Nullable<long> phase_Id, string sector, string plot_Size, Nullable<int> plot_Category, string plot_Location, string type, string road_Type, string oldpltnum, string reg)
        {
            var plot_NumberParameter = plot_Number != null ?
                new ObjectParameter("Plot_Number", plot_Number) :
                new ObjectParameter("Plot_Number", typeof(string));
    
            var block_IdParameter = block_Id.HasValue ?
                new ObjectParameter("Block_Id", block_Id) :
                new ObjectParameter("Block_Id", typeof(long));
    
            var phase_IdParameter = phase_Id.HasValue ?
                new ObjectParameter("Phase_Id", phase_Id) :
                new ObjectParameter("Phase_Id", typeof(long));
    
            var sectorParameter = sector != null ?
                new ObjectParameter("Sector", sector) :
                new ObjectParameter("Sector", typeof(string));
    
            var plot_SizeParameter = plot_Size != null ?
                new ObjectParameter("Plot_Size", plot_Size) :
                new ObjectParameter("Plot_Size", typeof(string));
    
            var plot_CategoryParameter = plot_Category.HasValue ?
                new ObjectParameter("Plot_Category", plot_Category) :
                new ObjectParameter("Plot_Category", typeof(int));
    
            var plot_LocationParameter = plot_Location != null ?
                new ObjectParameter("Plot_Location", plot_Location) :
                new ObjectParameter("Plot_Location", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var road_TypeParameter = road_Type != null ?
                new ObjectParameter("Road_Type", road_Type) :
                new ObjectParameter("Road_Type", typeof(string));
    
            var oldpltnumParameter = oldpltnum != null ?
                new ObjectParameter("oldpltnum", oldpltnum) :
                new ObjectParameter("oldpltnum", typeof(string));
    
            var regParameter = reg != null ?
                new ObjectParameter("reg", reg) :
                new ObjectParameter("reg", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Plot_add_Plot", plot_NumberParameter, block_IdParameter, phase_IdParameter, sectorParameter, plot_SizeParameter, plot_CategoryParameter, plot_LocationParameter, typeParameter, road_TypeParameter, oldpltnumParameter, regParameter);
        }
    
        public virtual int Plot_add_Plot_regno(string plot_Number, Nullable<long> block_Id, Nullable<long> phase_Id, string sector, string plot_Size, Nullable<int> plot_Category, string plot_Location, string type, string road_Type, string oldnum, string oldpltnum, string reg)
        {
            var plot_NumberParameter = plot_Number != null ?
                new ObjectParameter("Plot_Number", plot_Number) :
                new ObjectParameter("Plot_Number", typeof(string));
    
            var block_IdParameter = block_Id.HasValue ?
                new ObjectParameter("Block_Id", block_Id) :
                new ObjectParameter("Block_Id", typeof(long));
    
            var phase_IdParameter = phase_Id.HasValue ?
                new ObjectParameter("Phase_Id", phase_Id) :
                new ObjectParameter("Phase_Id", typeof(long));
    
            var sectorParameter = sector != null ?
                new ObjectParameter("Sector", sector) :
                new ObjectParameter("Sector", typeof(string));
    
            var plot_SizeParameter = plot_Size != null ?
                new ObjectParameter("Plot_Size", plot_Size) :
                new ObjectParameter("Plot_Size", typeof(string));
    
            var plot_CategoryParameter = plot_Category.HasValue ?
                new ObjectParameter("Plot_Category", plot_Category) :
                new ObjectParameter("Plot_Category", typeof(int));
    
            var plot_LocationParameter = plot_Location != null ?
                new ObjectParameter("Plot_Location", plot_Location) :
                new ObjectParameter("Plot_Location", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var road_TypeParameter = road_Type != null ?
                new ObjectParameter("Road_Type", road_Type) :
                new ObjectParameter("Road_Type", typeof(string));
    
            var oldnumParameter = oldnum != null ?
                new ObjectParameter("oldnum", oldnum) :
                new ObjectParameter("oldnum", typeof(string));
    
            var oldpltnumParameter = oldpltnum != null ?
                new ObjectParameter("oldpltnum", oldpltnum) :
                new ObjectParameter("oldpltnum", typeof(string));
    
            var regParameter = reg != null ?
                new ObjectParameter("reg", reg) :
                new ObjectParameter("reg", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Plot_add_Plot_regno", plot_NumberParameter, block_IdParameter, phase_IdParameter, sectorParameter, plot_SizeParameter, plot_CategoryParameter, plot_LocationParameter, typeParameter, road_TypeParameter, oldnumParameter, oldpltnumParameter, regParameter);
        }
    
        public virtual int Plot_Add_PlotOwnerShip(string reg, string plot_Size, string name, string father_Husband, string cNIC_NICOP, string mobile_1, string mobile_2, string phone_Office, string residential, string postal_Address, string residential_Address, string email, string occupation, string nationality, string date_Of_Birth, string city, Nullable<decimal> total, Nullable<decimal> discount, Nullable<System.DateTime> bookingdate, Nullable<int> inst)
        {
            var regParameter = reg != null ?
                new ObjectParameter("reg", reg) :
                new ObjectParameter("reg", typeof(string));
    
            var plot_SizeParameter = plot_Size != null ?
                new ObjectParameter("Plot_Size", plot_Size) :
                new ObjectParameter("Plot_Size", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var father_HusbandParameter = father_Husband != null ?
                new ObjectParameter("Father_Husband", father_Husband) :
                new ObjectParameter("Father_Husband", typeof(string));
    
            var cNIC_NICOPParameter = cNIC_NICOP != null ?
                new ObjectParameter("CNIC_NICOP", cNIC_NICOP) :
                new ObjectParameter("CNIC_NICOP", typeof(string));
    
            var mobile_1Parameter = mobile_1 != null ?
                new ObjectParameter("Mobile_1", mobile_1) :
                new ObjectParameter("Mobile_1", typeof(string));
    
            var mobile_2Parameter = mobile_2 != null ?
                new ObjectParameter("Mobile_2", mobile_2) :
                new ObjectParameter("Mobile_2", typeof(string));
    
            var phone_OfficeParameter = phone_Office != null ?
                new ObjectParameter("Phone_Office", phone_Office) :
                new ObjectParameter("Phone_Office", typeof(string));
    
            var residentialParameter = residential != null ?
                new ObjectParameter("Residential", residential) :
                new ObjectParameter("Residential", typeof(string));
    
            var postal_AddressParameter = postal_Address != null ?
                new ObjectParameter("Postal_Address", postal_Address) :
                new ObjectParameter("Postal_Address", typeof(string));
    
            var residential_AddressParameter = residential_Address != null ?
                new ObjectParameter("Residential_Address", residential_Address) :
                new ObjectParameter("Residential_Address", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var occupationParameter = occupation != null ?
                new ObjectParameter("Occupation", occupation) :
                new ObjectParameter("Occupation", typeof(string));
    
            var nationalityParameter = nationality != null ?
                new ObjectParameter("Nationality", nationality) :
                new ObjectParameter("Nationality", typeof(string));
    
            var date_Of_BirthParameter = date_Of_Birth != null ?
                new ObjectParameter("Date_Of_Birth", date_Of_Birth) :
                new ObjectParameter("Date_Of_Birth", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(decimal));
    
            var discountParameter = discount.HasValue ?
                new ObjectParameter("discount", discount) :
                new ObjectParameter("discount", typeof(decimal));
    
            var bookingdateParameter = bookingdate.HasValue ?
                new ObjectParameter("bookingdate", bookingdate) :
                new ObjectParameter("bookingdate", typeof(System.DateTime));
    
            var instParameter = inst.HasValue ?
                new ObjectParameter("inst", inst) :
                new ObjectParameter("inst", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Plot_Add_PlotOwnerShip", regParameter, plot_SizeParameter, nameParameter, father_HusbandParameter, cNIC_NICOPParameter, mobile_1Parameter, mobile_2Parameter, phone_OfficeParameter, residentialParameter, postal_AddressParameter, residential_AddressParameter, emailParameter, occupationParameter, nationalityParameter, date_Of_BirthParameter, cityParameter, totalParameter, discountParameter, bookingdateParameter, instParameter);
        }
    
        public virtual int Plot_Add_Receipt(string receptno, Nullable<decimal> amount, Nullable<System.DateTime> recdate, string paymentType, string bank, string ch_Pay_Draft_No, string ch_Pay_Draft_Date, string reg, Nullable<long> token, Nullable<long> userid, string text, string des, Nullable<bool> cancel)
        {
            var receptnoParameter = receptno != null ?
                new ObjectParameter("receptno", receptno) :
                new ObjectParameter("receptno", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var recdateParameter = recdate.HasValue ?
                new ObjectParameter("recdate", recdate) :
                new ObjectParameter("recdate", typeof(System.DateTime));
    
            var paymentTypeParameter = paymentType != null ?
                new ObjectParameter("PaymentType", paymentType) :
                new ObjectParameter("PaymentType", typeof(string));
    
            var bankParameter = bank != null ?
                new ObjectParameter("Bank", bank) :
                new ObjectParameter("Bank", typeof(string));
    
            var ch_Pay_Draft_NoParameter = ch_Pay_Draft_No != null ?
                new ObjectParameter("Ch_Pay_Draft_No", ch_Pay_Draft_No) :
                new ObjectParameter("Ch_Pay_Draft_No", typeof(string));
    
            var ch_Pay_Draft_DateParameter = ch_Pay_Draft_Date != null ?
                new ObjectParameter("Ch_Pay_Draft_Date", ch_Pay_Draft_Date) :
                new ObjectParameter("Ch_Pay_Draft_Date", typeof(string));
    
            var regParameter = reg != null ?
                new ObjectParameter("Reg", reg) :
                new ObjectParameter("Reg", typeof(string));
    
            var tokenParameter = token.HasValue ?
                new ObjectParameter("Token", token) :
                new ObjectParameter("Token", typeof(long));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var textParameter = text != null ?
                new ObjectParameter("text", text) :
                new ObjectParameter("text", typeof(string));
    
            var desParameter = des != null ?
                new ObjectParameter("des", des) :
                new ObjectParameter("des", typeof(string));
    
            var cancelParameter = cancel.HasValue ?
                new ObjectParameter("cancel", cancel) :
                new ObjectParameter("cancel", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Plot_Add_Receipt", receptnoParameter, amountParameter, recdateParameter, paymentTypeParameter, bankParameter, ch_Pay_Draft_NoParameter, ch_Pay_Draft_DateParameter, regParameter, tokenParameter, useridParameter, textParameter, desParameter, cancelParameter);
        }
    
        public virtual ObjectResult<Plot_Get_Booking_Result> Plot_Get_Booking()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Plot_Get_Booking_Result>("Plot_Get_Booking");
        }
    
        public virtual ObjectResult<Plot_Get_Owner_Result> Plot_Get_Owner()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Plot_Get_Owner_Result>("Plot_Get_Owner");
        }
    
        public virtual ObjectResult<Plot_get_Plots_Result> Plot_get_Plots()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Plot_get_Plots_Result>("Plot_get_Plots");
        }
    
        public virtual ObjectResult<Plot_Get_Receipt_Result> Plot_Get_Receipt()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Plot_Get_Receipt_Result>("Plot_Get_Receipt");
        }
    
        public virtual ObjectResult<Plot_get_testPlots_Result> Plot_get_testPlots()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Plot_get_testPlots_Result>("Plot_get_testPlots");
        }
    
        public virtual int Plot_Update_NewMeterReading(Nullable<long> id, Nullable<long> curr, Nullable<int> un)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var currParameter = curr.HasValue ?
                new ObjectParameter("curr", curr) :
                new ObjectParameter("curr", typeof(long));
    
            var unParameter = un.HasValue ?
                new ObjectParameter("un", un) :
                new ObjectParameter("un", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Plot_Update_NewMeterReading", idParameter, currParameter, unParameter);
        }
    
        public virtual int Plot_update_Plotdata(Nullable<long> id, string loca, Nullable<long> catid, string road, string pltsize)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var locaParameter = loca != null ?
                new ObjectParameter("loca", loca) :
                new ObjectParameter("loca", typeof(string));
    
            var catidParameter = catid.HasValue ?
                new ObjectParameter("catid", catid) :
                new ObjectParameter("catid", typeof(long));
    
            var roadParameter = road != null ?
                new ObjectParameter("road", road) :
                new ObjectParameter("road", typeof(string));
    
            var pltsizeParameter = pltsize != null ?
                new ObjectParameter("pltsize", pltsize) :
                new ObjectParameter("pltsize", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Plot_update_Plotdata", idParameter, locaParameter, catidParameter, roadParameter, pltsizeParameter);
        }
    
        public virtual ObjectResult<Refund_Report_Result> Refund_Report(string module, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string size, string block)
        {
            var moduleParameter = module != null ?
                new ObjectParameter("Module", module) :
                new ObjectParameter("Module", typeof(string));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var sizeParameter = size != null ?
                new ObjectParameter("size", size) :
                new ObjectParameter("size", typeof(string));
    
            var blockParameter = block != null ?
                new ObjectParameter("block", block) :
                new ObjectParameter("block", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Refund_Report_Result>("Refund_Report", moduleParameter, dateFromParameter, dateToParameter, sizeParameter, blockParameter);
        }
    
        public virtual int Sp_Action_ReceiptCancelation(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Action_ReceiptCancelation", idParameter);
        }
    
        public virtual int Sp_Add_Activity(Nullable<long> userid, string desc, string activity, string module, string activityType, Nullable<long> plotid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var descParameter = desc != null ?
                new ObjectParameter("desc", desc) :
                new ObjectParameter("desc", typeof(string));
    
            var activityParameter = activity != null ?
                new ObjectParameter("activity", activity) :
                new ObjectParameter("activity", typeof(string));
    
            var moduleParameter = module != null ?
                new ObjectParameter("module", module) :
                new ObjectParameter("module", typeof(string));
    
            var activityTypeParameter = activityType != null ?
                new ObjectParameter("activityType", activityType) :
                new ObjectParameter("activityType", typeof(string));
    
            var plotidParameter = plotid.HasValue ?
                new ObjectParameter("plotid", plotid) :
                new ObjectParameter("plotid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_Activity", useridParameter, descParameter, activityParameter, moduleParameter, activityTypeParameter, plotidParameter);
        }
    
        public virtual int Sp_Add_AdminProject(string inst)
        {
            var instParameter = inst != null ?
                new ObjectParameter("inst", inst) :
                new ObjectParameter("inst", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_AdminProject", instParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_AllotmentLetter(string ref_No, string name, string father_Name, string cNIC, string address, string project, string phase, string block, string plot_No, string plot_Size, string plot_Type, string area, string diemensions, string witness1, string witness2, Nullable<long> userid, Nullable<long> plotid, Nullable<long> plotownid, string own_Img, string own_Img2, string own_Img3, string own_Img4, string own_Img5, string own_Img6, string headname, string desi)
        {
            var ref_NoParameter = ref_No != null ?
                new ObjectParameter("Ref_No", ref_No) :
                new ObjectParameter("Ref_No", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var father_NameParameter = father_Name != null ?
                new ObjectParameter("Father_Name", father_Name) :
                new ObjectParameter("Father_Name", typeof(string));
    
            var cNICParameter = cNIC != null ?
                new ObjectParameter("CNIC", cNIC) :
                new ObjectParameter("CNIC", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var projectParameter = project != null ?
                new ObjectParameter("Project", project) :
                new ObjectParameter("Project", typeof(string));
    
            var phaseParameter = phase != null ?
                new ObjectParameter("Phase", phase) :
                new ObjectParameter("Phase", typeof(string));
    
            var blockParameter = block != null ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(string));
    
            var plot_NoParameter = plot_No != null ?
                new ObjectParameter("Plot_No", plot_No) :
                new ObjectParameter("Plot_No", typeof(string));
    
            var plot_SizeParameter = plot_Size != null ?
                new ObjectParameter("Plot_Size", plot_Size) :
                new ObjectParameter("Plot_Size", typeof(string));
    
            var plot_TypeParameter = plot_Type != null ?
                new ObjectParameter("Plot_Type", plot_Type) :
                new ObjectParameter("Plot_Type", typeof(string));
    
            var areaParameter = area != null ?
                new ObjectParameter("Area", area) :
                new ObjectParameter("Area", typeof(string));
    
            var diemensionsParameter = diemensions != null ?
                new ObjectParameter("Diemensions", diemensions) :
                new ObjectParameter("Diemensions", typeof(string));
    
            var witness1Parameter = witness1 != null ?
                new ObjectParameter("Witness1", witness1) :
                new ObjectParameter("Witness1", typeof(string));
    
            var witness2Parameter = witness2 != null ?
                new ObjectParameter("Witness2", witness2) :
                new ObjectParameter("Witness2", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var plotidParameter = plotid.HasValue ?
                new ObjectParameter("plotid", plotid) :
                new ObjectParameter("plotid", typeof(long));
    
            var plotownidParameter = plotownid.HasValue ?
                new ObjectParameter("plotownid", plotownid) :
                new ObjectParameter("plotownid", typeof(long));
    
            var own_ImgParameter = own_Img != null ?
                new ObjectParameter("Own_Img", own_Img) :
                new ObjectParameter("Own_Img", typeof(string));
    
            var own_Img2Parameter = own_Img2 != null ?
                new ObjectParameter("Own_Img2", own_Img2) :
                new ObjectParameter("Own_Img2", typeof(string));
    
            var own_Img3Parameter = own_Img3 != null ?
                new ObjectParameter("Own_Img3", own_Img3) :
                new ObjectParameter("Own_Img3", typeof(string));
    
            var own_Img4Parameter = own_Img4 != null ?
                new ObjectParameter("Own_Img4", own_Img4) :
                new ObjectParameter("Own_Img4", typeof(string));
    
            var own_Img5Parameter = own_Img5 != null ?
                new ObjectParameter("Own_Img5", own_Img5) :
                new ObjectParameter("Own_Img5", typeof(string));
    
            var own_Img6Parameter = own_Img6 != null ?
                new ObjectParameter("Own_Img6", own_Img6) :
                new ObjectParameter("Own_Img6", typeof(string));
    
            var headnameParameter = headname != null ?
                new ObjectParameter("headname", headname) :
                new ObjectParameter("headname", typeof(string));
    
            var desiParameter = desi != null ?
                new ObjectParameter("desi", desi) :
                new ObjectParameter("desi", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_AllotmentLetter", ref_NoParameter, nameParameter, father_NameParameter, cNICParameter, addressParameter, projectParameter, phaseParameter, blockParameter, plot_NoParameter, plot_SizeParameter, plot_TypeParameter, areaParameter, diemensionsParameter, witness1Parameter, witness2Parameter, useridParameter, plotidParameter, plotownidParameter, own_ImgParameter, own_Img2Parameter, own_Img3Parameter, own_Img4Parameter, own_Img5Parameter, own_Img6Parameter, headnameParameter, desiParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_Amount_Clearance(Nullable<decimal> amount, string information, string module, string type)
        {
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var informationParameter = information != null ?
                new ObjectParameter("Information", information) :
                new ObjectParameter("Information", typeof(string));
    
            var moduleParameter = module != null ?
                new ObjectParameter("Module", module) :
                new ObjectParameter("Module", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_Amount_Clearance", amountParameter, informationParameter, moduleParameter, typeParameter);
        }
    
        public virtual int Sp_Add_AppliedLoans(Nullable<long> userID, Nullable<decimal> loanAmt, string status, string installments, Nullable<System.DateTime> date, string name)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var loanAmtParameter = loanAmt.HasValue ?
                new ObjectParameter("LoanAmt", loanAmt) :
                new ObjectParameter("LoanAmt", typeof(decimal));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var installmentsParameter = installments != null ?
                new ObjectParameter("Installments", installments) :
                new ObjectParameter("Installments", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_AppliedLoans", userIDParameter, loanAmtParameter, statusParameter, installmentsParameter, dateParameter, nameParameter);
        }
    
        public virtual int Sp_Add_Arrear_Distributor(string geneby, Nullable<long> generated_By_Id, Nullable<long> arrearid)
        {
            var genebyParameter = geneby != null ?
                new ObjectParameter("geneby", geneby) :
                new ObjectParameter("geneby", typeof(string));
    
            var generated_By_IdParameter = generated_By_Id.HasValue ?
                new ObjectParameter("Generated_By_Id", generated_By_Id) :
                new ObjectParameter("Generated_By_Id", typeof(long));
    
            var arrearidParameter = arrearid.HasValue ?
                new ObjectParameter("arrearid", arrearid) :
                new ObjectParameter("arrearid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_Arrear_Distributor", genebyParameter, generated_By_IdParameter, arrearidParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_Arrears(Nullable<long> emp_Id, string employeeName, string employeeDesignation, string employee_code, string cNIN, Nullable<decimal> basic_salary, Nullable<System.DateTime> emp_Date_Of_Joining, string email)
        {
            var emp_IdParameter = emp_Id.HasValue ?
                new ObjectParameter("Emp_Id", emp_Id) :
                new ObjectParameter("Emp_Id", typeof(long));
    
            var employeeNameParameter = employeeName != null ?
                new ObjectParameter("EmployeeName", employeeName) :
                new ObjectParameter("EmployeeName", typeof(string));
    
            var employeeDesignationParameter = employeeDesignation != null ?
                new ObjectParameter("EmployeeDesignation", employeeDesignation) :
                new ObjectParameter("EmployeeDesignation", typeof(string));
    
            var employee_codeParameter = employee_code != null ?
                new ObjectParameter("Employee_code", employee_code) :
                new ObjectParameter("Employee_code", typeof(string));
    
            var cNINParameter = cNIN != null ?
                new ObjectParameter("CNIN", cNIN) :
                new ObjectParameter("CNIN", typeof(string));
    
            var basic_salaryParameter = basic_salary.HasValue ?
                new ObjectParameter("Basic_salary", basic_salary) :
                new ObjectParameter("Basic_salary", typeof(decimal));
    
            var emp_Date_Of_JoiningParameter = emp_Date_Of_Joining.HasValue ?
                new ObjectParameter("Emp_Date_Of_Joining", emp_Date_Of_Joining) :
                new ObjectParameter("Emp_Date_Of_Joining", typeof(System.DateTime));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_Arrears", emp_IdParameter, employeeNameParameter, employeeDesignationParameter, employee_codeParameter, cNINParameter, basic_salaryParameter, emp_Date_Of_JoiningParameter, emailParameter);
        }
    
        public virtual int Sp_Add_ArrearSalary_Details_Parameter(string description, Nullable<decimal> amount, Nullable<long> salaries_id, string type, Nullable<long> userid)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var salaries_idParameter = salaries_id.HasValue ?
                new ObjectParameter("Salaries_id", salaries_id) :
                new ObjectParameter("Salaries_id", typeof(long));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_ArrearSalary_Details_Parameter", descriptionParameter, amountParameter, salaries_idParameter, typeParameter, useridParameter);
        }
    
        public virtual int Sp_Add_Asset(string name, Nullable<long> type, string specs, Nullable<int> companyid, Nullable<long> qrcode, string vehicle_Model, string vehicle_Company, string vehicle_Registration_Number, Nullable<decimal> vehicle_Fuel, Nullable<long> fuel_Type_Id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(long));
    
            var specsParameter = specs != null ?
                new ObjectParameter("specs", specs) :
                new ObjectParameter("specs", typeof(string));
    
            var companyidParameter = companyid.HasValue ?
                new ObjectParameter("companyid", companyid) :
                new ObjectParameter("companyid", typeof(int));
    
            var qrcodeParameter = qrcode.HasValue ?
                new ObjectParameter("Qrcode", qrcode) :
                new ObjectParameter("Qrcode", typeof(long));
    
            var vehicle_ModelParameter = vehicle_Model != null ?
                new ObjectParameter("Vehicle_Model", vehicle_Model) :
                new ObjectParameter("Vehicle_Model", typeof(string));
    
            var vehicle_CompanyParameter = vehicle_Company != null ?
                new ObjectParameter("Vehicle_Company", vehicle_Company) :
                new ObjectParameter("Vehicle_Company", typeof(string));
    
            var vehicle_Registration_NumberParameter = vehicle_Registration_Number != null ?
                new ObjectParameter("Vehicle_Registration_Number", vehicle_Registration_Number) :
                new ObjectParameter("Vehicle_Registration_Number", typeof(string));
    
            var vehicle_FuelParameter = vehicle_Fuel.HasValue ?
                new ObjectParameter("Vehicle_Fuel", vehicle_Fuel) :
                new ObjectParameter("Vehicle_Fuel", typeof(decimal));
    
            var fuel_Type_IdParameter = fuel_Type_Id.HasValue ?
                new ObjectParameter("Fuel_Type_Id", fuel_Type_Id) :
                new ObjectParameter("Fuel_Type_Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_Asset", nameParameter, typeParameter, specsParameter, companyidParameter, qrcodeParameter, vehicle_ModelParameter, vehicle_CompanyParameter, vehicle_Registration_NumberParameter, vehicle_FuelParameter, fuel_Type_IdParameter);
        }
    
        public virtual int Sp_Add_Assets(string name, string description, string specs, string type, Nullable<long> company_Id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var specsParameter = specs != null ?
                new ObjectParameter("Specs", specs) :
                new ObjectParameter("Specs", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var company_IdParameter = company_Id.HasValue ?
                new ObjectParameter("Company_Id", company_Id) :
                new ObjectParameter("Company_Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_Assets", nameParameter, descriptionParameter, specsParameter, typeParameter, company_IdParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Sp_Add_AssetType(string asset)
        {
            var assetParameter = asset != null ?
                new ObjectParameter("asset", asset) :
                new ObjectParameter("asset", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Sp_Add_AssetType", assetParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Sp_Add_AssignCompany(Nullable<long> comp_Id, Nullable<long> userId)
        {
            var comp_IdParameter = comp_Id.HasValue ?
                new ObjectParameter("Comp_Id", comp_Id) :
                new ObjectParameter("Comp_Id", typeof(long));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Sp_Add_AssignCompany", comp_IdParameter, userIdParameter);
        }
    
        public virtual int Sp_Add_AssignResponsibilitiesToRole(Nullable<long> roleId, string respon)
        {
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(long));
    
            var responParameter = respon != null ?
                new ObjectParameter("Respon", respon) :
                new ObjectParameter("Respon", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_AssignResponsibilitiesToRole", roleIdParameter, responParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Sp_Add_AssignRole(Nullable<long> roleId, Nullable<long> userId)
        {
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(long));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Sp_Add_AssignRole", roleIdParameter, userIdParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_Attendance(string enroll, Nullable<System.DateTime> chkIn, Nullable<System.DateTime> chkOut, string dayOfWeek, string chkOutMet, Nullable<int> isInvalid, Nullable<int> attState, Nullable<int> verifyMode, Nullable<int> workCode, Nullable<long> devId, Nullable<bool> isChkOut, Nullable<long> attId, Nullable<double> shortExcess)
        {
            var enrollParameter = enroll != null ?
                new ObjectParameter("enroll", enroll) :
                new ObjectParameter("enroll", typeof(string));
    
            var chkInParameter = chkIn.HasValue ?
                new ObjectParameter("chkIn", chkIn) :
                new ObjectParameter("chkIn", typeof(System.DateTime));
    
            var chkOutParameter = chkOut.HasValue ?
                new ObjectParameter("chkOut", chkOut) :
                new ObjectParameter("chkOut", typeof(System.DateTime));
    
            var dayOfWeekParameter = dayOfWeek != null ?
                new ObjectParameter("dayOfWeek", dayOfWeek) :
                new ObjectParameter("dayOfWeek", typeof(string));
    
            var chkOutMetParameter = chkOutMet != null ?
                new ObjectParameter("chkOutMet", chkOutMet) :
                new ObjectParameter("chkOutMet", typeof(string));
    
            var isInvalidParameter = isInvalid.HasValue ?
                new ObjectParameter("isInvalid", isInvalid) :
                new ObjectParameter("isInvalid", typeof(int));
    
            var attStateParameter = attState.HasValue ?
                new ObjectParameter("attState", attState) :
                new ObjectParameter("attState", typeof(int));
    
            var verifyModeParameter = verifyMode.HasValue ?
                new ObjectParameter("verifyMode", verifyMode) :
                new ObjectParameter("verifyMode", typeof(int));
    
            var workCodeParameter = workCode.HasValue ?
                new ObjectParameter("workCode", workCode) :
                new ObjectParameter("workCode", typeof(int));
    
            var devIdParameter = devId.HasValue ?
                new ObjectParameter("devId", devId) :
                new ObjectParameter("devId", typeof(long));
    
            var isChkOutParameter = isChkOut.HasValue ?
                new ObjectParameter("isChkOut", isChkOut) :
                new ObjectParameter("isChkOut", typeof(bool));
    
            var attIdParameter = attId.HasValue ?
                new ObjectParameter("attId", attId) :
                new ObjectParameter("attId", typeof(long));
    
            var shortExcessParameter = shortExcess.HasValue ?
                new ObjectParameter("shortExcess", shortExcess) :
                new ObjectParameter("shortExcess", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_Attendance", enrollParameter, chkInParameter, chkOutParameter, dayOfWeekParameter, chkOutMetParameter, isInvalidParameter, attStateParameter, verifyModeParameter, workCodeParameter, devIdParameter, isChkOutParameter, attIdParameter, shortExcessParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_Attendance_Away(string enroll, Nullable<System.DateTime> chkIn, Nullable<System.DateTime> chkOut, string dayOfWeek, string chkOutMet, Nullable<int> isInvalid, Nullable<int> attState, Nullable<int> verifyMode, Nullable<int> workCode, Nullable<long> devId, Nullable<bool> isChkOut, Nullable<long> attId, Nullable<double> shortExcess, Nullable<decimal> latitude, Nullable<decimal> longitude, string geoAddress)
        {
            var enrollParameter = enroll != null ?
                new ObjectParameter("enroll", enroll) :
                new ObjectParameter("enroll", typeof(string));
    
            var chkInParameter = chkIn.HasValue ?
                new ObjectParameter("chkIn", chkIn) :
                new ObjectParameter("chkIn", typeof(System.DateTime));
    
            var chkOutParameter = chkOut.HasValue ?
                new ObjectParameter("chkOut", chkOut) :
                new ObjectParameter("chkOut", typeof(System.DateTime));
    
            var dayOfWeekParameter = dayOfWeek != null ?
                new ObjectParameter("dayOfWeek", dayOfWeek) :
                new ObjectParameter("dayOfWeek", typeof(string));
    
            var chkOutMetParameter = chkOutMet != null ?
                new ObjectParameter("chkOutMet", chkOutMet) :
                new ObjectParameter("chkOutMet", typeof(string));
    
            var isInvalidParameter = isInvalid.HasValue ?
                new ObjectParameter("isInvalid", isInvalid) :
                new ObjectParameter("isInvalid", typeof(int));
    
            var attStateParameter = attState.HasValue ?
                new ObjectParameter("attState", attState) :
                new ObjectParameter("attState", typeof(int));
    
            var verifyModeParameter = verifyMode.HasValue ?
                new ObjectParameter("verifyMode", verifyMode) :
                new ObjectParameter("verifyMode", typeof(int));
    
            var workCodeParameter = workCode.HasValue ?
                new ObjectParameter("workCode", workCode) :
                new ObjectParameter("workCode", typeof(int));
    
            var devIdParameter = devId.HasValue ?
                new ObjectParameter("devId", devId) :
                new ObjectParameter("devId", typeof(long));
    
            var isChkOutParameter = isChkOut.HasValue ?
                new ObjectParameter("isChkOut", isChkOut) :
                new ObjectParameter("isChkOut", typeof(bool));
    
            var attIdParameter = attId.HasValue ?
                new ObjectParameter("attId", attId) :
                new ObjectParameter("attId", typeof(long));
    
            var shortExcessParameter = shortExcess.HasValue ?
                new ObjectParameter("shortExcess", shortExcess) :
                new ObjectParameter("shortExcess", typeof(double));
    
            var latitudeParameter = latitude.HasValue ?
                new ObjectParameter("latitude", latitude) :
                new ObjectParameter("latitude", typeof(decimal));
    
            var longitudeParameter = longitude.HasValue ?
                new ObjectParameter("longitude", longitude) :
                new ObjectParameter("longitude", typeof(decimal));
    
            var geoAddressParameter = geoAddress != null ?
                new ObjectParameter("geoAddress", geoAddress) :
                new ObjectParameter("geoAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_Attendance_Away", enrollParameter, chkInParameter, chkOutParameter, dayOfWeekParameter, chkOutMetParameter, isInvalidParameter, attStateParameter, verifyModeParameter, workCodeParameter, devIdParameter, isChkOutParameter, attIdParameter, shortExcessParameter, latitudeParameter, longitudeParameter, geoAddressParameter);
        }
    
        public virtual int Sp_Add_Attendance_Manual_Checkout(Nullable<long> attId, Nullable<System.DateTime> checkOutTime, string method, Nullable<double> excess)
        {
            var attIdParameter = attId.HasValue ?
                new ObjectParameter("attId", attId) :
                new ObjectParameter("attId", typeof(long));
    
            var checkOutTimeParameter = checkOutTime.HasValue ?
                new ObjectParameter("checkOutTime", checkOutTime) :
                new ObjectParameter("checkOutTime", typeof(System.DateTime));
    
            var methodParameter = method != null ?
                new ObjectParameter("method", method) :
                new ObjectParameter("method", typeof(string));
    
            var excessParameter = excess.HasValue ?
                new ObjectParameter("excess", excess) :
                new ObjectParameter("excess", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_Attendance_Manual_Checkout", attIdParameter, checkOutTimeParameter, methodParameter, excessParameter);
        }
    
        public virtual int Sp_Add_Balance(Nullable<long> fileid, string block, string status, string mod, Nullable<decimal> total_amt, Nullable<decimal> rec_amt, Nullable<decimal> rec_amt_20, Nullable<decimal> discount, Nullable<decimal> refund)
        {
            var fileidParameter = fileid.HasValue ?
                new ObjectParameter("fileid", fileid) :
                new ObjectParameter("fileid", typeof(long));
    
            var blockParameter = block != null ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var modParameter = mod != null ?
                new ObjectParameter("mod", mod) :
                new ObjectParameter("mod", typeof(string));
    
            var total_amtParameter = total_amt.HasValue ?
                new ObjectParameter("total_amt", total_amt) :
                new ObjectParameter("total_amt", typeof(decimal));
    
            var rec_amtParameter = rec_amt.HasValue ?
                new ObjectParameter("rec_amt", rec_amt) :
                new ObjectParameter("rec_amt", typeof(decimal));
    
            var rec_amt_20Parameter = rec_amt_20.HasValue ?
                new ObjectParameter("rec_amt_20", rec_amt_20) :
                new ObjectParameter("rec_amt_20", typeof(decimal));
    
            var discountParameter = discount.HasValue ?
                new ObjectParameter("discount", discount) :
                new ObjectParameter("discount", typeof(decimal));
    
            var refundParameter = refund.HasValue ?
                new ObjectParameter("refund", refund) :
                new ObjectParameter("refund", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_Balance", fileidParameter, blockParameter, statusParameter, modParameter, total_amtParameter, rec_amtParameter, rec_amt_20Parameter, discountParameter, refundParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Sp_Add_BankAccount(string bank, string account)
        {
            var bankParameter = bank != null ?
                new ObjectParameter("bank", bank) :
                new ObjectParameter("bank", typeof(string));
    
            var accountParameter = account != null ?
                new ObjectParameter("account", account) :
                new ObjectParameter("account", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Sp_Add_BankAccount", bankParameter, accountParameter);
        }
    
        public virtual ObjectResult<string> Sp_Add_BankOnlineReceipt(Nullable<decimal> amount, string amountinWords, string bank, string ch_Pay_Draft_No, Nullable<System.DateTime> ch_Pay_Draft_Date, string branch, string contact, string father_Name, Nullable<long> file_Plot_No, string name, string paymentType, Nullable<decimal> plot_Total_Amount, string project, Nullable<decimal> ratePerMarla, string registeration_No, string size, string type, Nullable<long> token, Nullable<long> userid, string text, Nullable<System.DateTime> expdate, string mod, string devchar, string filePlotNumber, string block, string plt_type, string reqBank, string recpno, Nullable<long> transactionId)
        {
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var amountinWordsParameter = amountinWords != null ?
                new ObjectParameter("AmountinWords", amountinWords) :
                new ObjectParameter("AmountinWords", typeof(string));
    
            var bankParameter = bank != null ?
                new ObjectParameter("Bank", bank) :
                new ObjectParameter("Bank", typeof(string));
    
            var ch_Pay_Draft_NoParameter = ch_Pay_Draft_No != null ?
                new ObjectParameter("Ch_Pay_Draft_No", ch_Pay_Draft_No) :
                new ObjectParameter("Ch_Pay_Draft_No", typeof(string));
    
            var ch_Pay_Draft_DateParameter = ch_Pay_Draft_Date.HasValue ?
                new ObjectParameter("Ch_Pay_Draft_Date", ch_Pay_Draft_Date) :
                new ObjectParameter("Ch_Pay_Draft_Date", typeof(System.DateTime));
    
            var branchParameter = branch != null ?
                new ObjectParameter("Branch", branch) :
                new ObjectParameter("Branch", typeof(string));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var father_NameParameter = father_Name != null ?
                new ObjectParameter("Father_Name", father_Name) :
                new ObjectParameter("Father_Name", typeof(string));
    
            var file_Plot_NoParameter = file_Plot_No.HasValue ?
                new ObjectParameter("File_Plot_No", file_Plot_No) :
                new ObjectParameter("File_Plot_No", typeof(long));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var paymentTypeParameter = paymentType != null ?
                new ObjectParameter("PaymentType", paymentType) :
                new ObjectParameter("PaymentType", typeof(string));
    
            var plot_Total_AmountParameter = plot_Total_Amount.HasValue ?
                new ObjectParameter("Plot_Total_Amount", plot_Total_Amount) :
                new ObjectParameter("Plot_Total_Amount", typeof(decimal));
    
            var projectParameter = project != null ?
                new ObjectParameter("Project", project) :
                new ObjectParameter("Project", typeof(string));
    
            var ratePerMarlaParameter = ratePerMarla.HasValue ?
                new ObjectParameter("RatePerMarla", ratePerMarla) :
                new ObjectParameter("RatePerMarla", typeof(decimal));
    
            var registeration_NoParameter = registeration_No != null ?
                new ObjectParameter("Registeration_No", registeration_No) :
                new ObjectParameter("Registeration_No", typeof(string));
    
            var sizeParameter = size != null ?
                new ObjectParameter("Size", size) :
                new ObjectParameter("Size", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var tokenParameter = token.HasValue ?
                new ObjectParameter("Token", token) :
                new ObjectParameter("Token", typeof(long));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var textParameter = text != null ?
                new ObjectParameter("text", text) :
                new ObjectParameter("text", typeof(string));
    
            var expdateParameter = expdate.HasValue ?
                new ObjectParameter("expdate", expdate) :
                new ObjectParameter("expdate", typeof(System.DateTime));
    
            var modParameter = mod != null ?
                new ObjectParameter("mod", mod) :
                new ObjectParameter("mod", typeof(string));
    
            var devcharParameter = devchar != null ?
                new ObjectParameter("devchar", devchar) :
                new ObjectParameter("devchar", typeof(string));
    
            var filePlotNumberParameter = filePlotNumber != null ?
                new ObjectParameter("FilePlotNumber", filePlotNumber) :
                new ObjectParameter("FilePlotNumber", typeof(string));
    
            var blockParameter = block != null ?
                new ObjectParameter("block", block) :
                new ObjectParameter("block", typeof(string));
    
            var plt_typeParameter = plt_type != null ?
                new ObjectParameter("plt_type", plt_type) :
                new ObjectParameter("plt_type", typeof(string));
    
            var reqBankParameter = reqBank != null ?
                new ObjectParameter("reqBank", reqBank) :
                new ObjectParameter("reqBank", typeof(string));
    
            var recpnoParameter = recpno != null ?
                new ObjectParameter("recpno", recpno) :
                new ObjectParameter("recpno", typeof(string));
    
            var transactionIdParameter = transactionId.HasValue ?
                new ObjectParameter("transactionId", transactionId) :
                new ObjectParameter("transactionId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Sp_Add_BankOnlineReceipt", amountParameter, amountinWordsParameter, bankParameter, ch_Pay_Draft_NoParameter, ch_Pay_Draft_DateParameter, branchParameter, contactParameter, father_NameParameter, file_Plot_NoParameter, nameParameter, paymentTypeParameter, plot_Total_AmountParameter, projectParameter, ratePerMarlaParameter, registeration_NoParameter, sizeParameter, typeParameter, tokenParameter, useridParameter, textParameter, expdateParameter, modParameter, devcharParameter, filePlotNumberParameter, blockParameter, plt_typeParameter, reqBankParameter, recpnoParameter, transactionIdParameter);
        }
    
        public virtual int Sp_Add_BankOnlineReceipt_Test(Nullable<decimal> amount, string amountinWords, string bank, string ch_Pay_Draft_No, Nullable<System.DateTime> ch_Pay_Draft_Date, string branch, string contact, string father_Name, Nullable<long> file_Plot_No, string name, string paymentType, Nullable<decimal> plot_Total_Amount, string project, Nullable<decimal> ratePerMarla, string registeration_No, string size, string type, Nullable<long> token, Nullable<long> userid, string text, Nullable<System.DateTime> expdate, string mod, string devchar, string filePlotNumber, string block, string reqBank, string transactionId)
        {
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var amountinWordsParameter = amountinWords != null ?
                new ObjectParameter("AmountinWords", amountinWords) :
                new ObjectParameter("AmountinWords", typeof(string));
    
            var bankParameter = bank != null ?
                new ObjectParameter("Bank", bank) :
                new ObjectParameter("Bank", typeof(string));
    
            var ch_Pay_Draft_NoParameter = ch_Pay_Draft_No != null ?
                new ObjectParameter("Ch_Pay_Draft_No", ch_Pay_Draft_No) :
                new ObjectParameter("Ch_Pay_Draft_No", typeof(string));
    
            var ch_Pay_Draft_DateParameter = ch_Pay_Draft_Date.HasValue ?
                new ObjectParameter("Ch_Pay_Draft_Date", ch_Pay_Draft_Date) :
                new ObjectParameter("Ch_Pay_Draft_Date", typeof(System.DateTime));
    
            var branchParameter = branch != null ?
                new ObjectParameter("Branch", branch) :
                new ObjectParameter("Branch", typeof(string));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var father_NameParameter = father_Name != null ?
                new ObjectParameter("Father_Name", father_Name) :
                new ObjectParameter("Father_Name", typeof(string));
    
            var file_Plot_NoParameter = file_Plot_No.HasValue ?
                new ObjectParameter("File_Plot_No", file_Plot_No) :
                new ObjectParameter("File_Plot_No", typeof(long));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var paymentTypeParameter = paymentType != null ?
                new ObjectParameter("PaymentType", paymentType) :
                new ObjectParameter("PaymentType", typeof(string));
    
            var plot_Total_AmountParameter = plot_Total_Amount.HasValue ?
                new ObjectParameter("Plot_Total_Amount", plot_Total_Amount) :
                new ObjectParameter("Plot_Total_Amount", typeof(decimal));
    
            var projectParameter = project != null ?
                new ObjectParameter("Project", project) :
                new ObjectParameter("Project", typeof(string));
    
            var ratePerMarlaParameter = ratePerMarla.HasValue ?
                new ObjectParameter("RatePerMarla", ratePerMarla) :
                new ObjectParameter("RatePerMarla", typeof(decimal));
    
            var registeration_NoParameter = registeration_No != null ?
                new ObjectParameter("Registeration_No", registeration_No) :
                new ObjectParameter("Registeration_No", typeof(string));
    
            var sizeParameter = size != null ?
                new ObjectParameter("Size", size) :
                new ObjectParameter("Size", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var tokenParameter = token.HasValue ?
                new ObjectParameter("Token", token) :
                new ObjectParameter("Token", typeof(long));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var textParameter = text != null ?
                new ObjectParameter("text", text) :
                new ObjectParameter("text", typeof(string));
    
            var expdateParameter = expdate.HasValue ?
                new ObjectParameter("expdate", expdate) :
                new ObjectParameter("expdate", typeof(System.DateTime));
    
            var modParameter = mod != null ?
                new ObjectParameter("mod", mod) :
                new ObjectParameter("mod", typeof(string));
    
            var devcharParameter = devchar != null ?
                new ObjectParameter("devchar", devchar) :
                new ObjectParameter("devchar", typeof(string));
    
            var filePlotNumberParameter = filePlotNumber != null ?
                new ObjectParameter("FilePlotNumber", filePlotNumber) :
                new ObjectParameter("FilePlotNumber", typeof(string));
    
            var blockParameter = block != null ?
                new ObjectParameter("block", block) :
                new ObjectParameter("block", typeof(string));
    
            var reqBankParameter = reqBank != null ?
                new ObjectParameter("reqBank", reqBank) :
                new ObjectParameter("reqBank", typeof(string));
    
            var transactionIdParameter = transactionId != null ?
                new ObjectParameter("transactionId", transactionId) :
                new ObjectParameter("transactionId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_BankOnlineReceipt_Test", amountParameter, amountinWordsParameter, bankParameter, ch_Pay_Draft_NoParameter, ch_Pay_Draft_DateParameter, branchParameter, contactParameter, father_NameParameter, file_Plot_NoParameter, nameParameter, paymentTypeParameter, plot_Total_AmountParameter, projectParameter, ratePerMarlaParameter, registeration_NoParameter, sizeParameter, typeParameter, tokenParameter, useridParameter, textParameter, expdateParameter, modParameter, devcharParameter, filePlotNumberParameter, blockParameter, reqBankParameter, transactionIdParameter);
        }
    
        public virtual ObjectResult<SP_Add_Bids_Result> SP_Add_Bids(string mats, Nullable<long> usrId, string reqStat)
        {
            var matsParameter = mats != null ?
                new ObjectParameter("Mats", mats) :
                new ObjectParameter("Mats", typeof(string));
    
            var usrIdParameter = usrId.HasValue ?
                new ObjectParameter("usrId", usrId) :
                new ObjectParameter("usrId", typeof(long));
    
            var reqStatParameter = reqStat != null ?
                new ObjectParameter("reqStat", reqStat) :
                new ObjectParameter("reqStat", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Add_Bids_Result>("SP_Add_Bids", matsParameter, usrIdParameter, reqStatParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Sp_Add_Bills(string bills, Nullable<long> userid, Nullable<System.DateTime> bill_date, Nullable<System.DateTime> due_date)
        {
            var billsParameter = bills != null ?
                new ObjectParameter("bills", bills) :
                new ObjectParameter("bills", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var bill_dateParameter = bill_date.HasValue ?
                new ObjectParameter("bill_date", bill_date) :
                new ObjectParameter("bill_date", typeof(System.DateTime));
    
            var due_dateParameter = due_date.HasValue ?
                new ObjectParameter("due_date", due_date) :
                new ObjectParameter("due_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Sp_Add_Bills", billsParameter, useridParameter, bill_dateParameter, due_dateParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Sp_Add_Block(string block_name, Nullable<long> phase_id)
        {
            var block_nameParameter = block_name != null ?
                new ObjectParameter("block_name", block_name) :
                new ObjectParameter("block_name", typeof(string));
    
            var phase_idParameter = phase_id.HasValue ?
                new ObjectParameter("phase_id", phase_id) :
                new ObjectParameter("phase_id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Sp_Add_Block", block_nameParameter, phase_idParameter);
        }
    
        public virtual int Sp_Add_Bonus(Nullable<long> id, string bonDes, Nullable<decimal> bonus)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var bonDesParameter = bonDes != null ?
                new ObjectParameter("bonDes", bonDes) :
                new ObjectParameter("bonDes", typeof(string));
    
            var bonusParameter = bonus.HasValue ?
                new ObjectParameter("bonus", bonus) :
                new ObjectParameter("bonus", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_Bonus", idParameter, bonDesParameter, bonusParameter);
        }
    
        public virtual ObjectResult<Sp_Add_Booking_Cancelation_Result> Sp_Add_Booking_Cancelation(Nullable<decimal> amount, string contact, string father_Name, Nullable<long> file_Plot_No, string name, Nullable<decimal> plot_Total_Amount, string project, string size, string type, Nullable<long> token, Nullable<long> userid, string desc, string mod, string filePlotNumber, string block, Nullable<decimal> dud, Nullable<decimal> repuramt, string rectype, string pltType)
        {
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var father_NameParameter = father_Name != null ?
                new ObjectParameter("Father_Name", father_Name) :
                new ObjectParameter("Father_Name", typeof(string));
    
            var file_Plot_NoParameter = file_Plot_No.HasValue ?
                new ObjectParameter("File_Plot_No", file_Plot_No) :
                new ObjectParameter("File_Plot_No", typeof(long));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var plot_Total_AmountParameter = plot_Total_Amount.HasValue ?
                new ObjectParameter("Plot_Total_Amount", plot_Total_Amount) :
                new ObjectParameter("Plot_Total_Amount", typeof(decimal));
    
            var projectParameter = project != null ?
                new ObjectParameter("Project", project) :
                new ObjectParameter("Project", typeof(string));
    
            var sizeParameter = size != null ?
                new ObjectParameter("Size", size) :
                new ObjectParameter("Size", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var tokenParameter = token.HasValue ?
                new ObjectParameter("Token", token) :
                new ObjectParameter("Token", typeof(long));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var descParameter = desc != null ?
                new ObjectParameter("desc", desc) :
                new ObjectParameter("desc", typeof(string));
    
            var modParameter = mod != null ?
                new ObjectParameter("mod", mod) :
                new ObjectParameter("mod", typeof(string));
    
            var filePlotNumberParameter = filePlotNumber != null ?
                new ObjectParameter("FilePlotNumber", filePlotNumber) :
                new ObjectParameter("FilePlotNumber", typeof(string));
    
            var blockParameter = block != null ?
                new ObjectParameter("block", block) :
                new ObjectParameter("block", typeof(string));
    
            var dudParameter = dud.HasValue ?
                new ObjectParameter("dud", dud) :
                new ObjectParameter("dud", typeof(decimal));
    
            var repuramtParameter = repuramt.HasValue ?
                new ObjectParameter("repuramt", repuramt) :
                new ObjectParameter("repuramt", typeof(decimal));
    
            var rectypeParameter = rectype != null ?
                new ObjectParameter("rectype", rectype) :
                new ObjectParameter("rectype", typeof(string));
    
            var pltTypeParameter = pltType != null ?
                new ObjectParameter("pltType", pltType) :
                new ObjectParameter("pltType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Add_Booking_Cancelation_Result>("Sp_Add_Booking_Cancelation", amountParameter, contactParameter, father_NameParameter, file_Plot_NoParameter, nameParameter, plot_Total_AmountParameter, projectParameter, sizeParameter, typeParameter, tokenParameter, useridParameter, descParameter, modParameter, filePlotNumberParameter, blockParameter, dudParameter, repuramtParameter, rectypeParameter, pltTypeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Sp_Add_CA_Head(Nullable<int> mgrid, string head, string type, Nullable<long> typeId, string nature)
        {
            var mgridParameter = mgrid.HasValue ?
                new ObjectParameter("mgrid", mgrid) :
                new ObjectParameter("mgrid", typeof(int));
    
            var headParameter = head != null ?
                new ObjectParameter("Head", head) :
                new ObjectParameter("Head", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var typeIdParameter = typeId.HasValue ?
                new ObjectParameter("typeId", typeId) :
                new ObjectParameter("typeId", typeof(long));
    
            var natureParameter = nature != null ?
                new ObjectParameter("nature", nature) :
                new ObjectParameter("nature", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Sp_Add_CA_Head", mgridParameter, headParameter, typeParameter, typeIdParameter, natureParameter);
        }
    
        public virtual int Sp_Add_Cash_Bank(Nullable<long> id, Nullable<decimal> cashbank, string type)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var cashbankParameter = cashbank.HasValue ?
                new ObjectParameter("cashbank", cashbank) :
                new ObjectParameter("cashbank", typeof(decimal));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_Cash_Bank", idParameter, cashbankParameter, typeParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_Cheque_BankDraft_PayOrder(Nullable<decimal> amount, string bank, string branch_Name, string check_DemandDraft_PayOrder, string deposit_Bank, string deposit_Bank_Acc_Number, string status, string module, string type, Nullable<long> reference_Id, string ch_dr_pay_no, Nullable<long> module_Id, Nullable<System.DateTime> date, string file_No, Nullable<long> receid, Nullable<int> comp_id, string v_type)
        {
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var bankParameter = bank != null ?
                new ObjectParameter("Bank", bank) :
                new ObjectParameter("Bank", typeof(string));
    
            var branch_NameParameter = branch_Name != null ?
                new ObjectParameter("Branch_Name", branch_Name) :
                new ObjectParameter("Branch_Name", typeof(string));
    
            var check_DemandDraft_PayOrderParameter = check_DemandDraft_PayOrder != null ?
                new ObjectParameter("Check_DemandDraft_PayOrder", check_DemandDraft_PayOrder) :
                new ObjectParameter("Check_DemandDraft_PayOrder", typeof(string));
    
            var deposit_BankParameter = deposit_Bank != null ?
                new ObjectParameter("Deposit_Bank", deposit_Bank) :
                new ObjectParameter("Deposit_Bank", typeof(string));
    
            var deposit_Bank_Acc_NumberParameter = deposit_Bank_Acc_Number != null ?
                new ObjectParameter("Deposit_Bank_Acc_Number", deposit_Bank_Acc_Number) :
                new ObjectParameter("Deposit_Bank_Acc_Number", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var moduleParameter = module != null ?
                new ObjectParameter("Module", module) :
                new ObjectParameter("Module", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var reference_IdParameter = reference_Id.HasValue ?
                new ObjectParameter("Reference_Id", reference_Id) :
                new ObjectParameter("Reference_Id", typeof(long));
    
            var ch_dr_pay_noParameter = ch_dr_pay_no != null ?
                new ObjectParameter("ch_dr_pay_no", ch_dr_pay_no) :
                new ObjectParameter("ch_dr_pay_no", typeof(string));
    
            var module_IdParameter = module_Id.HasValue ?
                new ObjectParameter("Module_Id", module_Id) :
                new ObjectParameter("Module_Id", typeof(long));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var file_NoParameter = file_No != null ?
                new ObjectParameter("File_No", file_No) :
                new ObjectParameter("File_No", typeof(string));
    
            var receidParameter = receid.HasValue ?
                new ObjectParameter("receid", receid) :
                new ObjectParameter("receid", typeof(long));
    
            var comp_idParameter = comp_id.HasValue ?
                new ObjectParameter("comp_id", comp_id) :
                new ObjectParameter("comp_id", typeof(int));
    
            var v_typeParameter = v_type != null ?
                new ObjectParameter("v_type", v_type) :
                new ObjectParameter("v_type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_Cheque_BankDraft_PayOrder", amountParameter, bankParameter, branch_NameParameter, check_DemandDraft_PayOrderParameter, deposit_BankParameter, deposit_Bank_Acc_NumberParameter, statusParameter, moduleParameter, typeParameter, reference_IdParameter, ch_dr_pay_noParameter, module_IdParameter, dateParameter, file_NoParameter, receidParameter, comp_idParameter, v_typeParameter);
        }
    
        public virtual int Sp_Add_COAMapper(string accountType, string module, string moduleType, Nullable<long> module_Id, string accountId, string accountCode, string head_Name, Nullable<int> companyId, string companyName)
        {
            var accountTypeParameter = accountType != null ?
                new ObjectParameter("AccountType", accountType) :
                new ObjectParameter("AccountType", typeof(string));
    
            var moduleParameter = module != null ?
                new ObjectParameter("Module", module) :
                new ObjectParameter("Module", typeof(string));
    
            var moduleTypeParameter = moduleType != null ?
                new ObjectParameter("ModuleType", moduleType) :
                new ObjectParameter("ModuleType", typeof(string));
    
            var module_IdParameter = module_Id.HasValue ?
                new ObjectParameter("Module_Id", module_Id) :
                new ObjectParameter("Module_Id", typeof(long));
    
            var accountIdParameter = accountId != null ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(string));
    
            var accountCodeParameter = accountCode != null ?
                new ObjectParameter("AccountCode", accountCode) :
                new ObjectParameter("AccountCode", typeof(string));
    
            var head_NameParameter = head_Name != null ?
                new ObjectParameter("Head_Name", head_Name) :
                new ObjectParameter("Head_Name", typeof(string));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_COAMapper", accountTypeParameter, moduleParameter, moduleTypeParameter, module_IdParameter, accountIdParameter, accountCodeParameter, head_NameParameter, companyIdParameter, companyNameParameter);
        }
    
        public virtual int Sp_Add_COLA_On_Salaries(Nullable<int> per, Nullable<decimal> am, Nullable<long> id, string des)
        {
            var perParameter = per.HasValue ?
                new ObjectParameter("per", per) :
                new ObjectParameter("per", typeof(int));
    
            var amParameter = am.HasValue ?
                new ObjectParameter("am", am) :
                new ObjectParameter("am", typeof(decimal));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var desParameter = des != null ?
                new ObjectParameter("des", des) :
                new ObjectParameter("des", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_COLA_On_Salaries", perParameter, amParameter, idParameter, desParameter);
        }
    
        public virtual int Sp_Add_Commercial_Inventory(string applicationNo, string type, Nullable<decimal> area, string location, Nullable<long> floor_Id, string status, string prjName, Nullable<decimal> rate)
        {
            var applicationNoParameter = applicationNo != null ?
                new ObjectParameter("ApplicationNo", applicationNo) :
                new ObjectParameter("ApplicationNo", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var areaParameter = area.HasValue ?
                new ObjectParameter("area", area) :
                new ObjectParameter("area", typeof(decimal));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            var floor_IdParameter = floor_Id.HasValue ?
                new ObjectParameter("floor_Id", floor_Id) :
                new ObjectParameter("floor_Id", typeof(long));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var prjNameParameter = prjName != null ?
                new ObjectParameter("prjName", prjName) :
                new ObjectParameter("prjName", typeof(string));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("rate", rate) :
                new ObjectParameter("rate", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_Commercial_Inventory", applicationNoParameter, typeParameter, areaParameter, locationParameter, floor_IdParameter, statusParameter, prjNameParameter, rateParameter);
        }
    
        public virtual int Sp_Add_CommercialCancelation_Req(Nullable<long> comid, Nullable<long> com_own, Nullable<long> reqby, string rem, string com_no, string floor, string type)
        {
            var comidParameter = comid.HasValue ?
                new ObjectParameter("Comid", comid) :
                new ObjectParameter("Comid", typeof(long));
    
            var com_ownParameter = com_own.HasValue ?
                new ObjectParameter("Com_own", com_own) :
                new ObjectParameter("Com_own", typeof(long));
    
            var reqbyParameter = reqby.HasValue ?
                new ObjectParameter("reqby", reqby) :
                new ObjectParameter("reqby", typeof(long));
    
            var remParameter = rem != null ?
                new ObjectParameter("rem", rem) :
                new ObjectParameter("rem", typeof(string));
    
            var com_noParameter = com_no != null ?
                new ObjectParameter("com_no", com_no) :
                new ObjectParameter("com_no", typeof(string));
    
            var floorParameter = floor != null ?
                new ObjectParameter("floor", floor) :
                new ObjectParameter("floor", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_CommercialCancelation_Req", comidParameter, com_ownParameter, reqbyParameter, remParameter, com_noParameter, floorParameter, typeParameter);
        }
    
        public virtual int Sp_Add_CommercialComments(Nullable<long> comid, string coment, Nullable<long> userid, string type)
        {
            var comidParameter = comid.HasValue ?
                new ObjectParameter("comid", comid) :
                new ObjectParameter("comid", typeof(long));
    
            var comentParameter = coment != null ?
                new ObjectParameter("coment", coment) :
                new ObjectParameter("coment", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_CommercialComments", comidParameter, comentParameter, useridParameter, typeParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Sp_Add_CommercialFloor(string description, string floor, Nullable<long> project_Id)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var floorParameter = floor != null ?
                new ObjectParameter("Floor", floor) :
                new ObjectParameter("Floor", typeof(string));
    
            var project_IdParameter = project_Id.HasValue ?
                new ObjectParameter("Project_Id", project_Id) :
                new ObjectParameter("Project_Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Sp_Add_CommercialFloor", descriptionParameter, floorParameter, project_IdParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Sp_Add_CommercialInstallmentsPlan(string instplan, Nullable<long> comid, string mod)
        {
            var instplanParameter = instplan != null ?
                new ObjectParameter("instplan", instplan) :
                new ObjectParameter("instplan", typeof(string));
    
            var comidParameter = comid.HasValue ?
                new ObjectParameter("comid", comid) :
                new ObjectParameter("comid", typeof(long));
    
            var modParameter = mod != null ?
                new ObjectParameter("mod", mod) :
                new ObjectParameter("mod", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Sp_Add_CommercialInstallmentsPlan", instplanParameter, comidParameter, modParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Sp_Add_CommercialInstallmentStructure(string inststr)
        {
            var inststrParameter = inststr != null ?
                new ObjectParameter("inststr", inststr) :
                new ObjectParameter("inststr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Sp_Add_CommercialInstallmentStructure", inststrParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Sp_Add_CommercialRoomTransfer(string name, string father_Husband, string postal_Address, string residential_Address, string phone_Office, string residential, string mobile_1, string mobile_2, string email, string occupation, string nationality, string date_Of_Birth, string cNIC_NICOP, string nominee_Name, string nominee_Relation, string nominee_Address, string nominee_CNIC_NICOP, Nullable<long> comRom_Id, string city, Nullable<bool> delivery, Nullable<System.DateTime> datetime, Nullable<decimal> totalprice, Nullable<decimal> dicount, Nullable<long> lastUpdatedBy, Nullable<long> recordAddedBy, Nullable<bool> flag, string mod, string instplan)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var father_HusbandParameter = father_Husband != null ?
                new ObjectParameter("Father_Husband", father_Husband) :
                new ObjectParameter("Father_Husband", typeof(string));
    
            var postal_AddressParameter = postal_Address != null ?
                new ObjectParameter("Postal_Address", postal_Address) :
                new ObjectParameter("Postal_Address", typeof(string));
    
            var residential_AddressParameter = residential_Address != null ?
                new ObjectParameter("Residential_Address", residential_Address) :
                new ObjectParameter("Residential_Address", typeof(string));
    
            var phone_OfficeParameter = phone_Office != null ?
                new ObjectParameter("Phone_Office", phone_Office) :
                new ObjectParameter("Phone_Office", typeof(string));
    
            var residentialParameter = residential != null ?
                new ObjectParameter("Residential", residential) :
                new ObjectParameter("Residential", typeof(string));
    
            var mobile_1Parameter = mobile_1 != null ?
                new ObjectParameter("Mobile_1", mobile_1) :
                new ObjectParameter("Mobile_1", typeof(string));
    
            var mobile_2Parameter = mobile_2 != null ?
                new ObjectParameter("Mobile_2", mobile_2) :
                new ObjectParameter("Mobile_2", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var occupationParameter = occupation != null ?
                new ObjectParameter("Occupation", occupation) :
                new ObjectParameter("Occupation", typeof(string));
    
            var nationalityParameter = nationality != null ?
                new ObjectParameter("Nationality", nationality) :
                new ObjectParameter("Nationality", typeof(string));
    
            var date_Of_BirthParameter = date_Of_Birth != null ?
                new ObjectParameter("Date_Of_Birth", date_Of_Birth) :
                new ObjectParameter("Date_Of_Birth", typeof(string));
    
            var cNIC_NICOPParameter = cNIC_NICOP != null ?
                new ObjectParameter("CNIC_NICOP", cNIC_NICOP) :
                new ObjectParameter("CNIC_NICOP", typeof(string));
    
            var nominee_NameParameter = nominee_Name != null ?
                new ObjectParameter("Nominee_Name", nominee_Name) :
                new ObjectParameter("Nominee_Name", typeof(string));
    
            var nominee_RelationParameter = nominee_Relation != null ?
                new ObjectParameter("Nominee_Relation", nominee_Relation) :
                new ObjectParameter("Nominee_Relation", typeof(string));
    
            var nominee_AddressParameter = nominee_Address != null ?
                new ObjectParameter("Nominee_Address", nominee_Address) :
                new ObjectParameter("Nominee_Address", typeof(string));
    
            var nominee_CNIC_NICOPParameter = nominee_CNIC_NICOP != null ?
                new ObjectParameter("Nominee_CNIC_NICOP", nominee_CNIC_NICOP) :
                new ObjectParameter("Nominee_CNIC_NICOP", typeof(string));
    
            var comRom_IdParameter = comRom_Id.HasValue ?
                new ObjectParameter("ComRom_Id", comRom_Id) :
                new ObjectParameter("ComRom_Id", typeof(long));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var deliveryParameter = delivery.HasValue ?
                new ObjectParameter("Delivery", delivery) :
                new ObjectParameter("Delivery", typeof(bool));
    
            var datetimeParameter = datetime.HasValue ?
                new ObjectParameter("datetime", datetime) :
                new ObjectParameter("datetime", typeof(System.DateTime));
    
            var totalpriceParameter = totalprice.HasValue ?
                new ObjectParameter("totalprice", totalprice) :
                new ObjectParameter("totalprice", typeof(decimal));
    
            var dicountParameter = dicount.HasValue ?
                new ObjectParameter("dicount", dicount) :
                new ObjectParameter("dicount", typeof(decimal));
    
            var lastUpdatedByParameter = lastUpdatedBy.HasValue ?
                new ObjectParameter("LastUpdatedBy", lastUpdatedBy) :
                new ObjectParameter("LastUpdatedBy", typeof(long));
    
            var recordAddedByParameter = recordAddedBy.HasValue ?
                new ObjectParameter("RecordAddedBy", recordAddedBy) :
                new ObjectParameter("RecordAddedBy", typeof(long));
    
            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(bool));
    
            var modParameter = mod != null ?
                new ObjectParameter("mod", mod) :
                new ObjectParameter("mod", typeof(string));
    
            var instplanParameter = instplan != null ?
                new ObjectParameter("instplan", instplan) :
                new ObjectParameter("instplan", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Sp_Add_CommercialRoomTransfer", nameParameter, father_HusbandParameter, postal_AddressParameter, residential_AddressParameter, phone_OfficeParameter, residentialParameter, mobile_1Parameter, mobile_2Parameter, emailParameter, occupationParameter, nationalityParameter, date_Of_BirthParameter, cNIC_NICOPParameter, nominee_NameParameter, nominee_RelationParameter, nominee_AddressParameter, nominee_CNIC_NICOPParameter, comRom_IdParameter, cityParameter, deliveryParameter, datetimeParameter, totalpriceParameter, dicountParameter, lastUpdatedByParameter, recordAddedByParameter, flagParameter, modParameter, instplanParameter);
        }
    
        public virtual int Sp_Add_CommercialShopBound(Nullable<long> roomId, Nullable<long> locId, string locName, Nullable<long> prjId, string prjName, string type, string shopNo, string position)
        {
            var roomIdParameter = roomId.HasValue ?
                new ObjectParameter("roomId", roomId) :
                new ObjectParameter("roomId", typeof(long));
    
            var locIdParameter = locId.HasValue ?
                new ObjectParameter("locId", locId) :
                new ObjectParameter("locId", typeof(long));
    
            var locNameParameter = locName != null ?
                new ObjectParameter("locName", locName) :
                new ObjectParameter("locName", typeof(string));
    
            var prjIdParameter = prjId.HasValue ?
                new ObjectParameter("prjId", prjId) :
                new ObjectParameter("prjId", typeof(long));
    
            var prjNameParameter = prjName != null ?
                new ObjectParameter("prjName", prjName) :
                new ObjectParameter("prjName", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var shopNoParameter = shopNo != null ?
                new ObjectParameter("shopNo", shopNo) :
                new ObjectParameter("shopNo", typeof(string));
    
            var positionParameter = position != null ?
                new ObjectParameter("position", position) :
                new ObjectParameter("position", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_CommercialShopBound", roomIdParameter, locIdParameter, locNameParameter, prjIdParameter, prjNameParameter, typeParameter, shopNoParameter, positionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Sp_Add_CommercialShops(string com_App_Shop_Number, string type, Nullable<decimal> area, string location, Nullable<long> floor_Id, Nullable<long> plan_Id, string status, Nullable<decimal> ratePerMarla_SqFt, Nullable<decimal> extra_Amount, Nullable<decimal> total_SqFt_Marlas, string projectName)
        {
            var com_App_Shop_NumberParameter = com_App_Shop_Number != null ?
                new ObjectParameter("Com_App_Shop_Number", com_App_Shop_Number) :
                new ObjectParameter("Com_App_Shop_Number", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var areaParameter = area.HasValue ?
                new ObjectParameter("Area", area) :
                new ObjectParameter("Area", typeof(decimal));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var floor_IdParameter = floor_Id.HasValue ?
                new ObjectParameter("Floor_Id", floor_Id) :
                new ObjectParameter("Floor_Id", typeof(long));
    
            var plan_IdParameter = plan_Id.HasValue ?
                new ObjectParameter("Plan_Id", plan_Id) :
                new ObjectParameter("Plan_Id", typeof(long));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var ratePerMarla_SqFtParameter = ratePerMarla_SqFt.HasValue ?
                new ObjectParameter("RatePerMarla_SqFt", ratePerMarla_SqFt) :
                new ObjectParameter("RatePerMarla_SqFt", typeof(decimal));
    
            var extra_AmountParameter = extra_Amount.HasValue ?
                new ObjectParameter("Extra_Amount", extra_Amount) :
                new ObjectParameter("Extra_Amount", typeof(decimal));
    
            var total_SqFt_MarlasParameter = total_SqFt_Marlas.HasValue ?
                new ObjectParameter("Total_SqFt_Marlas", total_SqFt_Marlas) :
                new ObjectParameter("Total_SqFt_Marlas", typeof(decimal));
    
            var projectNameParameter = projectName != null ?
                new ObjectParameter("ProjectName", projectName) :
                new ObjectParameter("ProjectName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Sp_Add_CommercialShops", com_App_Shop_NumberParameter, typeParameter, areaParameter, locationParameter, floor_IdParameter, plan_IdParameter, statusParameter, ratePerMarla_SqFtParameter, extra_AmountParameter, total_SqFt_MarlasParameter, projectNameParameter);
        }
    
        public virtual int Sp_Add_CommercialShopTransfer(string name, string father_Husband, string postal_Address, string residential_Address, string phone_Office, string residential, string mobile_1, string mobile_2, string email, string occupation, string nationality, string date_Of_Birth, string cNIC_NICOP, string nominee_Name, string nominee_Relation, string nominee_Address, string nominee_CNIC_NICOP, Nullable<long> comRom_Id, string city, Nullable<bool> delivery, Nullable<System.DateTime> datetime, Nullable<long> grp, string owimage, string owimage2, string owimage3, string owimage4, string tansst)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var father_HusbandParameter = father_Husband != null ?
                new ObjectParameter("Father_Husband", father_Husband) :
                new ObjectParameter("Father_Husband", typeof(string));
    
            var postal_AddressParameter = postal_Address != null ?
                new ObjectParameter("Postal_Address", postal_Address) :
                new ObjectParameter("Postal_Address", typeof(string));
    
            var residential_AddressParameter = residential_Address != null ?
                new ObjectParameter("Residential_Address", residential_Address) :
                new ObjectParameter("Residential_Address", typeof(string));
    
            var phone_OfficeParameter = phone_Office != null ?
                new ObjectParameter("Phone_Office", phone_Office) :
                new ObjectParameter("Phone_Office", typeof(string));
    
            var residentialParameter = residential != null ?
                new ObjectParameter("Residential", residential) :
                new ObjectParameter("Residential", typeof(string));
    
            var mobile_1Parameter = mobile_1 != null ?
                new ObjectParameter("Mobile_1", mobile_1) :
                new ObjectParameter("Mobile_1", typeof(string));
    
            var mobile_2Parameter = mobile_2 != null ?
                new ObjectParameter("Mobile_2", mobile_2) :
                new ObjectParameter("Mobile_2", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var occupationParameter = occupation != null ?
                new ObjectParameter("Occupation", occupation) :
                new ObjectParameter("Occupation", typeof(string));
    
            var nationalityParameter = nationality != null ?
                new ObjectParameter("Nationality", nationality) :
                new ObjectParameter("Nationality", typeof(string));
    
            var date_Of_BirthParameter = date_Of_Birth != null ?
                new ObjectParameter("Date_Of_Birth", date_Of_Birth) :
                new ObjectParameter("Date_Of_Birth", typeof(string));
    
            var cNIC_NICOPParameter = cNIC_NICOP != null ?
                new ObjectParameter("CNIC_NICOP", cNIC_NICOP) :
                new ObjectParameter("CNIC_NICOP", typeof(string));
    
            var nominee_NameParameter = nominee_Name != null ?
                new ObjectParameter("Nominee_Name", nominee_Name) :
                new ObjectParameter("Nominee_Name", typeof(string));
    
            var nominee_RelationParameter = nominee_Relation != null ?
                new ObjectParameter("Nominee_Relation", nominee_Relation) :
                new ObjectParameter("Nominee_Relation", typeof(string));
    
            var nominee_AddressParameter = nominee_Address != null ?
                new ObjectParameter("Nominee_Address", nominee_Address) :
                new ObjectParameter("Nominee_Address", typeof(string));
    
            var nominee_CNIC_NICOPParameter = nominee_CNIC_NICOP != null ?
                new ObjectParameter("Nominee_CNIC_NICOP", nominee_CNIC_NICOP) :
                new ObjectParameter("Nominee_CNIC_NICOP", typeof(string));
    
            var comRom_IdParameter = comRom_Id.HasValue ?
                new ObjectParameter("ComRom_Id", comRom_Id) :
                new ObjectParameter("ComRom_Id", typeof(long));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var deliveryParameter = delivery.HasValue ?
                new ObjectParameter("Delivery", delivery) :
                new ObjectParameter("Delivery", typeof(bool));
    
            var datetimeParameter = datetime.HasValue ?
                new ObjectParameter("datetime", datetime) :
                new ObjectParameter("datetime", typeof(System.DateTime));
    
            var grpParameter = grp.HasValue ?
                new ObjectParameter("grp", grp) :
                new ObjectParameter("grp", typeof(long));
    
            var owimageParameter = owimage != null ?
                new ObjectParameter("owimage", owimage) :
                new ObjectParameter("owimage", typeof(string));
    
            var owimage2Parameter = owimage2 != null ?
                new ObjectParameter("owimage2", owimage2) :
                new ObjectParameter("owimage2", typeof(string));
    
            var owimage3Parameter = owimage3 != null ?
                new ObjectParameter("owimage3", owimage3) :
                new ObjectParameter("owimage3", typeof(string));
    
            var owimage4Parameter = owimage4 != null ?
                new ObjectParameter("owimage4", owimage4) :
                new ObjectParameter("owimage4", typeof(string));
    
            var tansstParameter = tansst != null ?
                new ObjectParameter("tansst", tansst) :
                new ObjectParameter("tansst", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_CommercialShopTransfer", nameParameter, father_HusbandParameter, postal_AddressParameter, residential_AddressParameter, phone_OfficeParameter, residentialParameter, mobile_1Parameter, mobile_2Parameter, emailParameter, occupationParameter, nationalityParameter, date_Of_BirthParameter, cNIC_NICOPParameter, nominee_NameParameter, nominee_RelationParameter, nominee_AddressParameter, nominee_CNIC_NICOPParameter, comRom_IdParameter, cityParameter, deliveryParameter, datetimeParameter, grpParameter, owimageParameter, owimage2Parameter, owimage3Parameter, owimage4Parameter, tansstParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_CommercialUserTransfer(string name, string father_Husband, string postal_Address, string residential_Address, string phone_Office, string residential, string mobile_1, string mobile_2, string email, string occupation, string nationality, string date_Of_Birth, string cNIC_NICOP, string nominee_Name, string nominee_Relation, string nominee_Address, string nominee_CNIC_NICOP, Nullable<long> comRom_Id, string city, Nullable<bool> delivery, Nullable<bool> flag, string o_Sta, string owimage, string owimage2, string owimage3, string owimage4, Nullable<long> grp)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var father_HusbandParameter = father_Husband != null ?
                new ObjectParameter("Father_Husband", father_Husband) :
                new ObjectParameter("Father_Husband", typeof(string));
    
            var postal_AddressParameter = postal_Address != null ?
                new ObjectParameter("Postal_Address", postal_Address) :
                new ObjectParameter("Postal_Address", typeof(string));
    
            var residential_AddressParameter = residential_Address != null ?
                new ObjectParameter("Residential_Address", residential_Address) :
                new ObjectParameter("Residential_Address", typeof(string));
    
            var phone_OfficeParameter = phone_Office != null ?
                new ObjectParameter("Phone_Office", phone_Office) :
                new ObjectParameter("Phone_Office", typeof(string));
    
            var residentialParameter = residential != null ?
                new ObjectParameter("Residential", residential) :
                new ObjectParameter("Residential", typeof(string));
    
            var mobile_1Parameter = mobile_1 != null ?
                new ObjectParameter("Mobile_1", mobile_1) :
                new ObjectParameter("Mobile_1", typeof(string));
    
            var mobile_2Parameter = mobile_2 != null ?
                new ObjectParameter("Mobile_2", mobile_2) :
                new ObjectParameter("Mobile_2", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var occupationParameter = occupation != null ?
                new ObjectParameter("Occupation", occupation) :
                new ObjectParameter("Occupation", typeof(string));
    
            var nationalityParameter = nationality != null ?
                new ObjectParameter("Nationality", nationality) :
                new ObjectParameter("Nationality", typeof(string));
    
            var date_Of_BirthParameter = date_Of_Birth != null ?
                new ObjectParameter("Date_Of_Birth", date_Of_Birth) :
                new ObjectParameter("Date_Of_Birth", typeof(string));
    
            var cNIC_NICOPParameter = cNIC_NICOP != null ?
                new ObjectParameter("CNIC_NICOP", cNIC_NICOP) :
                new ObjectParameter("CNIC_NICOP", typeof(string));
    
            var nominee_NameParameter = nominee_Name != null ?
                new ObjectParameter("Nominee_Name", nominee_Name) :
                new ObjectParameter("Nominee_Name", typeof(string));
    
            var nominee_RelationParameter = nominee_Relation != null ?
                new ObjectParameter("Nominee_Relation", nominee_Relation) :
                new ObjectParameter("Nominee_Relation", typeof(string));
    
            var nominee_AddressParameter = nominee_Address != null ?
                new ObjectParameter("Nominee_Address", nominee_Address) :
                new ObjectParameter("Nominee_Address", typeof(string));
    
            var nominee_CNIC_NICOPParameter = nominee_CNIC_NICOP != null ?
                new ObjectParameter("Nominee_CNIC_NICOP", nominee_CNIC_NICOP) :
                new ObjectParameter("Nominee_CNIC_NICOP", typeof(string));
    
            var comRom_IdParameter = comRom_Id.HasValue ?
                new ObjectParameter("ComRom_Id", comRom_Id) :
                new ObjectParameter("ComRom_Id", typeof(long));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var deliveryParameter = delivery.HasValue ?
                new ObjectParameter("Delivery", delivery) :
                new ObjectParameter("Delivery", typeof(bool));
    
            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(bool));
    
            var o_StaParameter = o_Sta != null ?
                new ObjectParameter("O_Sta", o_Sta) :
                new ObjectParameter("O_Sta", typeof(string));
    
            var owimageParameter = owimage != null ?
                new ObjectParameter("owimage", owimage) :
                new ObjectParameter("owimage", typeof(string));
    
            var owimage2Parameter = owimage2 != null ?
                new ObjectParameter("owimage2", owimage2) :
                new ObjectParameter("owimage2", typeof(string));
    
            var owimage3Parameter = owimage3 != null ?
                new ObjectParameter("owimage3", owimage3) :
                new ObjectParameter("owimage3", typeof(string));
    
            var owimage4Parameter = owimage4 != null ?
                new ObjectParameter("owimage4", owimage4) :
                new ObjectParameter("owimage4", typeof(string));
    
            var grpParameter = grp.HasValue ?
                new ObjectParameter("grp", grp) :
                new ObjectParameter("grp", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_CommercialUserTransfer", nameParameter, father_HusbandParameter, postal_AddressParameter, residential_AddressParameter, phone_OfficeParameter, residentialParameter, mobile_1Parameter, mobile_2Parameter, emailParameter, occupationParameter, nationalityParameter, date_Of_BirthParameter, cNIC_NICOPParameter, nominee_NameParameter, nominee_RelationParameter, nominee_AddressParameter, nominee_CNIC_NICOPParameter, comRom_IdParameter, cityParameter, deliveryParameter, flagParameter, o_StaParameter, owimageParameter, owimage2Parameter, owimage3Parameter, owimage4Parameter, grpParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Sp_Add_CompDepDes(string description, string name, Nullable<int> parent_Compdepdes, string type)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var parent_CompdepdesParameter = parent_Compdepdes.HasValue ?
                new ObjectParameter("Parent_Compdepdes", parent_Compdepdes) :
                new ObjectParameter("Parent_Compdepdes", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Sp_Add_CompDepDes", descriptionParameter, nameParameter, parent_CompdepdesParameter, typeParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Sp_Add_ConnectionCharges(string name, Nullable<decimal> rate, string type, string plottype)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("rate", rate) :
                new ObjectParameter("rate", typeof(decimal));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var plottypeParameter = plottype != null ?
                new ObjectParameter("plottype", plottype) :
                new ObjectParameter("plottype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Sp_Add_ConnectionCharges", nameParameter, rateParameter, typeParameter, plottypeParameter);
        }
    
        public virtual int Sp_Add_Deal_Plan(Nullable<decimal> r_pr_marla, Nullable<int> plt_Size, Nullable<int> num_of_files, Nullable<int> remaningfiles, Nullable<int> marlas, Nullable<int> total_files, Nullable<int> total_marlas, Nullable<decimal> total_price, Nullable<decimal> deposit, Nullable<decimal> advance, Nullable<decimal> rebate, Nullable<long> group_id, Nullable<long> daelid)
        {
            var r_pr_marlaParameter = r_pr_marla.HasValue ?
                new ObjectParameter("r_pr_marla", r_pr_marla) :
                new ObjectParameter("r_pr_marla", typeof(decimal));
    
            var plt_SizeParameter = plt_Size.HasValue ?
                new ObjectParameter("plt_Size", plt_Size) :
                new ObjectParameter("plt_Size", typeof(int));
    
            var num_of_filesParameter = num_of_files.HasValue ?
                new ObjectParameter("num_of_files", num_of_files) :
                new ObjectParameter("num_of_files", typeof(int));
    
            var remaningfilesParameter = remaningfiles.HasValue ?
                new ObjectParameter("remaningfiles", remaningfiles) :
                new ObjectParameter("remaningfiles", typeof(int));
    
            var marlasParameter = marlas.HasValue ?
                new ObjectParameter("marlas", marlas) :
                new ObjectParameter("marlas", typeof(int));
    
            var total_filesParameter = total_files.HasValue ?
                new ObjectParameter("total_files", total_files) :
                new ObjectParameter("total_files", typeof(int));
    
            var total_marlasParameter = total_marlas.HasValue ?
                new ObjectParameter("total_marlas", total_marlas) :
                new ObjectParameter("total_marlas", typeof(int));
    
            var total_priceParameter = total_price.HasValue ?
                new ObjectParameter("total_price", total_price) :
                new ObjectParameter("total_price", typeof(decimal));
    
            var depositParameter = deposit.HasValue ?
                new ObjectParameter("deposit", deposit) :
                new ObjectParameter("deposit", typeof(decimal));
    
            var advanceParameter = advance.HasValue ?
                new ObjectParameter("advance", advance) :
                new ObjectParameter("advance", typeof(decimal));
    
            var rebateParameter = rebate.HasValue ?
                new ObjectParameter("rebate", rebate) :
                new ObjectParameter("rebate", typeof(decimal));
    
            var group_idParameter = group_id.HasValue ?
                new ObjectParameter("group_id", group_id) :
                new ObjectParameter("group_id", typeof(long));
    
            var daelidParameter = daelid.HasValue ?
                new ObjectParameter("daelid", daelid) :
                new ObjectParameter("daelid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_Deal_Plan", r_pr_marlaParameter, plt_SizeParameter, num_of_filesParameter, remaningfilesParameter, marlasParameter, total_filesParameter, total_marlasParameter, total_priceParameter, depositParameter, advanceParameter, rebateParameter, group_idParameter, daelidParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Sp_Add_Dealers(string name, string fnam, string cnic, string mob1, string mob2, string addre, Nullable<long> dea_id, string city, Nullable<System.DateTime> datebirth)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var fnamParameter = fnam != null ?
                new ObjectParameter("fnam", fnam) :
                new ObjectParameter("fnam", typeof(string));
    
            var cnicParameter = cnic != null ?
                new ObjectParameter("cnic", cnic) :
                new ObjectParameter("cnic", typeof(string));
    
            var mob1Parameter = mob1 != null ?
                new ObjectParameter("mob1", mob1) :
                new ObjectParameter("mob1", typeof(string));
    
            var mob2Parameter = mob2 != null ?
                new ObjectParameter("mob2", mob2) :
                new ObjectParameter("mob2", typeof(string));
    
            var addreParameter = addre != null ?
                new ObjectParameter("addre", addre) :
                new ObjectParameter("addre", typeof(string));
    
            var dea_idParameter = dea_id.HasValue ?
                new ObjectParameter("dea_id", dea_id) :
                new ObjectParameter("dea_id", typeof(long));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var datebirthParameter = datebirth.HasValue ?
                new ObjectParameter("datebirth", datebirth) :
                new ObjectParameter("datebirth", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Sp_Add_Dealers", nameParameter, fnamParameter, cnicParameter, mob1Parameter, mob2Parameter, addreParameter, dea_idParameter, cityParameter, datebirthParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_Dealership_Dealers(string name, Nullable<long> qrid, string dealer)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var qridParameter = qrid.HasValue ?
                new ObjectParameter("qrid", qrid) :
                new ObjectParameter("qrid", typeof(long));
    
            var dealerParameter = dealer != null ?
                new ObjectParameter("dealer", dealer) :
                new ObjectParameter("dealer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_Dealership_Dealers", nameParameter, qridParameter, dealerParameter);
        }
    
        public virtual int Sp_Add_DealershipComments(Nullable<long> dealershipid, string coment, Nullable<long> userid, string type)
        {
            var dealershipidParameter = dealershipid.HasValue ?
                new ObjectParameter("dealershipid", dealershipid) :
                new ObjectParameter("dealershipid", typeof(long));
    
            var comentParameter = coment != null ?
                new ObjectParameter("coment", coment) :
                new ObjectParameter("coment", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_DealershipComments", dealershipidParameter, comentParameter, useridParameter, typeParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_DealFollowup(string description, Nullable<long> deal_Id, Nullable<long> userid, string type)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var deal_IdParameter = deal_Id.HasValue ?
                new ObjectParameter("Deal_Id", deal_Id) :
                new ObjectParameter("Deal_Id", typeof(long));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(long));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_DealFollowup", descriptionParameter, deal_IdParameter, useridParameter, typeParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_Deals(string dealer_Name, Nullable<long> dealer_id, Nullable<decimal> deal_total_amount, Nullable<decimal> advance, Nullable<decimal> rebate, Nullable<long> project, Nullable<long> phase, Nullable<long> blk, string project_name, string phase_name, string blk_name, Nullable<decimal> deposti)
        {
            var dealer_NameParameter = dealer_Name != null ?
                new ObjectParameter("Dealer_Name", dealer_Name) :
                new ObjectParameter("Dealer_Name", typeof(string));
    
            var dealer_idParameter = dealer_id.HasValue ?
                new ObjectParameter("dealer_id", dealer_id) :
                new ObjectParameter("dealer_id", typeof(long));
    
            var deal_total_amountParameter = deal_total_amount.HasValue ?
                new ObjectParameter("deal_total_amount", deal_total_amount) :
                new ObjectParameter("deal_total_amount", typeof(decimal));
    
            var advanceParameter = advance.HasValue ?
                new ObjectParameter("advance", advance) :
                new ObjectParameter("advance", typeof(decimal));
    
            var rebateParameter = rebate.HasValue ?
                new ObjectParameter("rebate", rebate) :
                new ObjectParameter("rebate", typeof(decimal));
    
            var projectParameter = project.HasValue ?
                new ObjectParameter("Project", project) :
                new ObjectParameter("Project", typeof(long));
    
            var phaseParameter = phase.HasValue ?
                new ObjectParameter("phase", phase) :
                new ObjectParameter("phase", typeof(long));
    
            var blkParameter = blk.HasValue ?
                new ObjectParameter("blk", blk) :
                new ObjectParameter("blk", typeof(long));
    
            var project_nameParameter = project_name != null ?
                new ObjectParameter("project_name", project_name) :
                new ObjectParameter("project_name", typeof(string));
    
            var phase_nameParameter = phase_name != null ?
                new ObjectParameter("phase_name", phase_name) :
                new ObjectParameter("phase_name", typeof(string));
    
            var blk_nameParameter = blk_name != null ?
                new ObjectParameter("blk_name", blk_name) :
                new ObjectParameter("blk_name", typeof(string));
    
            var depostiParameter = deposti.HasValue ?
                new ObjectParameter("deposti", deposti) :
                new ObjectParameter("deposti", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_Deals", dealer_NameParameter, dealer_idParameter, deal_total_amountParameter, advanceParameter, rebateParameter, projectParameter, phaseParameter, blkParameter, project_nameParameter, phase_nameParameter, blk_nameParameter, depostiParameter);
        }
    
        public virtual int Sp_Add_DemandReq(string items, Nullable<long> creatorId, Nullable<long> grop)
        {
            var itemsParameter = items != null ?
                new ObjectParameter("Items", items) :
                new ObjectParameter("Items", typeof(string));
    
            var creatorIdParameter = creatorId.HasValue ?
                new ObjectParameter("creatorId", creatorId) :
                new ObjectParameter("creatorId", typeof(long));
    
            var gropParameter = grop.HasValue ?
                new ObjectParameter("Grop", grop) :
                new ObjectParameter("Grop", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_DemandReq", itemsParameter, creatorIdParameter, gropParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Sp_Add_Discount(Nullable<decimal> amt, Nullable<decimal> dis, string desc, Nullable<long> file_plt_id, string module, Nullable<System.DateTime> disDate)
        {
            var amtParameter = amt.HasValue ?
                new ObjectParameter("amt", amt) :
                new ObjectParameter("amt", typeof(decimal));
    
            var disParameter = dis.HasValue ?
                new ObjectParameter("dis", dis) :
                new ObjectParameter("dis", typeof(decimal));
    
            var descParameter = desc != null ?
                new ObjectParameter("desc", desc) :
                new ObjectParameter("desc", typeof(string));
    
            var file_plt_idParameter = file_plt_id.HasValue ?
                new ObjectParameter("file_plt_id", file_plt_id) :
                new ObjectParameter("file_plt_id", typeof(long));
    
            var moduleParameter = module != null ?
                new ObjectParameter("module", module) :
                new ObjectParameter("module", typeof(string));
    
            var disDateParameter = disDate.HasValue ?
                new ObjectParameter("disDate", disDate) :
                new ObjectParameter("disDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Sp_Add_Discount", amtParameter, disParameter, descParameter, file_plt_idParameter, moduleParameter, disDateParameter);
        }
    
        public virtual int Sp_Add_Discountvalue(Nullable<decimal> discount_Amount, string module, Nullable<long> module_Id, Nullable<decimal> percentage, string remarks, Nullable<decimal> total_Amount)
        {
            var discount_AmountParameter = discount_Amount.HasValue ?
                new ObjectParameter("Discount_Amount", discount_Amount) :
                new ObjectParameter("Discount_Amount", typeof(decimal));
    
            var moduleParameter = module != null ?
                new ObjectParameter("Module", module) :
                new ObjectParameter("Module", typeof(string));
    
            var module_IdParameter = module_Id.HasValue ?
                new ObjectParameter("Module_Id", module_Id) :
                new ObjectParameter("Module_Id", typeof(long));
    
            var percentageParameter = percentage.HasValue ?
                new ObjectParameter("Percentage", percentage) :
                new ObjectParameter("Percentage", typeof(decimal));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var total_AmountParameter = total_Amount.HasValue ?
                new ObjectParameter("Total_Amount", total_Amount) :
                new ObjectParameter("Total_Amount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_Discountvalue", discount_AmountParameter, moduleParameter, module_IdParameter, percentageParameter, remarksParameter, total_AmountParameter);
        }
    
        public virtual int Sp_Add_Draft(Nullable<long> group_Tag, Nullable<long> line, string msg_Text, string msg_Data, Nullable<long> added_by, Nullable<System.DateTime> dateTime)
        {
            var group_TagParameter = group_Tag.HasValue ?
                new ObjectParameter("Group_Tag", group_Tag) :
                new ObjectParameter("Group_Tag", typeof(long));
    
            var lineParameter = line.HasValue ?
                new ObjectParameter("Line", line) :
                new ObjectParameter("Line", typeof(long));
    
            var msg_TextParameter = msg_Text != null ?
                new ObjectParameter("Msg_Text", msg_Text) :
                new ObjectParameter("Msg_Text", typeof(string));
    
            var msg_DataParameter = msg_Data != null ?
                new ObjectParameter("Msg_Data", msg_Data) :
                new ObjectParameter("Msg_Data", typeof(string));
    
            var added_byParameter = added_by.HasValue ?
                new ObjectParameter("Added_by", added_by) :
                new ObjectParameter("Added_by", typeof(long));
    
            var dateTimeParameter = dateTime.HasValue ?
                new ObjectParameter("DateTime", dateTime) :
                new ObjectParameter("DateTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_Draft", group_TagParameter, lineParameter, msg_TextParameter, msg_DataParameter, added_byParameter, dateTimeParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_ElectricityBill(Nullable<long> previous_Reading, Nullable<decimal> tot_amt, Nullable<decimal> grntot, Nullable<long> plot_Id, string name, string plot_No, string block, string plot_Type, Nullable<long> current_Reading, Nullable<int> units, Nullable<decimal> rate, Nullable<decimal> amount_Paid, Nullable<long> meter_Id, string meter_No, Nullable<decimal> arrears, Nullable<int> fine_Percentage, Nullable<decimal> fine_Amount, Nullable<System.DateTime> due_Date, Nullable<decimal> due_date_Amount, Nullable<decimal> net_Total, string details)
        {
            var previous_ReadingParameter = previous_Reading.HasValue ?
                new ObjectParameter("Previous_Reading", previous_Reading) :
                new ObjectParameter("Previous_Reading", typeof(long));
    
            var tot_amtParameter = tot_amt.HasValue ?
                new ObjectParameter("tot_amt", tot_amt) :
                new ObjectParameter("tot_amt", typeof(decimal));
    
            var grntotParameter = grntot.HasValue ?
                new ObjectParameter("grntot", grntot) :
                new ObjectParameter("grntot", typeof(decimal));
    
            var plot_IdParameter = plot_Id.HasValue ?
                new ObjectParameter("Plot_Id", plot_Id) :
                new ObjectParameter("Plot_Id", typeof(long));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var plot_NoParameter = plot_No != null ?
                new ObjectParameter("Plot_No", plot_No) :
                new ObjectParameter("Plot_No", typeof(string));
    
            var blockParameter = block != null ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(string));
    
            var plot_TypeParameter = plot_Type != null ?
                new ObjectParameter("Plot_Type", plot_Type) :
                new ObjectParameter("Plot_Type", typeof(string));
    
            var current_ReadingParameter = current_Reading.HasValue ?
                new ObjectParameter("Current_Reading", current_Reading) :
                new ObjectParameter("Current_Reading", typeof(long));
    
            var unitsParameter = units.HasValue ?
                new ObjectParameter("Units", units) :
                new ObjectParameter("Units", typeof(int));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("Rate", rate) :
                new ObjectParameter("Rate", typeof(decimal));
    
            var amount_PaidParameter = amount_Paid.HasValue ?
                new ObjectParameter("Amount_Paid", amount_Paid) :
                new ObjectParameter("Amount_Paid", typeof(decimal));
    
            var meter_IdParameter = meter_Id.HasValue ?
                new ObjectParameter("Meter_Id", meter_Id) :
                new ObjectParameter("Meter_Id", typeof(long));
    
            var meter_NoParameter = meter_No != null ?
                new ObjectParameter("Meter_No", meter_No) :
                new ObjectParameter("Meter_No", typeof(string));
    
            var arrearsParameter = arrears.HasValue ?
                new ObjectParameter("Arrears", arrears) :
                new ObjectParameter("Arrears", typeof(decimal));
    
            var fine_PercentageParameter = fine_Percentage.HasValue ?
                new ObjectParameter("Fine_Percentage", fine_Percentage) :
                new ObjectParameter("Fine_Percentage", typeof(int));
    
            var fine_AmountParameter = fine_Amount.HasValue ?
                new ObjectParameter("Fine_Amount", fine_Amount) :
                new ObjectParameter("Fine_Amount", typeof(decimal));
    
            var due_DateParameter = due_Date.HasValue ?
                new ObjectParameter("Due_Date", due_Date) :
                new ObjectParameter("Due_Date", typeof(System.DateTime));
    
            var due_date_AmountParameter = due_date_Amount.HasValue ?
                new ObjectParameter("Due_date_Amount", due_date_Amount) :
                new ObjectParameter("Due_date_Amount", typeof(decimal));
    
            var net_TotalParameter = net_Total.HasValue ?
                new ObjectParameter("Net_Total", net_Total) :
                new ObjectParameter("Net_Total", typeof(decimal));
    
            var detailsParameter = details != null ?
                new ObjectParameter("details", details) :
                new ObjectParameter("details", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_ElectricityBill", previous_ReadingParameter, tot_amtParameter, grntotParameter, plot_IdParameter, nameParameter, plot_NoParameter, blockParameter, plot_TypeParameter, current_ReadingParameter, unitsParameter, rateParameter, amount_PaidParameter, meter_IdParameter, meter_NoParameter, arrearsParameter, fine_PercentageParameter, fine_AmountParameter, due_DateParameter, due_date_AmountParameter, net_TotalParameter, detailsParameter);
        }
    
        public virtual ObjectResult<Sp_Add_Employee_Result> Sp_Add_Employee(string address, string blood_Group, string city, string cNIC, string company_Email, Nullable<System.DateTime> date_Of_Birth, Nullable<System.DateTime> date_Of_Joining, string email, string emergency_Contact, string employee_Code, string father_Name, string image, string jobDescription, string marital_Status, string mobile_1, string mobile_2, string name, string relationship, Nullable<long> reporting_To, Nullable<long> reporting_To_2, string depdes, Nullable<decimal> salary, string gender, string otherDets, string religion)
        {
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var blood_GroupParameter = blood_Group != null ?
                new ObjectParameter("Blood_Group", blood_Group) :
                new ObjectParameter("Blood_Group", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var cNICParameter = cNIC != null ?
                new ObjectParameter("CNIC", cNIC) :
                new ObjectParameter("CNIC", typeof(string));
    
            var company_EmailParameter = company_Email != null ?
                new ObjectParameter("Company_Email", company_Email) :
                new ObjectParameter("Company_Email", typeof(string));
    
            var date_Of_BirthParameter = date_Of_Birth.HasValue ?
                new ObjectParameter("Date_Of_Birth", date_Of_Birth) :
                new ObjectParameter("Date_Of_Birth", typeof(System.DateTime));
    
            var date_Of_JoiningParameter = date_Of_Joining.HasValue ?
                new ObjectParameter("Date_Of_Joining", date_Of_Joining) :
                new ObjectParameter("Date_Of_Joining", typeof(System.DateTime));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var emergency_ContactParameter = emergency_Contact != null ?
                new ObjectParameter("Emergency_Contact", emergency_Contact) :
                new ObjectParameter("Emergency_Contact", typeof(string));
    
            var employee_CodeParameter = employee_Code != null ?
                new ObjectParameter("Employee_Code", employee_Code) :
                new ObjectParameter("Employee_Code", typeof(string));
    
            var father_NameParameter = father_Name != null ?
                new ObjectParameter("Father_Name", father_Name) :
                new ObjectParameter("Father_Name", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var jobDescriptionParameter = jobDescription != null ?
                new ObjectParameter("JobDescription", jobDescription) :
                new ObjectParameter("JobDescription", typeof(string));
    
            var marital_StatusParameter = marital_Status != null ?
                new ObjectParameter("Marital_Status", marital_Status) :
                new ObjectParameter("Marital_Status", typeof(string));
    
            var mobile_1Parameter = mobile_1 != null ?
                new ObjectParameter("Mobile_1", mobile_1) :
                new ObjectParameter("Mobile_1", typeof(string));
    
            var mobile_2Parameter = mobile_2 != null ?
                new ObjectParameter("Mobile_2", mobile_2) :
                new ObjectParameter("Mobile_2", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var relationshipParameter = relationship != null ?
                new ObjectParameter("Relationship", relationship) :
                new ObjectParameter("Relationship", typeof(string));
    
            var reporting_ToParameter = reporting_To.HasValue ?
                new ObjectParameter("Reporting_To", reporting_To) :
                new ObjectParameter("Reporting_To", typeof(long));
    
            var reporting_To_2Parameter = reporting_To_2.HasValue ?
                new ObjectParameter("Reporting_To_2", reporting_To_2) :
                new ObjectParameter("Reporting_To_2", typeof(long));
    
            var depdesParameter = depdes != null ?
                new ObjectParameter("depdes", depdes) :
                new ObjectParameter("depdes", typeof(string));
    
            var salaryParameter = salary.HasValue ?
                new ObjectParameter("Salary", salary) :
                new ObjectParameter("Salary", typeof(decimal));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var otherDetsParameter = otherDets != null ?
                new ObjectParameter("otherDets", otherDets) :
                new ObjectParameter("otherDets", typeof(string));
    
            var religionParameter = religion != null ?
                new ObjectParameter("religion", religion) :
                new ObjectParameter("religion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Add_Employee_Result>("Sp_Add_Employee", addressParameter, blood_GroupParameter, cityParameter, cNICParameter, company_EmailParameter, date_Of_BirthParameter, date_Of_JoiningParameter, emailParameter, emergency_ContactParameter, employee_CodeParameter, father_NameParameter, imageParameter, jobDescriptionParameter, marital_StatusParameter, mobile_1Parameter, mobile_2Parameter, nameParameter, relationshipParameter, reporting_ToParameter, reporting_To_2Parameter, depdesParameter, salaryParameter, genderParameter, otherDetsParameter, religionParameter);
        }
    
        public virtual int Sp_Add_Employee_Acheivements(string description, Nullable<System.DateTime> date, Nullable<long> empid)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var empidParameter = empid.HasValue ?
                new ObjectParameter("Empid", empid) :
                new ObjectParameter("Empid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_Employee_Acheivements", descriptionParameter, dateParameter, empidParameter);
        }
    
        public virtual int Sp_Add_Employee_Award(string description, Nullable<System.DateTime> date, Nullable<long> empid)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var empidParameter = empid.HasValue ?
                new ObjectParameter("Empid", empid) :
                new ObjectParameter("Empid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_Employee_Award", descriptionParameter, dateParameter, empidParameter);
        }
    
        public virtual int Sp_Add_Employee_Image(string image, Nullable<long> id)
        {
            var imageParameter = image != null ?
                new ObjectParameter("image", image) :
                new ObjectParameter("image", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_Employee_Image", imageParameter, idParameter);
        }
    
        public virtual int Sp_Add_Employee_Leaves(Nullable<long> empid)
        {
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_Employee_Leaves", empidParameter);
        }
    
        public virtual int Sp_Add_Employee_Reward(string description, Nullable<System.DateTime> date, Nullable<long> empid)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var empidParameter = empid.HasValue ?
                new ObjectParameter("Empid", empid) :
                new ObjectParameter("Empid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_Employee_Reward", descriptionParameter, dateParameter, empidParameter);
        }
    
        public virtual int Sp_Add_Employee_Training(string description, Nullable<System.DateTime> date, Nullable<long> empid)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var empidParameter = empid.HasValue ?
                new ObjectParameter("Empid", empid) :
                new ObjectParameter("Empid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_Employee_Training", descriptionParameter, dateParameter, empidParameter);
        }
    
        public virtual int Sp_Add_Employeeleave(Nullable<long> empid, string leavetype, Nullable<int> granted)
        {
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(long));
    
            var leavetypeParameter = leavetype != null ?
                new ObjectParameter("leavetype", leavetype) :
                new ObjectParameter("leavetype", typeof(string));
    
            var grantedParameter = granted.HasValue ?
                new ObjectParameter("granted", granted) :
                new ObjectParameter("granted", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_Employeeleave", empidParameter, leavetypeParameter, grantedParameter);
        }
    
        public virtual int Sp_Add_ErrorLog(string msg, string innerException, string stackTrace, string controller, string method)
        {
            var msgParameter = msg != null ?
                new ObjectParameter("Msg", msg) :
                new ObjectParameter("Msg", typeof(string));
    
            var innerExceptionParameter = innerException != null ?
                new ObjectParameter("InnerException", innerException) :
                new ObjectParameter("InnerException", typeof(string));
    
            var stackTraceParameter = stackTrace != null ?
                new ObjectParameter("StackTrace", stackTrace) :
                new ObjectParameter("StackTrace", typeof(string));
    
            var controllerParameter = controller != null ?
                new ObjectParameter("Controller", controller) :
                new ObjectParameter("Controller", typeof(string));
    
            var methodParameter = method != null ?
                new ObjectParameter("Method", method) :
                new ObjectParameter("Method", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_ErrorLog", msgParameter, innerExceptionParameter, stackTraceParameter, controllerParameter, methodParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_ExpoFile(string plot_Size, string name, string father_Husband, string postal_Address, string residential_Address, string phone_Office, string residential, string mobile_1, string mobile_2, string email, string occupation, string nationality, string date_Of_Birth, string cNIC_NICOP, string nominee_Name, string nominee_Relation, string nominee_Address, string nominee_CNIC_NICOP, string plot_Prefrence, Nullable<long> file_Form_Id, Nullable<long> phase_Id, Nullable<long> block_Id, Nullable<long> qR_Code, string city)
        {
            var plot_SizeParameter = plot_Size != null ?
                new ObjectParameter("Plot_Size", plot_Size) :
                new ObjectParameter("Plot_Size", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var father_HusbandParameter = father_Husband != null ?
                new ObjectParameter("Father_Husband", father_Husband) :
                new ObjectParameter("Father_Husband", typeof(string));
    
            var postal_AddressParameter = postal_Address != null ?
                new ObjectParameter("Postal_Address", postal_Address) :
                new ObjectParameter("Postal_Address", typeof(string));
    
            var residential_AddressParameter = residential_Address != null ?
                new ObjectParameter("Residential_Address", residential_Address) :
                new ObjectParameter("Residential_Address", typeof(string));
    
            var phone_OfficeParameter = phone_Office != null ?
                new ObjectParameter("Phone_Office", phone_Office) :
                new ObjectParameter("Phone_Office", typeof(string));
    
            var residentialParameter = residential != null ?
                new ObjectParameter("Residential", residential) :
                new ObjectParameter("Residential", typeof(string));
    
            var mobile_1Parameter = mobile_1 != null ?
                new ObjectParameter("Mobile_1", mobile_1) :
                new ObjectParameter("Mobile_1", typeof(string));
    
            var mobile_2Parameter = mobile_2 != null ?
                new ObjectParameter("Mobile_2", mobile_2) :
                new ObjectParameter("Mobile_2", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var occupationParameter = occupation != null ?
                new ObjectParameter("Occupation", occupation) :
                new ObjectParameter("Occupation", typeof(string));
    
            var nationalityParameter = nationality != null ?
                new ObjectParameter("Nationality", nationality) :
                new ObjectParameter("Nationality", typeof(string));
    
            var date_Of_BirthParameter = date_Of_Birth != null ?
                new ObjectParameter("Date_Of_Birth", date_Of_Birth) :
                new ObjectParameter("Date_Of_Birth", typeof(string));
    
            var cNIC_NICOPParameter = cNIC_NICOP != null ?
                new ObjectParameter("CNIC_NICOP", cNIC_NICOP) :
                new ObjectParameter("CNIC_NICOP", typeof(string));
    
            var nominee_NameParameter = nominee_Name != null ?
                new ObjectParameter("Nominee_Name", nominee_Name) :
                new ObjectParameter("Nominee_Name", typeof(string));
    
            var nominee_RelationParameter = nominee_Relation != null ?
                new ObjectParameter("Nominee_Relation", nominee_Relation) :
                new ObjectParameter("Nominee_Relation", typeof(string));
    
            var nominee_AddressParameter = nominee_Address != null ?
                new ObjectParameter("Nominee_Address", nominee_Address) :
                new ObjectParameter("Nominee_Address", typeof(string));
    
            var nominee_CNIC_NICOPParameter = nominee_CNIC_NICOP != null ?
                new ObjectParameter("Nominee_CNIC_NICOP", nominee_CNIC_NICOP) :
                new ObjectParameter("Nominee_CNIC_NICOP", typeof(string));
    
            var plot_PrefrenceParameter = plot_Prefrence != null ?
                new ObjectParameter("Plot_Prefrence", plot_Prefrence) :
                new ObjectParameter("Plot_Prefrence", typeof(string));
    
            var file_Form_IdParameter = file_Form_Id.HasValue ?
                new ObjectParameter("File_Form_Id", file_Form_Id) :
                new ObjectParameter("File_Form_Id", typeof(long));
    
            var phase_IdParameter = phase_Id.HasValue ?
                new ObjectParameter("Phase_Id", phase_Id) :
                new ObjectParameter("Phase_Id", typeof(long));
    
            var block_IdParameter = block_Id.HasValue ?
                new ObjectParameter("Block_Id", block_Id) :
                new ObjectParameter("Block_Id", typeof(long));
    
            var qR_CodeParameter = qR_Code.HasValue ?
                new ObjectParameter("QR_Code", qR_Code) :
                new ObjectParameter("QR_Code", typeof(long));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_ExpoFile", plot_SizeParameter, nameParameter, father_HusbandParameter, postal_AddressParameter, residential_AddressParameter, phone_OfficeParameter, residentialParameter, mobile_1Parameter, mobile_2Parameter, emailParameter, occupationParameter, nationalityParameter, date_Of_BirthParameter, cNIC_NICOPParameter, nominee_NameParameter, nominee_RelationParameter, nominee_AddressParameter, nominee_CNIC_NICOPParameter, plot_PrefrenceParameter, file_Form_IdParameter, phase_IdParameter, block_IdParameter, qR_CodeParameter, cityParameter);
        }
    
        public virtual int Sp_Add_FamilyProperties(string name, string father_Husband, string phone, string cNIC, string fileFormNumber, string fileID, Nullable<int> cust_ID, string cust_Phone, string postalAddress)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var father_HusbandParameter = father_Husband != null ?
                new ObjectParameter("Father_Husband", father_Husband) :
                new ObjectParameter("Father_Husband", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var cNICParameter = cNIC != null ?
                new ObjectParameter("CNIC", cNIC) :
                new ObjectParameter("CNIC", typeof(string));
    
            var fileFormNumberParameter = fileFormNumber != null ?
                new ObjectParameter("FileFormNumber", fileFormNumber) :
                new ObjectParameter("FileFormNumber", typeof(string));
    
            var fileIDParameter = fileID != null ?
                new ObjectParameter("FileID", fileID) :
                new ObjectParameter("FileID", typeof(string));
    
            var cust_IDParameter = cust_ID.HasValue ?
                new ObjectParameter("Cust_ID", cust_ID) :
                new ObjectParameter("Cust_ID", typeof(int));
    
            var cust_PhoneParameter = cust_Phone != null ?
                new ObjectParameter("Cust_Phone", cust_Phone) :
                new ObjectParameter("Cust_Phone", typeof(string));
    
            var postalAddressParameter = postalAddress != null ?
                new ObjectParameter("PostalAddress", postalAddress) :
                new ObjectParameter("PostalAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_FamilyProperties", nameParameter, father_HusbandParameter, phoneParameter, cNICParameter, fileFormNumberParameter, fileIDParameter, cust_IDParameter, cust_PhoneParameter, postalAddressParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_File(string plot_Size, string name, string father_Husband, string postal_Address, string residential_Address, string phone_Office, string residential, string mobile_1, string mobile_2, string email, string occupation, string nationality, string date_Of_Birth, string cNIC_NICOP, string nominee_Name, string nominee_Relation, string nominee_Address, string nominee_CNIC_NICOP, string plot_Prefrence, Nullable<long> file_Form_Id, Nullable<long> phase_Id, Nullable<long> block_Id, string city, string status, Nullable<decimal> rate, Nullable<decimal> total, Nullable<decimal> grandTotal, Nullable<bool> flag)
        {
            var plot_SizeParameter = plot_Size != null ?
                new ObjectParameter("Plot_Size", plot_Size) :
                new ObjectParameter("Plot_Size", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var father_HusbandParameter = father_Husband != null ?
                new ObjectParameter("Father_Husband", father_Husband) :
                new ObjectParameter("Father_Husband", typeof(string));
    
            var postal_AddressParameter = postal_Address != null ?
                new ObjectParameter("Postal_Address", postal_Address) :
                new ObjectParameter("Postal_Address", typeof(string));
    
            var residential_AddressParameter = residential_Address != null ?
                new ObjectParameter("Residential_Address", residential_Address) :
                new ObjectParameter("Residential_Address", typeof(string));
    
            var phone_OfficeParameter = phone_Office != null ?
                new ObjectParameter("Phone_Office", phone_Office) :
                new ObjectParameter("Phone_Office", typeof(string));
    
            var residentialParameter = residential != null ?
                new ObjectParameter("Residential", residential) :
                new ObjectParameter("Residential", typeof(string));
    
            var mobile_1Parameter = mobile_1 != null ?
                new ObjectParameter("Mobile_1", mobile_1) :
                new ObjectParameter("Mobile_1", typeof(string));
    
            var mobile_2Parameter = mobile_2 != null ?
                new ObjectParameter("Mobile_2", mobile_2) :
                new ObjectParameter("Mobile_2", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var occupationParameter = occupation != null ?
                new ObjectParameter("Occupation", occupation) :
                new ObjectParameter("Occupation", typeof(string));
    
            var nationalityParameter = nationality != null ?
                new ObjectParameter("Nationality", nationality) :
                new ObjectParameter("Nationality", typeof(string));
    
            var date_Of_BirthParameter = date_Of_Birth != null ?
                new ObjectParameter("Date_Of_Birth", date_Of_Birth) :
                new ObjectParameter("Date_Of_Birth", typeof(string));
    
            var cNIC_NICOPParameter = cNIC_NICOP != null ?
                new ObjectParameter("CNIC_NICOP", cNIC_NICOP) :
                new ObjectParameter("CNIC_NICOP", typeof(string));
    
            var nominee_NameParameter = nominee_Name != null ?
                new ObjectParameter("Nominee_Name", nominee_Name) :
                new ObjectParameter("Nominee_Name", typeof(string));
    
            var nominee_RelationParameter = nominee_Relation != null ?
                new ObjectParameter("Nominee_Relation", nominee_Relation) :
                new ObjectParameter("Nominee_Relation", typeof(string));
    
            var nominee_AddressParameter = nominee_Address != null ?
                new ObjectParameter("Nominee_Address", nominee_Address) :
                new ObjectParameter("Nominee_Address", typeof(string));
    
            var nominee_CNIC_NICOPParameter = nominee_CNIC_NICOP != null ?
                new ObjectParameter("Nominee_CNIC_NICOP", nominee_CNIC_NICOP) :
                new ObjectParameter("Nominee_CNIC_NICOP", typeof(string));
    
            var plot_PrefrenceParameter = plot_Prefrence != null ?
                new ObjectParameter("Plot_Prefrence", plot_Prefrence) :
                new ObjectParameter("Plot_Prefrence", typeof(string));
    
            var file_Form_IdParameter = file_Form_Id.HasValue ?
                new ObjectParameter("File_Form_Id", file_Form_Id) :
                new ObjectParameter("File_Form_Id", typeof(long));
    
            var phase_IdParameter = phase_Id.HasValue ?
                new ObjectParameter("Phase_Id", phase_Id) :
                new ObjectParameter("Phase_Id", typeof(long));
    
            var block_IdParameter = block_Id.HasValue ?
                new ObjectParameter("Block_Id", block_Id) :
                new ObjectParameter("Block_Id", typeof(long));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("rate", rate) :
                new ObjectParameter("rate", typeof(decimal));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(decimal));
    
            var grandTotalParameter = grandTotal.HasValue ?
                new ObjectParameter("grandTotal", grandTotal) :
                new ObjectParameter("grandTotal", typeof(decimal));
    
            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_File", plot_SizeParameter, nameParameter, father_HusbandParameter, postal_AddressParameter, residential_AddressParameter, phone_OfficeParameter, residentialParameter, mobile_1Parameter, mobile_2Parameter, emailParameter, occupationParameter, nationalityParameter, date_Of_BirthParameter, cNIC_NICOPParameter, nominee_NameParameter, nominee_RelationParameter, nominee_AddressParameter, nominee_CNIC_NICOPParameter, plot_PrefrenceParameter, file_Form_IdParameter, phase_IdParameter, block_IdParameter, cityParameter, statusParameter, rateParameter, totalParameter, grandTotalParameter, flagParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_File_group(string plot_Size, string name, string father_Husband, string postal_Address, string residential_Address, string phone_Office, string residential, string mobile_1, string mobile_2, string email, string occupation, string nationality, string date_Of_Birth, string cNIC_NICOP, string nominee_Name, string nominee_Relation, string nominee_Address, string nominee_CNIC_NICOP, string plot_Prefrence, Nullable<long> file_Form_Id, Nullable<long> phase_Id, Nullable<long> block_Id, string city, string status, Nullable<decimal> rate, Nullable<decimal> total, Nullable<decimal> grandTotal, Nullable<bool> flag, Nullable<long> group_tag)
        {
            var plot_SizeParameter = plot_Size != null ?
                new ObjectParameter("Plot_Size", plot_Size) :
                new ObjectParameter("Plot_Size", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var father_HusbandParameter = father_Husband != null ?
                new ObjectParameter("Father_Husband", father_Husband) :
                new ObjectParameter("Father_Husband", typeof(string));
    
            var postal_AddressParameter = postal_Address != null ?
                new ObjectParameter("Postal_Address", postal_Address) :
                new ObjectParameter("Postal_Address", typeof(string));
    
            var residential_AddressParameter = residential_Address != null ?
                new ObjectParameter("Residential_Address", residential_Address) :
                new ObjectParameter("Residential_Address", typeof(string));
    
            var phone_OfficeParameter = phone_Office != null ?
                new ObjectParameter("Phone_Office", phone_Office) :
                new ObjectParameter("Phone_Office", typeof(string));
    
            var residentialParameter = residential != null ?
                new ObjectParameter("Residential", residential) :
                new ObjectParameter("Residential", typeof(string));
    
            var mobile_1Parameter = mobile_1 != null ?
                new ObjectParameter("Mobile_1", mobile_1) :
                new ObjectParameter("Mobile_1", typeof(string));
    
            var mobile_2Parameter = mobile_2 != null ?
                new ObjectParameter("Mobile_2", mobile_2) :
                new ObjectParameter("Mobile_2", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var occupationParameter = occupation != null ?
                new ObjectParameter("Occupation", occupation) :
                new ObjectParameter("Occupation", typeof(string));
    
            var nationalityParameter = nationality != null ?
                new ObjectParameter("Nationality", nationality) :
                new ObjectParameter("Nationality", typeof(string));
    
            var date_Of_BirthParameter = date_Of_Birth != null ?
                new ObjectParameter("Date_Of_Birth", date_Of_Birth) :
                new ObjectParameter("Date_Of_Birth", typeof(string));
    
            var cNIC_NICOPParameter = cNIC_NICOP != null ?
                new ObjectParameter("CNIC_NICOP", cNIC_NICOP) :
                new ObjectParameter("CNIC_NICOP", typeof(string));
    
            var nominee_NameParameter = nominee_Name != null ?
                new ObjectParameter("Nominee_Name", nominee_Name) :
                new ObjectParameter("Nominee_Name", typeof(string));
    
            var nominee_RelationParameter = nominee_Relation != null ?
                new ObjectParameter("Nominee_Relation", nominee_Relation) :
                new ObjectParameter("Nominee_Relation", typeof(string));
    
            var nominee_AddressParameter = nominee_Address != null ?
                new ObjectParameter("Nominee_Address", nominee_Address) :
                new ObjectParameter("Nominee_Address", typeof(string));
    
            var nominee_CNIC_NICOPParameter = nominee_CNIC_NICOP != null ?
                new ObjectParameter("Nominee_CNIC_NICOP", nominee_CNIC_NICOP) :
                new ObjectParameter("Nominee_CNIC_NICOP", typeof(string));
    
            var plot_PrefrenceParameter = plot_Prefrence != null ?
                new ObjectParameter("Plot_Prefrence", plot_Prefrence) :
                new ObjectParameter("Plot_Prefrence", typeof(string));
    
            var file_Form_IdParameter = file_Form_Id.HasValue ?
                new ObjectParameter("File_Form_Id", file_Form_Id) :
                new ObjectParameter("File_Form_Id", typeof(long));
    
            var phase_IdParameter = phase_Id.HasValue ?
                new ObjectParameter("Phase_Id", phase_Id) :
                new ObjectParameter("Phase_Id", typeof(long));
    
            var block_IdParameter = block_Id.HasValue ?
                new ObjectParameter("Block_Id", block_Id) :
                new ObjectParameter("Block_Id", typeof(long));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("rate", rate) :
                new ObjectParameter("rate", typeof(decimal));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(decimal));
    
            var grandTotalParameter = grandTotal.HasValue ?
                new ObjectParameter("grandTotal", grandTotal) :
                new ObjectParameter("grandTotal", typeof(decimal));
    
            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(bool));
    
            var group_tagParameter = group_tag.HasValue ?
                new ObjectParameter("Group_tag", group_tag) :
                new ObjectParameter("Group_tag", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_File_group", plot_SizeParameter, nameParameter, father_HusbandParameter, postal_AddressParameter, residential_AddressParameter, phone_OfficeParameter, residentialParameter, mobile_1Parameter, mobile_2Parameter, emailParameter, occupationParameter, nationalityParameter, date_Of_BirthParameter, cNIC_NICOPParameter, nominee_NameParameter, nominee_RelationParameter, nominee_AddressParameter, nominee_CNIC_NICOPParameter, plot_PrefrenceParameter, file_Form_IdParameter, phase_IdParameter, block_IdParameter, cityParameter, statusParameter, rateParameter, totalParameter, grandTotalParameter, flagParameter, group_tagParameter);
        }
    
        public virtual int Sp_Add_FileCancelation_Req(Nullable<long> plotid, Nullable<long> plot_own, Nullable<long> reqby, string rem, string plot_no, string block, string type)
        {
            var plotidParameter = plotid.HasValue ?
                new ObjectParameter("plotid", plotid) :
                new ObjectParameter("plotid", typeof(long));
    
            var plot_ownParameter = plot_own.HasValue ?
                new ObjectParameter("plot_own", plot_own) :
                new ObjectParameter("plot_own", typeof(long));
    
            var reqbyParameter = reqby.HasValue ?
                new ObjectParameter("reqby", reqby) :
                new ObjectParameter("reqby", typeof(long));
    
            var remParameter = rem != null ?
                new ObjectParameter("rem", rem) :
                new ObjectParameter("rem", typeof(string));
    
            var plot_noParameter = plot_no != null ?
                new ObjectParameter("plot_no", plot_no) :
                new ObjectParameter("plot_no", typeof(string));
    
            var blockParameter = block != null ?
                new ObjectParameter("block", block) :
                new ObjectParameter("block", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_FileCancelation_Req", plotidParameter, plot_ownParameter, reqbyParameter, remParameter, plot_noParameter, blockParameter, typeParameter);
        }
    
        public virtual int Sp_Add_FileComments(Nullable<long> fileid, string coment, Nullable<long> userid, string type)
        {
            var fileidParameter = fileid.HasValue ?
                new ObjectParameter("Fileid", fileid) :
                new ObjectParameter("Fileid", typeof(long));
    
            var comentParameter = coment != null ?
                new ObjectParameter("coment", coment) :
                new ObjectParameter("coment", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_FileComments", fileidParameter, comentParameter, useridParameter, typeParameter);
        }
    
        public virtual ObjectResult<Sp_Add_FileForm_Result> Sp_Add_FileForm(Nullable<long> qRCode, string plot_Size, Nullable<long> dealership_Id, Nullable<decimal> security, Nullable<long> phase_Id, Nullable<long> block_Id, Nullable<long> status, Nullable<bool> development_Charges, Nullable<bool> security_NoSecurity, Nullable<decimal> security_Amount, Nullable<long> groupid, Nullable<long> instplanid, Nullable<long> userid, string type, Nullable<decimal> com, string blocknam, string sector, string num)
        {
            var qRCodeParameter = qRCode.HasValue ?
                new ObjectParameter("QRCode", qRCode) :
                new ObjectParameter("QRCode", typeof(long));
    
            var plot_SizeParameter = plot_Size != null ?
                new ObjectParameter("Plot_Size", plot_Size) :
                new ObjectParameter("Plot_Size", typeof(string));
    
            var dealership_IdParameter = dealership_Id.HasValue ?
                new ObjectParameter("Dealership_Id", dealership_Id) :
                new ObjectParameter("Dealership_Id", typeof(long));
    
            var securityParameter = security.HasValue ?
                new ObjectParameter("Security", security) :
                new ObjectParameter("Security", typeof(decimal));
    
            var phase_IdParameter = phase_Id.HasValue ?
                new ObjectParameter("Phase_Id", phase_Id) :
                new ObjectParameter("Phase_Id", typeof(long));
    
            var block_IdParameter = block_Id.HasValue ?
                new ObjectParameter("Block_Id", block_Id) :
                new ObjectParameter("Block_Id", typeof(long));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(long));
    
            var development_ChargesParameter = development_Charges.HasValue ?
                new ObjectParameter("Development_Charges", development_Charges) :
                new ObjectParameter("Development_Charges", typeof(bool));
    
            var security_NoSecurityParameter = security_NoSecurity.HasValue ?
                new ObjectParameter("Security_NoSecurity", security_NoSecurity) :
                new ObjectParameter("Security_NoSecurity", typeof(bool));
    
            var security_AmountParameter = security_Amount.HasValue ?
                new ObjectParameter("Security_Amount", security_Amount) :
                new ObjectParameter("Security_Amount", typeof(decimal));
    
            var groupidParameter = groupid.HasValue ?
                new ObjectParameter("groupid", groupid) :
                new ObjectParameter("groupid", typeof(long));
    
            var instplanidParameter = instplanid.HasValue ?
                new ObjectParameter("instplanid", instplanid) :
                new ObjectParameter("instplanid", typeof(long));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var comParameter = com.HasValue ?
                new ObjectParameter("com", com) :
                new ObjectParameter("com", typeof(decimal));
    
            var blocknamParameter = blocknam != null ?
                new ObjectParameter("blocknam", blocknam) :
                new ObjectParameter("blocknam", typeof(string));
    
            var sectorParameter = sector != null ?
                new ObjectParameter("Sector", sector) :
                new ObjectParameter("Sector", typeof(string));
    
            var numParameter = num != null ?
                new ObjectParameter("num", num) :
                new ObjectParameter("num", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Add_FileForm_Result>("Sp_Add_FileForm", qRCodeParameter, plot_SizeParameter, dealership_IdParameter, securityParameter, phase_IdParameter, block_IdParameter, statusParameter, development_ChargesParameter, security_NoSecurityParameter, security_AmountParameter, groupidParameter, instplanidParameter, useridParameter, typeParameter, comParameter, blocknamParameter, sectorParameter, numParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Sp_Add_FileInstallmentsPlan(string instplan, Nullable<long> fileid)
        {
            var instplanParameter = instplan != null ?
                new ObjectParameter("instplan", instplan) :
                new ObjectParameter("instplan", typeof(string));
    
            var fileidParameter = fileid.HasValue ?
                new ObjectParameter("fileid", fileid) :
                new ObjectParameter("fileid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Sp_Add_FileInstallmentsPlan", instplanParameter, fileidParameter);
        }
    
        public virtual int Sp_Add_FileOwnerData_grp(string name, string father_Husband, string postal_Address, string residential_Address, string city, string date_Of_Birth, string cNIC_NICOP, string nationality, string email, string phone_Office, string residential, string mobile_1, string mobile_2, string nominee_Name, string nominee_CNIC_NICOP, string nominee_Relation, string nominee_Address, string occupation, Nullable<System.DateTime> owner, Nullable<long> fileid, string ownership_Stat, Nullable<long> group)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var father_HusbandParameter = father_Husband != null ?
                new ObjectParameter("Father_Husband", father_Husband) :
                new ObjectParameter("Father_Husband", typeof(string));
    
            var postal_AddressParameter = postal_Address != null ?
                new ObjectParameter("Postal_Address", postal_Address) :
                new ObjectParameter("Postal_Address", typeof(string));
    
            var residential_AddressParameter = residential_Address != null ?
                new ObjectParameter("Residential_Address", residential_Address) :
                new ObjectParameter("Residential_Address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var date_Of_BirthParameter = date_Of_Birth != null ?
                new ObjectParameter("Date_Of_Birth", date_Of_Birth) :
                new ObjectParameter("Date_Of_Birth", typeof(string));
    
            var cNIC_NICOPParameter = cNIC_NICOP != null ?
                new ObjectParameter("CNIC_NICOP", cNIC_NICOP) :
                new ObjectParameter("CNIC_NICOP", typeof(string));
    
            var nationalityParameter = nationality != null ?
                new ObjectParameter("Nationality", nationality) :
                new ObjectParameter("Nationality", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phone_OfficeParameter = phone_Office != null ?
                new ObjectParameter("Phone_Office", phone_Office) :
                new ObjectParameter("Phone_Office", typeof(string));
    
            var residentialParameter = residential != null ?
                new ObjectParameter("Residential", residential) :
                new ObjectParameter("Residential", typeof(string));
    
            var mobile_1Parameter = mobile_1 != null ?
                new ObjectParameter("Mobile_1", mobile_1) :
                new ObjectParameter("Mobile_1", typeof(string));
    
            var mobile_2Parameter = mobile_2 != null ?
                new ObjectParameter("Mobile_2", mobile_2) :
                new ObjectParameter("Mobile_2", typeof(string));
    
            var nominee_NameParameter = nominee_Name != null ?
                new ObjectParameter("Nominee_Name", nominee_Name) :
                new ObjectParameter("Nominee_Name", typeof(string));
    
            var nominee_CNIC_NICOPParameter = nominee_CNIC_NICOP != null ?
                new ObjectParameter("Nominee_CNIC_NICOP", nominee_CNIC_NICOP) :
                new ObjectParameter("Nominee_CNIC_NICOP", typeof(string));
    
            var nominee_RelationParameter = nominee_Relation != null ?
                new ObjectParameter("Nominee_Relation", nominee_Relation) :
                new ObjectParameter("Nominee_Relation", typeof(string));
    
            var nominee_AddressParameter = nominee_Address != null ?
                new ObjectParameter("Nominee_Address", nominee_Address) :
                new ObjectParameter("Nominee_Address", typeof(string));
    
            var occupationParameter = occupation != null ?
                new ObjectParameter("Occupation", occupation) :
                new ObjectParameter("Occupation", typeof(string));
    
            var ownerParameter = owner.HasValue ?
                new ObjectParameter("owner", owner) :
                new ObjectParameter("owner", typeof(System.DateTime));
    
            var fileidParameter = fileid.HasValue ?
                new ObjectParameter("fileid", fileid) :
                new ObjectParameter("fileid", typeof(long));
    
            var ownership_StatParameter = ownership_Stat != null ?
                new ObjectParameter("Ownership_Stat", ownership_Stat) :
                new ObjectParameter("Ownership_Stat", typeof(string));
    
            var groupParameter = group.HasValue ?
                new ObjectParameter("group", group) :
                new ObjectParameter("group", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_FileOwnerData_grp", nameParameter, father_HusbandParameter, postal_AddressParameter, residential_AddressParameter, cityParameter, date_Of_BirthParameter, cNIC_NICOPParameter, nationalityParameter, emailParameter, phone_OfficeParameter, residentialParameter, mobile_1Parameter, mobile_2Parameter, nominee_NameParameter, nominee_CNIC_NICOPParameter, nominee_RelationParameter, nominee_AddressParameter, occupationParameter, ownerParameter, fileidParameter, ownership_StatParameter, groupParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_FileTest(string plot_Size, string name, string father_Husband, string postal_Address, string residential_Address, string phone_Office, string residential, string mobile_1, string mobile_2, string email, string occupation, string nationality, string date_Of_Birth, string cNIC_NICOP, string nominee_Name, string nominee_Relation, string nominee_Address, string nominee_CNIC_NICOP, string plot_Prefrence, Nullable<long> file_Form_Id, Nullable<long> phase_Id, Nullable<long> block_Id, string city, Nullable<decimal> rate, Nullable<decimal> total, Nullable<decimal> grandTotal, Nullable<bool> flag, Nullable<System.DateTime> date)
        {
            var plot_SizeParameter = plot_Size != null ?
                new ObjectParameter("Plot_Size", plot_Size) :
                new ObjectParameter("Plot_Size", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var father_HusbandParameter = father_Husband != null ?
                new ObjectParameter("Father_Husband", father_Husband) :
                new ObjectParameter("Father_Husband", typeof(string));
    
            var postal_AddressParameter = postal_Address != null ?
                new ObjectParameter("Postal_Address", postal_Address) :
                new ObjectParameter("Postal_Address", typeof(string));
    
            var residential_AddressParameter = residential_Address != null ?
                new ObjectParameter("Residential_Address", residential_Address) :
                new ObjectParameter("Residential_Address", typeof(string));
    
            var phone_OfficeParameter = phone_Office != null ?
                new ObjectParameter("Phone_Office", phone_Office) :
                new ObjectParameter("Phone_Office", typeof(string));
    
            var residentialParameter = residential != null ?
                new ObjectParameter("Residential", residential) :
                new ObjectParameter("Residential", typeof(string));
    
            var mobile_1Parameter = mobile_1 != null ?
                new ObjectParameter("Mobile_1", mobile_1) :
                new ObjectParameter("Mobile_1", typeof(string));
    
            var mobile_2Parameter = mobile_2 != null ?
                new ObjectParameter("Mobile_2", mobile_2) :
                new ObjectParameter("Mobile_2", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var occupationParameter = occupation != null ?
                new ObjectParameter("Occupation", occupation) :
                new ObjectParameter("Occupation", typeof(string));
    
            var nationalityParameter = nationality != null ?
                new ObjectParameter("Nationality", nationality) :
                new ObjectParameter("Nationality", typeof(string));
    
            var date_Of_BirthParameter = date_Of_Birth != null ?
                new ObjectParameter("Date_Of_Birth", date_Of_Birth) :
                new ObjectParameter("Date_Of_Birth", typeof(string));
    
            var cNIC_NICOPParameter = cNIC_NICOP != null ?
                new ObjectParameter("CNIC_NICOP", cNIC_NICOP) :
                new ObjectParameter("CNIC_NICOP", typeof(string));
    
            var nominee_NameParameter = nominee_Name != null ?
                new ObjectParameter("Nominee_Name", nominee_Name) :
                new ObjectParameter("Nominee_Name", typeof(string));
    
            var nominee_RelationParameter = nominee_Relation != null ?
                new ObjectParameter("Nominee_Relation", nominee_Relation) :
                new ObjectParameter("Nominee_Relation", typeof(string));
    
            var nominee_AddressParameter = nominee_Address != null ?
                new ObjectParameter("Nominee_Address", nominee_Address) :
                new ObjectParameter("Nominee_Address", typeof(string));
    
            var nominee_CNIC_NICOPParameter = nominee_CNIC_NICOP != null ?
                new ObjectParameter("Nominee_CNIC_NICOP", nominee_CNIC_NICOP) :
                new ObjectParameter("Nominee_CNIC_NICOP", typeof(string));
    
            var plot_PrefrenceParameter = plot_Prefrence != null ?
                new ObjectParameter("Plot_Prefrence", plot_Prefrence) :
                new ObjectParameter("Plot_Prefrence", typeof(string));
    
            var file_Form_IdParameter = file_Form_Id.HasValue ?
                new ObjectParameter("File_Form_Id", file_Form_Id) :
                new ObjectParameter("File_Form_Id", typeof(long));
    
            var phase_IdParameter = phase_Id.HasValue ?
                new ObjectParameter("Phase_Id", phase_Id) :
                new ObjectParameter("Phase_Id", typeof(long));
    
            var block_IdParameter = block_Id.HasValue ?
                new ObjectParameter("Block_Id", block_Id) :
                new ObjectParameter("Block_Id", typeof(long));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("rate", rate) :
                new ObjectParameter("rate", typeof(decimal));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(decimal));
    
            var grandTotalParameter = grandTotal.HasValue ?
                new ObjectParameter("grandTotal", grandTotal) :
                new ObjectParameter("grandTotal", typeof(decimal));
    
            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(bool));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_FileTest", plot_SizeParameter, nameParameter, father_HusbandParameter, postal_AddressParameter, residential_AddressParameter, phone_OfficeParameter, residentialParameter, mobile_1Parameter, mobile_2Parameter, emailParameter, occupationParameter, nationalityParameter, date_Of_BirthParameter, cNIC_NICOPParameter, nominee_NameParameter, nominee_RelationParameter, nominee_AddressParameter, nominee_CNIC_NICOPParameter, plot_PrefrenceParameter, file_Form_IdParameter, phase_IdParameter, block_IdParameter, cityParameter, rateParameter, totalParameter, grandTotalParameter, flagParameter, dateParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_FileTransfer(Nullable<long> groupNo)
        {
            var groupNoParameter = groupNo.HasValue ?
                new ObjectParameter("groupNo", groupNo) :
                new ObjectParameter("groupNo", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_FileTransfer", groupNoParameter);
        }
    
        public virtual int Sp_Add_Followup(Nullable<long> file_plot_number, string msg, string name, Nullable<long> userid, string type)
        {
            var file_plot_numberParameter = file_plot_number.HasValue ?
                new ObjectParameter("file_plot_number", file_plot_number) :
                new ObjectParameter("file_plot_number", typeof(long));
    
            var msgParameter = msg != null ?
                new ObjectParameter("msg", msg) :
                new ObjectParameter("msg", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_Followup", file_plot_numberParameter, msgParameter, nameParameter, useridParameter, typeParameter);
        }
    
        public virtual int Sp_Add_Fuel(string fuel_Type, Nullable<decimal> fuel_Rate, Nullable<System.DateTime> date)
        {
            var fuel_TypeParameter = fuel_Type != null ?
                new ObjectParameter("Fuel_Type", fuel_Type) :
                new ObjectParameter("Fuel_Type", typeof(string));
    
            var fuel_RateParameter = fuel_Rate.HasValue ?
                new ObjectParameter("Fuel_Rate", fuel_Rate) :
                new ObjectParameter("Fuel_Rate", typeof(decimal));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_Fuel", fuel_TypeParameter, fuel_RateParameter, dateParameter);
        }
    
        public virtual int Sp_Add_Fuel_Details(Nullable<long> vehicle_Id, Nullable<decimal> vehicle_Fule_Allow, Nullable<decimal> vehicle_Fule_Rate)
        {
            var vehicle_IdParameter = vehicle_Id.HasValue ?
                new ObjectParameter("Vehicle_Id", vehicle_Id) :
                new ObjectParameter("Vehicle_Id", typeof(long));
    
            var vehicle_Fule_AllowParameter = vehicle_Fule_Allow.HasValue ?
                new ObjectParameter("Vehicle_Fule_Allow", vehicle_Fule_Allow) :
                new ObjectParameter("Vehicle_Fule_Allow", typeof(decimal));
    
            var vehicle_Fule_RateParameter = vehicle_Fule_Rate.HasValue ?
                new ObjectParameter("Vehicle_Fule_Rate", vehicle_Fule_Rate) :
                new ObjectParameter("Vehicle_Fule_Rate", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_Fuel_Details", vehicle_IdParameter, vehicle_Fule_AllowParameter, vehicle_Fule_RateParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Sp_Add_General_Entries(string gen_entr, Nullable<long> userid)
        {
            var gen_entrParameter = gen_entr != null ?
                new ObjectParameter("gen_entr", gen_entr) :
                new ObjectParameter("gen_entr", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Sp_Add_General_Entries", gen_entrParameter, useridParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Sp_Add_General_Entries_Param(string gen_entr, Nullable<long> userid, string voucherno, string vouchertype)
        {
            var gen_entrParameter = gen_entr != null ?
                new ObjectParameter("gen_entr", gen_entr) :
                new ObjectParameter("gen_entr", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var vouchernoParameter = voucherno != null ?
                new ObjectParameter("voucherno", voucherno) :
                new ObjectParameter("voucherno", typeof(string));
    
            var vouchertypeParameter = vouchertype != null ?
                new ObjectParameter("vouchertype", vouchertype) :
                new ObjectParameter("vouchertype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Sp_Add_General_Entries_Param", gen_entrParameter, useridParameter, vouchernoParameter, vouchertypeParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_General_Entry(Nullable<decimal> debit, Nullable<decimal> credit, string inst_Bank, string inst_No, string inst_Status, Nullable<System.DateTime> inst_Date, string head, Nullable<int> head_Id, string head_Code, string head_Name, string naration, Nullable<long> groupid, Nullable<long> line, Nullable<decimal> qty, string uom, Nullable<decimal> rate, Nullable<long> userid, string voucherNo, string vouchertype, Nullable<int> comp_Id)
        {
            var debitParameter = debit.HasValue ?
                new ObjectParameter("Debit", debit) :
                new ObjectParameter("Debit", typeof(decimal));
    
            var creditParameter = credit.HasValue ?
                new ObjectParameter("Credit", credit) :
                new ObjectParameter("Credit", typeof(decimal));
    
            var inst_BankParameter = inst_Bank != null ?
                new ObjectParameter("Inst_Bank", inst_Bank) :
                new ObjectParameter("Inst_Bank", typeof(string));
    
            var inst_NoParameter = inst_No != null ?
                new ObjectParameter("Inst_No", inst_No) :
                new ObjectParameter("Inst_No", typeof(string));
    
            var inst_StatusParameter = inst_Status != null ?
                new ObjectParameter("Inst_Status", inst_Status) :
                new ObjectParameter("Inst_Status", typeof(string));
    
            var inst_DateParameter = inst_Date.HasValue ?
                new ObjectParameter("Inst_Date", inst_Date) :
                new ObjectParameter("Inst_Date", typeof(System.DateTime));
    
            var headParameter = head != null ?
                new ObjectParameter("Head", head) :
                new ObjectParameter("Head", typeof(string));
    
            var head_IdParameter = head_Id.HasValue ?
                new ObjectParameter("Head_Id", head_Id) :
                new ObjectParameter("Head_Id", typeof(int));
    
            var head_CodeParameter = head_Code != null ?
                new ObjectParameter("Head_Code", head_Code) :
                new ObjectParameter("Head_Code", typeof(string));
    
            var head_NameParameter = head_Name != null ?
                new ObjectParameter("Head_Name", head_Name) :
                new ObjectParameter("Head_Name", typeof(string));
    
            var narationParameter = naration != null ?
                new ObjectParameter("Naration", naration) :
                new ObjectParameter("Naration", typeof(string));
    
            var groupidParameter = groupid.HasValue ?
                new ObjectParameter("groupid", groupid) :
                new ObjectParameter("groupid", typeof(long));
    
            var lineParameter = line.HasValue ?
                new ObjectParameter("line", line) :
                new ObjectParameter("line", typeof(long));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("qty", qty) :
                new ObjectParameter("qty", typeof(decimal));
    
            var uomParameter = uom != null ?
                new ObjectParameter("uom", uom) :
                new ObjectParameter("uom", typeof(string));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("rate", rate) :
                new ObjectParameter("rate", typeof(decimal));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var voucherNoParameter = voucherNo != null ?
                new ObjectParameter("voucherNo", voucherNo) :
                new ObjectParameter("voucherNo", typeof(string));
    
            var vouchertypeParameter = vouchertype != null ?
                new ObjectParameter("vouchertype", vouchertype) :
                new ObjectParameter("vouchertype", typeof(string));
    
            var comp_IdParameter = comp_Id.HasValue ?
                new ObjectParameter("comp_Id", comp_Id) :
                new ObjectParameter("comp_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_General_Entry", debitParameter, creditParameter, inst_BankParameter, inst_NoParameter, inst_StatusParameter, inst_DateParameter, headParameter, head_IdParameter, head_CodeParameter, head_NameParameter, narationParameter, groupidParameter, lineParameter, qtyParameter, uomParameter, rateParameter, useridParameter, voucherNoParameter, vouchertypeParameter, comp_IdParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_General_Entry_Supervised(Nullable<decimal> debit, Nullable<decimal> credit, string head, Nullable<int> head_Id, string head_Code, string head_Name, string naration, Nullable<long> groupid, Nullable<long> line, Nullable<decimal> qty, string uom, Nullable<decimal> rate, Nullable<long> userid, Nullable<long> sup_by, string supnam, Nullable<System.DateTime> supdate, Nullable<long> ref_Id)
        {
            var debitParameter = debit.HasValue ?
                new ObjectParameter("Debit", debit) :
                new ObjectParameter("Debit", typeof(decimal));
    
            var creditParameter = credit.HasValue ?
                new ObjectParameter("Credit", credit) :
                new ObjectParameter("Credit", typeof(decimal));
    
            var headParameter = head != null ?
                new ObjectParameter("Head", head) :
                new ObjectParameter("Head", typeof(string));
    
            var head_IdParameter = head_Id.HasValue ?
                new ObjectParameter("Head_Id", head_Id) :
                new ObjectParameter("Head_Id", typeof(int));
    
            var head_CodeParameter = head_Code != null ?
                new ObjectParameter("Head_Code", head_Code) :
                new ObjectParameter("Head_Code", typeof(string));
    
            var head_NameParameter = head_Name != null ?
                new ObjectParameter("Head_Name", head_Name) :
                new ObjectParameter("Head_Name", typeof(string));
    
            var narationParameter = naration != null ?
                new ObjectParameter("Naration", naration) :
                new ObjectParameter("Naration", typeof(string));
    
            var groupidParameter = groupid.HasValue ?
                new ObjectParameter("groupid", groupid) :
                new ObjectParameter("groupid", typeof(long));
    
            var lineParameter = line.HasValue ?
                new ObjectParameter("line", line) :
                new ObjectParameter("line", typeof(long));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("qty", qty) :
                new ObjectParameter("qty", typeof(decimal));
    
            var uomParameter = uom != null ?
                new ObjectParameter("uom", uom) :
                new ObjectParameter("uom", typeof(string));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("rate", rate) :
                new ObjectParameter("rate", typeof(decimal));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var sup_byParameter = sup_by.HasValue ?
                new ObjectParameter("sup_by", sup_by) :
                new ObjectParameter("sup_by", typeof(long));
    
            var supnamParameter = supnam != null ?
                new ObjectParameter("supnam", supnam) :
                new ObjectParameter("supnam", typeof(string));
    
            var supdateParameter = supdate.HasValue ?
                new ObjectParameter("supdate", supdate) :
                new ObjectParameter("supdate", typeof(System.DateTime));
    
            var ref_IdParameter = ref_Id.HasValue ?
                new ObjectParameter("Ref_Id", ref_Id) :
                new ObjectParameter("Ref_Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_General_Entry_Supervised", debitParameter, creditParameter, headParameter, head_IdParameter, head_CodeParameter, head_NameParameter, narationParameter, groupidParameter, lineParameter, qtyParameter, uomParameter, rateParameter, useridParameter, sup_byParameter, supnamParameter, supdateParameter, ref_IdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Sp_Add_HD_Leaves(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string reason, Nullable<long> userID, Nullable<int> noOfDays, Nullable<int> officalLeave, string hrApproval, string managerApproval, Nullable<long> appliedBy, string leaveType, string leaveApply)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var reasonParameter = reason != null ?
                new ObjectParameter("Reason", reason) :
                new ObjectParameter("Reason", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var noOfDaysParameter = noOfDays.HasValue ?
                new ObjectParameter("NoOfDays", noOfDays) :
                new ObjectParameter("NoOfDays", typeof(int));
    
            var officalLeaveParameter = officalLeave.HasValue ?
                new ObjectParameter("OfficalLeave", officalLeave) :
                new ObjectParameter("OfficalLeave", typeof(int));
    
            var hrApprovalParameter = hrApproval != null ?
                new ObjectParameter("HrApproval", hrApproval) :
                new ObjectParameter("HrApproval", typeof(string));
    
            var managerApprovalParameter = managerApproval != null ?
                new ObjectParameter("ManagerApproval", managerApproval) :
                new ObjectParameter("ManagerApproval", typeof(string));
    
            var appliedByParameter = appliedBy.HasValue ?
                new ObjectParameter("AppliedBy", appliedBy) :
                new ObjectParameter("AppliedBy", typeof(long));
    
            var leaveTypeParameter = leaveType != null ?
                new ObjectParameter("LeaveType", leaveType) :
                new ObjectParameter("LeaveType", typeof(string));
    
            var leaveApplyParameter = leaveApply != null ?
                new ObjectParameter("LeaveApply", leaveApply) :
                new ObjectParameter("LeaveApply", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Sp_Add_HD_Leaves", startDateParameter, endDateParameter, reasonParameter, userIDParameter, noOfDaysParameter, officalLeaveParameter, hrApprovalParameter, managerApprovalParameter, appliedByParameter, leaveTypeParameter, leaveApplyParameter);
        }
    
        public virtual int Sp_Add_Head_Opening_Closing_Bal(Nullable<decimal> d_Balance, Nullable<decimal> c_Balance, string balance_Type, Nullable<System.DateTime> fiscal_End, Nullable<System.DateTime> fiscal_Start, Nullable<System.DateTime> entryDate, string head_Code, Nullable<int> head_Id, string head_Name, Nullable<long> userid)
        {
            var d_BalanceParameter = d_Balance.HasValue ?
                new ObjectParameter("D_Balance", d_Balance) :
                new ObjectParameter("D_Balance", typeof(decimal));
    
            var c_BalanceParameter = c_Balance.HasValue ?
                new ObjectParameter("C_Balance", c_Balance) :
                new ObjectParameter("C_Balance", typeof(decimal));
    
            var balance_TypeParameter = balance_Type != null ?
                new ObjectParameter("Balance_Type", balance_Type) :
                new ObjectParameter("Balance_Type", typeof(string));
    
            var fiscal_EndParameter = fiscal_End.HasValue ?
                new ObjectParameter("Fiscal_End", fiscal_End) :
                new ObjectParameter("Fiscal_End", typeof(System.DateTime));
    
            var fiscal_StartParameter = fiscal_Start.HasValue ?
                new ObjectParameter("Fiscal_Start", fiscal_Start) :
                new ObjectParameter("Fiscal_Start", typeof(System.DateTime));
    
            var entryDateParameter = entryDate.HasValue ?
                new ObjectParameter("EntryDate", entryDate) :
                new ObjectParameter("EntryDate", typeof(System.DateTime));
    
            var head_CodeParameter = head_Code != null ?
                new ObjectParameter("Head_Code", head_Code) :
                new ObjectParameter("Head_Code", typeof(string));
    
            var head_IdParameter = head_Id.HasValue ?
                new ObjectParameter("Head_Id", head_Id) :
                new ObjectParameter("Head_Id", typeof(int));
    
            var head_NameParameter = head_Name != null ?
                new ObjectParameter("Head_Name", head_Name) :
                new ObjectParameter("Head_Name", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_Head_Opening_Closing_Bal", d_BalanceParameter, c_BalanceParameter, balance_TypeParameter, fiscal_EndParameter, fiscal_StartParameter, entryDateParameter, head_CodeParameter, head_IdParameter, head_NameParameter, useridParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_HR_Issuance_Letters(Nullable<long> employeeid, string lettertype, string description, string text, Nullable<System.DateTime> issuedate, Nullable<long> createdby, string createdbyname, Nullable<System.DateTime> createdbydate, Nullable<long> issuedby, string issuedbyname)
        {
            var employeeidParameter = employeeid.HasValue ?
                new ObjectParameter("employeeid", employeeid) :
                new ObjectParameter("employeeid", typeof(long));
    
            var lettertypeParameter = lettertype != null ?
                new ObjectParameter("lettertype", lettertype) :
                new ObjectParameter("lettertype", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var textParameter = text != null ?
                new ObjectParameter("text", text) :
                new ObjectParameter("text", typeof(string));
    
            var issuedateParameter = issuedate.HasValue ?
                new ObjectParameter("issuedate", issuedate) :
                new ObjectParameter("issuedate", typeof(System.DateTime));
    
            var createdbyParameter = createdby.HasValue ?
                new ObjectParameter("createdby", createdby) :
                new ObjectParameter("createdby", typeof(long));
    
            var createdbynameParameter = createdbyname != null ?
                new ObjectParameter("createdbyname", createdbyname) :
                new ObjectParameter("createdbyname", typeof(string));
    
            var createdbydateParameter = createdbydate.HasValue ?
                new ObjectParameter("createdbydate", createdbydate) :
                new ObjectParameter("createdbydate", typeof(System.DateTime));
    
            var issuedbyParameter = issuedby.HasValue ?
                new ObjectParameter("issuedby", issuedby) :
                new ObjectParameter("issuedby", typeof(long));
    
            var issuedbynameParameter = issuedbyname != null ?
                new ObjectParameter("issuedbyname", issuedbyname) :
                new ObjectParameter("issuedbyname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_HR_Issuance_Letters", employeeidParameter, lettertypeParameter, descriptionParameter, textParameter, issuedateParameter, createdbyParameter, createdbynameParameter, createdbydateParameter, issuedbyParameter, issuedbynameParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Sp_Add_InstallmentStructure(string plotsize, Nullable<long> block_id, Nullable<decimal> total, Nullable<decimal> rate, Nullable<decimal> grandTotal, string module, string inststr)
        {
            var plotsizeParameter = plotsize != null ?
                new ObjectParameter("plotsize", plotsize) :
                new ObjectParameter("plotsize", typeof(string));
    
            var block_idParameter = block_id.HasValue ?
                new ObjectParameter("block_id", block_id) :
                new ObjectParameter("block_id", typeof(long));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("total", total) :
                new ObjectParameter("total", typeof(decimal));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("rate", rate) :
                new ObjectParameter("rate", typeof(decimal));
    
            var grandTotalParameter = grandTotal.HasValue ?
                new ObjectParameter("grandTotal", grandTotal) :
                new ObjectParameter("grandTotal", typeof(decimal));
    
            var moduleParameter = module != null ?
                new ObjectParameter("module", module) :
                new ObjectParameter("module", typeof(string));
    
            var inststrParameter = inststr != null ?
                new ObjectParameter("inststr", inststr) :
                new ObjectParameter("inststr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Sp_Add_InstallmentStructure", plotsizeParameter, block_idParameter, totalParameter, rateParameter, grandTotalParameter, moduleParameter, inststrParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_Inventory(string description, Nullable<decimal> diameter, Nullable<decimal> heigth, Nullable<bool> is_Perishable, string item_Name, Nullable<decimal> length, Nullable<decimal> minimum_Qty, string uOM, Nullable<long> userid, Nullable<decimal> width)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var diameterParameter = diameter.HasValue ?
                new ObjectParameter("Diameter", diameter) :
                new ObjectParameter("Diameter", typeof(decimal));
    
            var heigthParameter = heigth.HasValue ?
                new ObjectParameter("Heigth", heigth) :
                new ObjectParameter("Heigth", typeof(decimal));
    
            var is_PerishableParameter = is_Perishable.HasValue ?
                new ObjectParameter("Is_Perishable", is_Perishable) :
                new ObjectParameter("Is_Perishable", typeof(bool));
    
            var item_NameParameter = item_Name != null ?
                new ObjectParameter("Item_Name", item_Name) :
                new ObjectParameter("Item_Name", typeof(string));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("Length", length) :
                new ObjectParameter("Length", typeof(decimal));
    
            var minimum_QtyParameter = minimum_Qty.HasValue ?
                new ObjectParameter("Minimum_Qty", minimum_Qty) :
                new ObjectParameter("Minimum_Qty", typeof(decimal));
    
            var uOMParameter = uOM != null ?
                new ObjectParameter("UOM", uOM) :
                new ObjectParameter("UOM", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(long));
    
            var widthParameter = width.HasValue ?
                new ObjectParameter("Width", width) :
                new ObjectParameter("Width", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_Inventory", descriptionParameter, diameterParameter, heigthParameter, is_PerishableParameter, item_NameParameter, lengthParameter, minimum_QtyParameter, uOMParameter, useridParameter, widthParameter);
        }
    
        public virtual int Sp_Add_Inventory_Dep(Nullable<long> itemid, Nullable<long> depid, string depnam)
        {
            var itemidParameter = itemid.HasValue ?
                new ObjectParameter("itemid", itemid) :
                new ObjectParameter("itemid", typeof(long));
    
            var depidParameter = depid.HasValue ?
                new ObjectParameter("depid", depid) :
                new ObjectParameter("depid", typeof(long));
    
            var depnamParameter = depnam != null ?
                new ObjectParameter("depnam", depnam) :
                new ObjectParameter("depnam", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_Inventory_Dep", itemidParameter, depidParameter, depnamParameter);
        }
    
        public virtual ObjectResult<SP_Add_Inventory_StockIn_Result> SP_Add_Inventory_StockIn(string items, Nullable<long> creatorId, Nullable<long> trans)
        {
            var itemsParameter = items != null ?
                new ObjectParameter("Items", items) :
                new ObjectParameter("Items", typeof(string));
    
            var creatorIdParameter = creatorId.HasValue ?
                new ObjectParameter("creatorId", creatorId) :
                new ObjectParameter("creatorId", typeof(long));
    
            var transParameter = trans.HasValue ?
                new ObjectParameter("trans", trans) :
                new ObjectParameter("trans", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Add_Inventory_StockIn_Result>("SP_Add_Inventory_StockIn", itemsParameter, creatorIdParameter, transParameter);
        }
    
        public virtual int SP_Add_Inventory_StockIn_GRN(Nullable<long> id, string grn)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var grnParameter = grn != null ?
                new ObjectParameter("grn", grn) :
                new ObjectParameter("grn", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Add_Inventory_StockIn_GRN", idParameter, grnParameter);
        }
    
        public virtual int SP_Add_Inventory_Stockout_Material_Shifting(string inventory_StockOut, Nullable<long> groupId, Nullable<long> prjId, string prjName, string status, Nullable<long> issueTo, string issueToName, Nullable<System.DateTime> issueToDate, Nullable<long> requestedBy, string requestedByName, Nullable<System.DateTime> requestedDate, Nullable<long> issueBy, string issueByName, Nullable<System.DateTime> issueByDate, Nullable<long> demandOrderId, string issueNoteNo, Nullable<long> depId, string depName, Nullable<long> warehouseId, string warehouseName, string issueNoteNoPrj, Nullable<long> projId, string projName, string receivedBy)
        {
            var inventory_StockOutParameter = inventory_StockOut != null ?
                new ObjectParameter("Inventory_StockOut", inventory_StockOut) :
                new ObjectParameter("Inventory_StockOut", typeof(string));
    
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("groupId", groupId) :
                new ObjectParameter("groupId", typeof(long));
    
            var prjIdParameter = prjId.HasValue ?
                new ObjectParameter("prjId", prjId) :
                new ObjectParameter("prjId", typeof(long));
    
            var prjNameParameter = prjName != null ?
                new ObjectParameter("prjName", prjName) :
                new ObjectParameter("prjName", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var issueToParameter = issueTo.HasValue ?
                new ObjectParameter("IssueTo", issueTo) :
                new ObjectParameter("IssueTo", typeof(long));
    
            var issueToNameParameter = issueToName != null ?
                new ObjectParameter("IssueToName", issueToName) :
                new ObjectParameter("IssueToName", typeof(string));
    
            var issueToDateParameter = issueToDate.HasValue ?
                new ObjectParameter("IssueToDate", issueToDate) :
                new ObjectParameter("IssueToDate", typeof(System.DateTime));
    
            var requestedByParameter = requestedBy.HasValue ?
                new ObjectParameter("RequestedBy", requestedBy) :
                new ObjectParameter("RequestedBy", typeof(long));
    
            var requestedByNameParameter = requestedByName != null ?
                new ObjectParameter("RequestedByName", requestedByName) :
                new ObjectParameter("RequestedByName", typeof(string));
    
            var requestedDateParameter = requestedDate.HasValue ?
                new ObjectParameter("RequestedDate", requestedDate) :
                new ObjectParameter("RequestedDate", typeof(System.DateTime));
    
            var issueByParameter = issueBy.HasValue ?
                new ObjectParameter("IssueBy", issueBy) :
                new ObjectParameter("IssueBy", typeof(long));
    
            var issueByNameParameter = issueByName != null ?
                new ObjectParameter("IssueByName", issueByName) :
                new ObjectParameter("IssueByName", typeof(string));
    
            var issueByDateParameter = issueByDate.HasValue ?
                new ObjectParameter("IssueByDate", issueByDate) :
                new ObjectParameter("IssueByDate", typeof(System.DateTime));
    
            var demandOrderIdParameter = demandOrderId.HasValue ?
                new ObjectParameter("DemandOrderId", demandOrderId) :
                new ObjectParameter("DemandOrderId", typeof(long));
    
            var issueNoteNoParameter = issueNoteNo != null ?
                new ObjectParameter("IssueNoteNo", issueNoteNo) :
                new ObjectParameter("IssueNoteNo", typeof(string));
    
            var depIdParameter = depId.HasValue ?
                new ObjectParameter("depId", depId) :
                new ObjectParameter("depId", typeof(long));
    
            var depNameParameter = depName != null ?
                new ObjectParameter("depName", depName) :
                new ObjectParameter("depName", typeof(string));
    
            var warehouseIdParameter = warehouseId.HasValue ?
                new ObjectParameter("WarehouseId", warehouseId) :
                new ObjectParameter("WarehouseId", typeof(long));
    
            var warehouseNameParameter = warehouseName != null ?
                new ObjectParameter("WarehouseName", warehouseName) :
                new ObjectParameter("WarehouseName", typeof(string));
    
            var issueNoteNoPrjParameter = issueNoteNoPrj != null ?
                new ObjectParameter("IssueNoteNoPrj", issueNoteNoPrj) :
                new ObjectParameter("IssueNoteNoPrj", typeof(string));
    
            var projIdParameter = projId.HasValue ?
                new ObjectParameter("ProjId", projId) :
                new ObjectParameter("ProjId", typeof(long));
    
            var projNameParameter = projName != null ?
                new ObjectParameter("ProjName", projName) :
                new ObjectParameter("ProjName", typeof(string));
    
            var receivedByParameter = receivedBy != null ?
                new ObjectParameter("ReceivedBy", receivedBy) :
                new ObjectParameter("ReceivedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Add_Inventory_Stockout_Material_Shifting", inventory_StockOutParameter, groupIdParameter, prjIdParameter, prjNameParameter, statusParameter, issueToParameter, issueToNameParameter, issueToDateParameter, requestedByParameter, requestedByNameParameter, requestedDateParameter, issueByParameter, issueByNameParameter, issueByDateParameter, demandOrderIdParameter, issueNoteNoParameter, depIdParameter, depNameParameter, warehouseIdParameter, warehouseNameParameter, issueNoteNoPrjParameter, projIdParameter, projNameParameter, receivedByParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Sp_Add_Invoice(string bills, Nullable<long> userid, Nullable<System.DateTime> due_date)
        {
            var billsParameter = bills != null ?
                new ObjectParameter("bills", bills) :
                new ObjectParameter("bills", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var due_dateParameter = due_date.HasValue ?
                new ObjectParameter("due_date", due_date) :
                new ObjectParameter("due_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Sp_Add_Invoice", billsParameter, useridParameter, due_dateParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Sp_Add_Journal_Entries(string gen_entr, Nullable<long> userid)
        {
            var gen_entrParameter = gen_entr != null ?
                new ObjectParameter("gen_entr", gen_entr) :
                new ObjectParameter("gen_entr", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Sp_Add_Journal_Entries", gen_entrParameter, useridParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_Journal_Entry(Nullable<decimal> debit, Nullable<decimal> credit, string head, Nullable<int> head_Id, string head_Code, string head_Name, string naration, Nullable<long> groupid, Nullable<long> line, Nullable<long> recor_by, Nullable<long> sup_by, Nullable<long> ref_Id, string inst_Bank, string inst_No, string inst_Status, Nullable<System.DateTime> inst_Date, Nullable<decimal> qty, string uom, Nullable<decimal> rate, string voucher_No, string voucher_Type, Nullable<int> comp_Id)
        {
            var debitParameter = debit.HasValue ?
                new ObjectParameter("Debit", debit) :
                new ObjectParameter("Debit", typeof(decimal));
    
            var creditParameter = credit.HasValue ?
                new ObjectParameter("Credit", credit) :
                new ObjectParameter("Credit", typeof(decimal));
    
            var headParameter = head != null ?
                new ObjectParameter("Head", head) :
                new ObjectParameter("Head", typeof(string));
    
            var head_IdParameter = head_Id.HasValue ?
                new ObjectParameter("Head_Id", head_Id) :
                new ObjectParameter("Head_Id", typeof(int));
    
            var head_CodeParameter = head_Code != null ?
                new ObjectParameter("Head_Code", head_Code) :
                new ObjectParameter("Head_Code", typeof(string));
    
            var head_NameParameter = head_Name != null ?
                new ObjectParameter("Head_Name", head_Name) :
                new ObjectParameter("Head_Name", typeof(string));
    
            var narationParameter = naration != null ?
                new ObjectParameter("Naration", naration) :
                new ObjectParameter("Naration", typeof(string));
    
            var groupidParameter = groupid.HasValue ?
                new ObjectParameter("groupid", groupid) :
                new ObjectParameter("groupid", typeof(long));
    
            var lineParameter = line.HasValue ?
                new ObjectParameter("line", line) :
                new ObjectParameter("line", typeof(long));
    
            var recor_byParameter = recor_by.HasValue ?
                new ObjectParameter("recor_by", recor_by) :
                new ObjectParameter("recor_by", typeof(long));
    
            var sup_byParameter = sup_by.HasValue ?
                new ObjectParameter("sup_by", sup_by) :
                new ObjectParameter("sup_by", typeof(long));
    
            var ref_IdParameter = ref_Id.HasValue ?
                new ObjectParameter("Ref_Id", ref_Id) :
                new ObjectParameter("Ref_Id", typeof(long));
    
            var inst_BankParameter = inst_Bank != null ?
                new ObjectParameter("Inst_Bank", inst_Bank) :
                new ObjectParameter("Inst_Bank", typeof(string));
    
            var inst_NoParameter = inst_No != null ?
                new ObjectParameter("Inst_No", inst_No) :
                new ObjectParameter("Inst_No", typeof(string));
    
            var inst_StatusParameter = inst_Status != null ?
                new ObjectParameter("Inst_Status", inst_Status) :
                new ObjectParameter("Inst_Status", typeof(string));
    
            var inst_DateParameter = inst_Date.HasValue ?
                new ObjectParameter("Inst_Date", inst_Date) :
                new ObjectParameter("Inst_Date", typeof(System.DateTime));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("qty", qty) :
                new ObjectParameter("qty", typeof(decimal));
    
            var uomParameter = uom != null ?
                new ObjectParameter("uom", uom) :
                new ObjectParameter("uom", typeof(string));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("rate", rate) :
                new ObjectParameter("rate", typeof(decimal));
    
            var voucher_NoParameter = voucher_No != null ?
                new ObjectParameter("Voucher_No", voucher_No) :
                new ObjectParameter("Voucher_No", typeof(string));
    
            var voucher_TypeParameter = voucher_Type != null ?
                new ObjectParameter("Voucher_Type", voucher_Type) :
                new ObjectParameter("Voucher_Type", typeof(string));
    
            var comp_IdParameter = comp_Id.HasValue ?
                new ObjectParameter("comp_Id", comp_Id) :
                new ObjectParameter("comp_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_Journal_Entry", debitParameter, creditParameter, headParameter, head_IdParameter, head_CodeParameter, head_NameParameter, narationParameter, groupidParameter, lineParameter, recor_byParameter, sup_byParameter, ref_IdParameter, inst_BankParameter, inst_NoParameter, inst_StatusParameter, inst_DateParameter, qtyParameter, uomParameter, rateParameter, voucher_NoParameter, voucher_TypeParameter, comp_IdParameter);
        }
    
        public virtual ObjectResult<string> Sp_Add_Journal_Voucher()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Sp_Add_Journal_Voucher");
        }
    
        public virtual ObjectResult<Nullable<bool>> Sp_Add_LandData_Details(string landRecordData, string landPaymentSchedule, string dealNumber, string dealDesc, Nullable<decimal> dealTotAmt, Nullable<decimal> pricePerAcre, string partyName, Nullable<long> partyId)
        {
            var landRecordDataParameter = landRecordData != null ?
                new ObjectParameter("LandRecordData", landRecordData) :
                new ObjectParameter("LandRecordData", typeof(string));
    
            var landPaymentScheduleParameter = landPaymentSchedule != null ?
                new ObjectParameter("LandPaymentSchedule", landPaymentSchedule) :
                new ObjectParameter("LandPaymentSchedule", typeof(string));
    
            var dealNumberParameter = dealNumber != null ?
                new ObjectParameter("DealNumber", dealNumber) :
                new ObjectParameter("DealNumber", typeof(string));
    
            var dealDescParameter = dealDesc != null ?
                new ObjectParameter("DealDesc", dealDesc) :
                new ObjectParameter("DealDesc", typeof(string));
    
            var dealTotAmtParameter = dealTotAmt.HasValue ?
                new ObjectParameter("DealTotAmt", dealTotAmt) :
                new ObjectParameter("DealTotAmt", typeof(decimal));
    
            var pricePerAcreParameter = pricePerAcre.HasValue ?
                new ObjectParameter("PricePerAcre", pricePerAcre) :
                new ObjectParameter("PricePerAcre", typeof(decimal));
    
            var partyNameParameter = partyName != null ?
                new ObjectParameter("PartyName", partyName) :
                new ObjectParameter("PartyName", typeof(string));
    
            var partyIdParameter = partyId.HasValue ?
                new ObjectParameter("PartyId", partyId) :
                new ObjectParameter("PartyId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Sp_Add_LandData_Details", landRecordDataParameter, landPaymentScheduleParameter, dealNumberParameter, dealDescParameter, dealTotAmtParameter, pricePerAcreParameter, partyNameParameter, partyIdParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_Lead(string address, Nullable<long> assignedTo, string block, string mobile_1, string name, string fathe_hun, Nullable<decimal> offered_Price, string source, string plotsize, string status, string project, Nullable<System.DateTime> assignedDate)
        {
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var assignedToParameter = assignedTo.HasValue ?
                new ObjectParameter("AssignedTo", assignedTo) :
                new ObjectParameter("AssignedTo", typeof(long));
    
            var blockParameter = block != null ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(string));
    
            var mobile_1Parameter = mobile_1 != null ?
                new ObjectParameter("Mobile_1", mobile_1) :
                new ObjectParameter("Mobile_1", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var fathe_hunParameter = fathe_hun != null ?
                new ObjectParameter("fathe_hun", fathe_hun) :
                new ObjectParameter("fathe_hun", typeof(string));
    
            var offered_PriceParameter = offered_Price.HasValue ?
                new ObjectParameter("Offered_Price", offered_Price) :
                new ObjectParameter("Offered_Price", typeof(decimal));
    
            var sourceParameter = source != null ?
                new ObjectParameter("source", source) :
                new ObjectParameter("source", typeof(string));
    
            var plotsizeParameter = plotsize != null ?
                new ObjectParameter("plotsize", plotsize) :
                new ObjectParameter("plotsize", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var projectParameter = project != null ?
                new ObjectParameter("project", project) :
                new ObjectParameter("project", typeof(string));
    
            var assignedDateParameter = assignedDate.HasValue ?
                new ObjectParameter("assignedDate", assignedDate) :
                new ObjectParameter("assignedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_Lead", addressParameter, assignedToParameter, blockParameter, mobile_1Parameter, nameParameter, fathe_hunParameter, offered_PriceParameter, sourceParameter, plotsizeParameter, statusParameter, projectParameter, assignedDateParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_LeadFollowup(string description, Nullable<long> lead_Id, Nullable<long> userid, string type)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var lead_IdParameter = lead_Id.HasValue ?
                new ObjectParameter("Lead_Id", lead_Id) :
                new ObjectParameter("Lead_Id", typeof(long));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(long));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_LeadFollowup", descriptionParameter, lead_IdParameter, useridParameter, typeParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Sp_Add_Leave(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string reason, Nullable<long> userID, Nullable<long> noOfDays, Nullable<int> officalLeave, string managerApproval, Nullable<long> appliedBy, string leaveType)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var reasonParameter = reason != null ?
                new ObjectParameter("Reason", reason) :
                new ObjectParameter("Reason", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var noOfDaysParameter = noOfDays.HasValue ?
                new ObjectParameter("NoOfDays", noOfDays) :
                new ObjectParameter("NoOfDays", typeof(long));
    
            var officalLeaveParameter = officalLeave.HasValue ?
                new ObjectParameter("OfficalLeave", officalLeave) :
                new ObjectParameter("OfficalLeave", typeof(int));
    
            var managerApprovalParameter = managerApproval != null ?
                new ObjectParameter("ManagerApproval", managerApproval) :
                new ObjectParameter("ManagerApproval", typeof(string));
    
            var appliedByParameter = appliedBy.HasValue ?
                new ObjectParameter("AppliedBy", appliedBy) :
                new ObjectParameter("AppliedBy", typeof(long));
    
            var leaveTypeParameter = leaveType != null ?
                new ObjectParameter("LeaveType", leaveType) :
                new ObjectParameter("LeaveType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Sp_Add_Leave", startDateParameter, endDateParameter, reasonParameter, userIDParameter, noOfDaysParameter, officalLeaveParameter, managerApprovalParameter, appliedByParameter, leaveTypeParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_Loan(string reason, Nullable<long> userID, string hrApproval, string managerApproval, Nullable<decimal> loanAmt, Nullable<int> installments, Nullable<long> emp_Id, string opt, Nullable<long> managerId, string managerName, Nullable<long> hrId, string hrName)
        {
            var reasonParameter = reason != null ?
                new ObjectParameter("Reason", reason) :
                new ObjectParameter("Reason", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var hrApprovalParameter = hrApproval != null ?
                new ObjectParameter("HrApproval", hrApproval) :
                new ObjectParameter("HrApproval", typeof(string));
    
            var managerApprovalParameter = managerApproval != null ?
                new ObjectParameter("ManagerApproval", managerApproval) :
                new ObjectParameter("ManagerApproval", typeof(string));
    
            var loanAmtParameter = loanAmt.HasValue ?
                new ObjectParameter("LoanAmt", loanAmt) :
                new ObjectParameter("LoanAmt", typeof(decimal));
    
            var installmentsParameter = installments.HasValue ?
                new ObjectParameter("installments", installments) :
                new ObjectParameter("installments", typeof(int));
    
            var emp_IdParameter = emp_Id.HasValue ?
                new ObjectParameter("Emp_Id", emp_Id) :
                new ObjectParameter("Emp_Id", typeof(long));
    
            var optParameter = opt != null ?
                new ObjectParameter("opt", opt) :
                new ObjectParameter("opt", typeof(string));
    
            var managerIdParameter = managerId.HasValue ?
                new ObjectParameter("managerId", managerId) :
                new ObjectParameter("managerId", typeof(long));
    
            var managerNameParameter = managerName != null ?
                new ObjectParameter("managerName", managerName) :
                new ObjectParameter("managerName", typeof(string));
    
            var hrIdParameter = hrId.HasValue ?
                new ObjectParameter("hrId", hrId) :
                new ObjectParameter("hrId", typeof(long));
    
            var hrNameParameter = hrName != null ?
                new ObjectParameter("hrName", hrName) :
                new ObjectParameter("hrName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_Loan", reasonParameter, userIDParameter, hrApprovalParameter, managerApprovalParameter, loanAmtParameter, installmentsParameter, emp_IdParameter, optParameter, managerIdParameter, managerNameParameter, hrIdParameter, hrNameParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_MarketingReceipt_UpdateRequest(string bank, string ch_Pay_Draft_No, Nullable<System.DateTime> ch_Pay_Draft_Date, Nullable<long> userid, string text, Nullable<long> receiptid, string status, string paymentType)
        {
            var bankParameter = bank != null ?
                new ObjectParameter("Bank", bank) :
                new ObjectParameter("Bank", typeof(string));
    
            var ch_Pay_Draft_NoParameter = ch_Pay_Draft_No != null ?
                new ObjectParameter("Ch_Pay_Draft_No", ch_Pay_Draft_No) :
                new ObjectParameter("Ch_Pay_Draft_No", typeof(string));
    
            var ch_Pay_Draft_DateParameter = ch_Pay_Draft_Date.HasValue ?
                new ObjectParameter("Ch_Pay_Draft_Date", ch_Pay_Draft_Date) :
                new ObjectParameter("Ch_Pay_Draft_Date", typeof(System.DateTime));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var textParameter = text != null ?
                new ObjectParameter("text", text) :
                new ObjectParameter("text", typeof(string));
    
            var receiptidParameter = receiptid.HasValue ?
                new ObjectParameter("receiptid", receiptid) :
                new ObjectParameter("receiptid", typeof(long));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var paymentTypeParameter = paymentType != null ?
                new ObjectParameter("paymentType", paymentType) :
                new ObjectParameter("paymentType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_MarketingReceipt_UpdateRequest", bankParameter, ch_Pay_Draft_NoParameter, ch_Pay_Draft_DateParameter, useridParameter, textParameter, receiptidParameter, statusParameter, paymentTypeParameter);
        }
    
        public virtual int SP_Add_MaterialStatement(string mats)
        {
            var matsParameter = mats != null ?
                new ObjectParameter("Mats", mats) :
                new ObjectParameter("Mats", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Add_MaterialStatement", matsParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_Members(string type, string name, string father_Name, string cNIC, Nullable<System.DateTime> date_Of_Birth, string address, string email, string mobile1, string mobile2, string city, string blood_Group, string religion, string marital_Status, string relationship, string emergency_Contact, Nullable<System.DateTime> date_Of_Joining, Nullable<System.DateTime> register_Date, Nullable<long> register_By, string status, Nullable<long> module_Id)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var father_NameParameter = father_Name != null ?
                new ObjectParameter("Father_Name", father_Name) :
                new ObjectParameter("Father_Name", typeof(string));
    
            var cNICParameter = cNIC != null ?
                new ObjectParameter("CNIC", cNIC) :
                new ObjectParameter("CNIC", typeof(string));
    
            var date_Of_BirthParameter = date_Of_Birth.HasValue ?
                new ObjectParameter("Date_Of_Birth", date_Of_Birth) :
                new ObjectParameter("Date_Of_Birth", typeof(System.DateTime));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var mobile1Parameter = mobile1 != null ?
                new ObjectParameter("Mobile1", mobile1) :
                new ObjectParameter("Mobile1", typeof(string));
    
            var mobile2Parameter = mobile2 != null ?
                new ObjectParameter("Mobile2", mobile2) :
                new ObjectParameter("Mobile2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var blood_GroupParameter = blood_Group != null ?
                new ObjectParameter("Blood_Group", blood_Group) :
                new ObjectParameter("Blood_Group", typeof(string));
    
            var religionParameter = religion != null ?
                new ObjectParameter("Religion", religion) :
                new ObjectParameter("Religion", typeof(string));
    
            var marital_StatusParameter = marital_Status != null ?
                new ObjectParameter("Marital_Status", marital_Status) :
                new ObjectParameter("Marital_Status", typeof(string));
    
            var relationshipParameter = relationship != null ?
                new ObjectParameter("Relationship", relationship) :
                new ObjectParameter("Relationship", typeof(string));
    
            var emergency_ContactParameter = emergency_Contact != null ?
                new ObjectParameter("Emergency_Contact", emergency_Contact) :
                new ObjectParameter("Emergency_Contact", typeof(string));
    
            var date_Of_JoiningParameter = date_Of_Joining.HasValue ?
                new ObjectParameter("Date_Of_Joining", date_Of_Joining) :
                new ObjectParameter("Date_Of_Joining", typeof(System.DateTime));
    
            var register_DateParameter = register_Date.HasValue ?
                new ObjectParameter("Register_Date", register_Date) :
                new ObjectParameter("Register_Date", typeof(System.DateTime));
    
            var register_ByParameter = register_By.HasValue ?
                new ObjectParameter("Register_By", register_By) :
                new ObjectParameter("Register_By", typeof(long));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var module_IdParameter = module_Id.HasValue ?
                new ObjectParameter("Module_Id", module_Id) :
                new ObjectParameter("Module_Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_Members", typeParameter, nameParameter, father_NameParameter, cNICParameter, date_Of_BirthParameter, addressParameter, emailParameter, mobile1Parameter, mobile2Parameter, cityParameter, blood_GroupParameter, religionParameter, marital_StatusParameter, relationshipParameter, emergency_ContactParameter, date_Of_JoiningParameter, register_DateParameter, register_ByParameter, statusParameter, module_IdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Sp_Add_Members_Subscription(Nullable<long> memid, Nullable<long> proid, string projectname, Nullable<decimal> amt)
        {
            var memidParameter = memid.HasValue ?
                new ObjectParameter("memid", memid) :
                new ObjectParameter("memid", typeof(long));
    
            var proidParameter = proid.HasValue ?
                new ObjectParameter("proid", proid) :
                new ObjectParameter("proid", typeof(long));
    
            var projectnameParameter = projectname != null ?
                new ObjectParameter("projectname", projectname) :
                new ObjectParameter("projectname", typeof(string));
    
            var amtParameter = amt.HasValue ?
                new ObjectParameter("amt", amt) :
                new ObjectParameter("amt", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Sp_Add_Members_Subscription", memidParameter, proidParameter, projectnameParameter, amtParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_MembersFee(Nullable<long> mem_Id, string mem_Name, string cNIC, string mem_Type, Nullable<System.DateTime> registration_Date, Nullable<long> projectId, string project_Name, Nullable<System.DateTime> feeMonth, Nullable<decimal> feeAmount, string status, Nullable<long> generatedBy)
        {
            var mem_IdParameter = mem_Id.HasValue ?
                new ObjectParameter("Mem_Id", mem_Id) :
                new ObjectParameter("Mem_Id", typeof(long));
    
            var mem_NameParameter = mem_Name != null ?
                new ObjectParameter("Mem_Name", mem_Name) :
                new ObjectParameter("Mem_Name", typeof(string));
    
            var cNICParameter = cNIC != null ?
                new ObjectParameter("CNIC", cNIC) :
                new ObjectParameter("CNIC", typeof(string));
    
            var mem_TypeParameter = mem_Type != null ?
                new ObjectParameter("Mem_Type", mem_Type) :
                new ObjectParameter("Mem_Type", typeof(string));
    
            var registration_DateParameter = registration_Date.HasValue ?
                new ObjectParameter("Registration_Date", registration_Date) :
                new ObjectParameter("Registration_Date", typeof(System.DateTime));
    
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("ProjectId", projectId) :
                new ObjectParameter("ProjectId", typeof(long));
    
            var project_NameParameter = project_Name != null ?
                new ObjectParameter("Project_Name", project_Name) :
                new ObjectParameter("Project_Name", typeof(string));
    
            var feeMonthParameter = feeMonth.HasValue ?
                new ObjectParameter("FeeMonth", feeMonth) :
                new ObjectParameter("FeeMonth", typeof(System.DateTime));
    
            var feeAmountParameter = feeAmount.HasValue ?
                new ObjectParameter("FeeAmount", feeAmount) :
                new ObjectParameter("FeeAmount", typeof(decimal));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var generatedByParameter = generatedBy.HasValue ?
                new ObjectParameter("GeneratedBy", generatedBy) :
                new ObjectParameter("GeneratedBy", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_MembersFee", mem_IdParameter, mem_NameParameter, cNICParameter, mem_TypeParameter, registration_DateParameter, projectIdParameter, project_NameParameter, feeMonthParameter, feeAmountParameter, statusParameter, generatedByParameter);
        }
    
        public virtual int Sp_Add_Message(Nullable<long> from, string msg, Nullable<long> to)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(long));
    
            var msgParameter = msg != null ?
                new ObjectParameter("msg", msg) :
                new ObjectParameter("msg", typeof(string));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_Message", fromParameter, msgParameter, toParameter);
        }
    
        public virtual int Sp_Add_MeterReadings(Nullable<long> previous_Reading, Nullable<decimal> arr, Nullable<long> plot_Id, string name, string plot_No, string block, string plot_Type, Nullable<long> current_Reading, Nullable<int> units, Nullable<decimal> rate, Nullable<long> meter_Id, string meter_No)
        {
            var previous_ReadingParameter = previous_Reading.HasValue ?
                new ObjectParameter("Previous_Reading", previous_Reading) :
                new ObjectParameter("Previous_Reading", typeof(long));
    
            var arrParameter = arr.HasValue ?
                new ObjectParameter("arr", arr) :
                new ObjectParameter("arr", typeof(decimal));
    
            var plot_IdParameter = plot_Id.HasValue ?
                new ObjectParameter("Plot_Id", plot_Id) :
                new ObjectParameter("Plot_Id", typeof(long));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var plot_NoParameter = plot_No != null ?
                new ObjectParameter("Plot_No", plot_No) :
                new ObjectParameter("Plot_No", typeof(string));
    
            var blockParameter = block != null ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(string));
    
            var plot_TypeParameter = plot_Type != null ?
                new ObjectParameter("Plot_Type", plot_Type) :
                new ObjectParameter("Plot_Type", typeof(string));
    
            var current_ReadingParameter = current_Reading.HasValue ?
                new ObjectParameter("Current_Reading", current_Reading) :
                new ObjectParameter("Current_Reading", typeof(long));
    
            var unitsParameter = units.HasValue ?
                new ObjectParameter("Units", units) :
                new ObjectParameter("Units", typeof(int));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("Rate", rate) :
                new ObjectParameter("Rate", typeof(decimal));
    
            var meter_IdParameter = meter_Id.HasValue ?
                new ObjectParameter("Meter_Id", meter_Id) :
                new ObjectParameter("Meter_Id", typeof(long));
    
            var meter_NoParameter = meter_No != null ?
                new ObjectParameter("Meter_No", meter_No) :
                new ObjectParameter("Meter_No", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_MeterReadings", previous_ReadingParameter, arrParameter, plot_IdParameter, nameParameter, plot_NoParameter, blockParameter, plot_TypeParameter, current_ReadingParameter, unitsParameter, rateParameter, meter_IdParameter, meter_NoParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_MilestoneTaskSubTask(Nullable<long> prjid, string title, string desc, string unit, Nullable<decimal> no, Nullable<decimal> l, Nullable<decimal> h, Nullable<decimal> b, Nullable<decimal> qty, Nullable<decimal> rate, Nullable<decimal> amt, Nullable<long> userid, string type, Nullable<System.DateTime> deadline, Nullable<long> mtsid, Nullable<System.DateTime> start_date, Nullable<long> depId)
        {
            var prjidParameter = prjid.HasValue ?
                new ObjectParameter("Prjid", prjid) :
                new ObjectParameter("Prjid", typeof(long));
    
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var descParameter = desc != null ?
                new ObjectParameter("desc", desc) :
                new ObjectParameter("desc", typeof(string));
    
            var unitParameter = unit != null ?
                new ObjectParameter("unit", unit) :
                new ObjectParameter("unit", typeof(string));
    
            var noParameter = no.HasValue ?
                new ObjectParameter("No", no) :
                new ObjectParameter("No", typeof(decimal));
    
            var lParameter = l.HasValue ?
                new ObjectParameter("L", l) :
                new ObjectParameter("L", typeof(decimal));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("H", h) :
                new ObjectParameter("H", typeof(decimal));
    
            var bParameter = b.HasValue ?
                new ObjectParameter("B", b) :
                new ObjectParameter("B", typeof(decimal));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("qty", qty) :
                new ObjectParameter("qty", typeof(decimal));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("rate", rate) :
                new ObjectParameter("rate", typeof(decimal));
    
            var amtParameter = amt.HasValue ?
                new ObjectParameter("amt", amt) :
                new ObjectParameter("amt", typeof(decimal));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var deadlineParameter = deadline.HasValue ?
                new ObjectParameter("deadline", deadline) :
                new ObjectParameter("deadline", typeof(System.DateTime));
    
            var mtsidParameter = mtsid.HasValue ?
                new ObjectParameter("mtsid", mtsid) :
                new ObjectParameter("mtsid", typeof(long));
    
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var depIdParameter = depId.HasValue ?
                new ObjectParameter("depId", depId) :
                new ObjectParameter("depId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_MilestoneTaskSubTask", prjidParameter, titleParameter, descParameter, unitParameter, noParameter, lParameter, hParameter, bParameter, qtyParameter, rateParameter, amtParameter, useridParameter, typeParameter, deadlineParameter, mtsidParameter, start_dateParameter, depIdParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_MilestoneTaskSubTask_Req(Nullable<long> prjid, string title, string desc, string unit, Nullable<decimal> no, Nullable<decimal> l, Nullable<decimal> h, Nullable<decimal> b, Nullable<decimal> qty, Nullable<decimal> rate, Nullable<decimal> amt, Nullable<long> userid, string type, Nullable<System.DateTime> deadline, Nullable<long> mtsid, Nullable<System.DateTime> start_date, Nullable<long> depId)
        {
            var prjidParameter = prjid.HasValue ?
                new ObjectParameter("Prjid", prjid) :
                new ObjectParameter("Prjid", typeof(long));
    
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var descParameter = desc != null ?
                new ObjectParameter("desc", desc) :
                new ObjectParameter("desc", typeof(string));
    
            var unitParameter = unit != null ?
                new ObjectParameter("unit", unit) :
                new ObjectParameter("unit", typeof(string));
    
            var noParameter = no.HasValue ?
                new ObjectParameter("No", no) :
                new ObjectParameter("No", typeof(decimal));
    
            var lParameter = l.HasValue ?
                new ObjectParameter("L", l) :
                new ObjectParameter("L", typeof(decimal));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("H", h) :
                new ObjectParameter("H", typeof(decimal));
    
            var bParameter = b.HasValue ?
                new ObjectParameter("B", b) :
                new ObjectParameter("B", typeof(decimal));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("qty", qty) :
                new ObjectParameter("qty", typeof(decimal));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("rate", rate) :
                new ObjectParameter("rate", typeof(decimal));
    
            var amtParameter = amt.HasValue ?
                new ObjectParameter("amt", amt) :
                new ObjectParameter("amt", typeof(decimal));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var deadlineParameter = deadline.HasValue ?
                new ObjectParameter("deadline", deadline) :
                new ObjectParameter("deadline", typeof(System.DateTime));
    
            var mtsidParameter = mtsid.HasValue ?
                new ObjectParameter("mtsid", mtsid) :
                new ObjectParameter("mtsid", typeof(long));
    
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var depIdParameter = depId.HasValue ?
                new ObjectParameter("depId", depId) :
                new ObjectParameter("depId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_MilestoneTaskSubTask_Req", prjidParameter, titleParameter, descParameter, unitParameter, noParameter, lParameter, hParameter, bParameter, qtyParameter, rateParameter, amtParameter, useridParameter, typeParameter, deadlineParameter, mtsidParameter, start_dateParameter, depIdParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_Notification(Nullable<long> from, Nullable<long> to, string msg, string url, Nullable<System.DateTime> crtdat, string mod)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(long));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(long));
    
            var msgParameter = msg != null ?
                new ObjectParameter("msg", msg) :
                new ObjectParameter("msg", typeof(string));
    
            var urlParameter = url != null ?
                new ObjectParameter("url", url) :
                new ObjectParameter("url", typeof(string));
    
            var crtdatParameter = crtdat.HasValue ?
                new ObjectParameter("crtdat", crtdat) :
                new ObjectParameter("crtdat", typeof(System.DateTime));
    
            var modParameter = mod != null ?
                new ObjectParameter("mod", mod) :
                new ObjectParameter("mod", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_Notification", fromParameter, toParameter, msgParameter, urlParameter, crtdatParameter, modParameter);
        }
    
        public virtual ObjectResult<Sp_Add_OtherExpense_Result> Sp_Add_OtherExpense(string products, Nullable<long> prjId, Nullable<long> usrId)
        {
            var productsParameter = products != null ?
                new ObjectParameter("Products", products) :
                new ObjectParameter("Products", typeof(string));
    
            var prjIdParameter = prjId.HasValue ?
                new ObjectParameter("prjId", prjId) :
                new ObjectParameter("prjId", typeof(long));
    
            var usrIdParameter = usrId.HasValue ?
                new ObjectParameter("usrId", usrId) :
                new ObjectParameter("usrId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Add_OtherExpense_Result>("Sp_Add_OtherExpense", productsParameter, prjIdParameter, usrIdParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_PattyCash_Account(string empName, Nullable<long> empId, string empCode, Nullable<decimal> cashLimit, Nullable<decimal> itemLimit, Nullable<long> userId)
        {
            var empNameParameter = empName != null ?
                new ObjectParameter("EmpName", empName) :
                new ObjectParameter("EmpName", typeof(string));
    
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(long));
    
            var empCodeParameter = empCode != null ?
                new ObjectParameter("EmpCode", empCode) :
                new ObjectParameter("EmpCode", typeof(string));
    
            var cashLimitParameter = cashLimit.HasValue ?
                new ObjectParameter("cashLimit", cashLimit) :
                new ObjectParameter("cashLimit", typeof(decimal));
    
            var itemLimitParameter = itemLimit.HasValue ?
                new ObjectParameter("ItemLimit", itemLimit) :
                new ObjectParameter("ItemLimit", typeof(decimal));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_PattyCash_Account", empNameParameter, empIdParameter, empCodeParameter, cashLimitParameter, itemLimitParameter, userIdParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Sp_Add_PattyCashItems(string gen_entr, Nullable<long> tranId, Nullable<long> userid)
        {
            var gen_entrParameter = gen_entr != null ?
                new ObjectParameter("gen_entr", gen_entr) :
                new ObjectParameter("gen_entr", typeof(string));
    
            var tranIdParameter = tranId.HasValue ?
                new ObjectParameter("tranId", tranId) :
                new ObjectParameter("tranId", typeof(long));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Sp_Add_PattyCashItems", gen_entrParameter, tranIdParameter, useridParameter);
        }
    
        public virtual int Sp_Add_Payable(Nullable<long> groupid, Nullable<long> headid, Nullable<decimal> amt, Nullable<long> pogroupid, Nullable<bool> advance)
        {
            var groupidParameter = groupid.HasValue ?
                new ObjectParameter("groupid", groupid) :
                new ObjectParameter("groupid", typeof(long));
    
            var headidParameter = headid.HasValue ?
                new ObjectParameter("headid", headid) :
                new ObjectParameter("headid", typeof(long));
    
            var amtParameter = amt.HasValue ?
                new ObjectParameter("amt", amt) :
                new ObjectParameter("amt", typeof(decimal));
    
            var pogroupidParameter = pogroupid.HasValue ?
                new ObjectParameter("pogroupid", pogroupid) :
                new ObjectParameter("pogroupid", typeof(long));
    
            var advanceParameter = advance.HasValue ?
                new ObjectParameter("advance", advance) :
                new ObjectParameter("advance", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_Payable", groupidParameter, headidParameter, amtParameter, pogroupidParameter, advanceParameter);
        }
    
        public virtual int Sp_Add_PayableHistory(string history, Nullable<long> groupid)
        {
            var historyParameter = history != null ?
                new ObjectParameter("history", history) :
                new ObjectParameter("history", typeof(string));
    
            var groupidParameter = groupid.HasValue ?
                new ObjectParameter("groupid", groupid) :
                new ObjectParameter("groupid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_PayableHistory", historyParameter, groupidParameter);
        }
    
        public virtual int SP_Add_PaymentDetail(string pmnts)
        {
            var pmntsParameter = pmnts != null ?
                new ObjectParameter("Pmnts", pmnts) :
                new ObjectParameter("Pmnts", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Add_PaymentDetail", pmntsParameter);
        }
    
        public virtual ObjectResult<SP_Add_PaymentSchedule_Result> SP_Add_PaymentSchedule(string pmnts)
        {
            var pmntsParameter = pmnts != null ?
                new ObjectParameter("Pmnts", pmnts) :
                new ObjectParameter("Pmnts", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Add_PaymentSchedule_Result>("SP_Add_PaymentSchedule", pmntsParameter);
        }
    
        public virtual int Sp_Add_PaymentVoucherReq(string name, string father_Husband, string cNIC_NICOP, string mod, Nullable<long> mod_id, string remarks, Nullable<decimal> amt, string type, Nullable<long> req_by, string paymentfor)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var father_HusbandParameter = father_Husband != null ?
                new ObjectParameter("Father_Husband", father_Husband) :
                new ObjectParameter("Father_Husband", typeof(string));
    
            var cNIC_NICOPParameter = cNIC_NICOP != null ?
                new ObjectParameter("CNIC_NICOP", cNIC_NICOP) :
                new ObjectParameter("CNIC_NICOP", typeof(string));
    
            var modParameter = mod != null ?
                new ObjectParameter("mod", mod) :
                new ObjectParameter("mod", typeof(string));
    
            var mod_idParameter = mod_id.HasValue ?
                new ObjectParameter("mod_id", mod_id) :
                new ObjectParameter("mod_id", typeof(long));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var amtParameter = amt.HasValue ?
                new ObjectParameter("amt", amt) :
                new ObjectParameter("amt", typeof(decimal));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var req_byParameter = req_by.HasValue ?
                new ObjectParameter("req_by", req_by) :
                new ObjectParameter("req_by", typeof(long));
    
            var paymentforParameter = paymentfor != null ?
                new ObjectParameter("paymentfor", paymentfor) :
                new ObjectParameter("paymentfor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_PaymentVoucherReq", nameParameter, father_HusbandParameter, cNIC_NICOPParameter, modParameter, mod_idParameter, remarksParameter, amtParameter, typeParameter, req_byParameter, paymentforParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Sp_Add_Phase(string name, string desc, Nullable<long> proj_id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var descParameter = desc != null ?
                new ObjectParameter("desc", desc) :
                new ObjectParameter("desc", typeof(string));
    
            var proj_idParameter = proj_id.HasValue ?
                new ObjectParameter("proj_id", proj_id) :
                new ObjectParameter("proj_id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Sp_Add_Phase", nameParameter, descParameter, proj_idParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_Plot(string plot_Number, Nullable<long> block_Id, Nullable<long> phase_Id, string sector, string plot_Size, Nullable<int> plot_Category, string plot_Location, string type, string road_Type, Nullable<decimal> price)
        {
            var plot_NumberParameter = plot_Number != null ?
                new ObjectParameter("Plot_Number", plot_Number) :
                new ObjectParameter("Plot_Number", typeof(string));
    
            var block_IdParameter = block_Id.HasValue ?
                new ObjectParameter("Block_Id", block_Id) :
                new ObjectParameter("Block_Id", typeof(long));
    
            var phase_IdParameter = phase_Id.HasValue ?
                new ObjectParameter("Phase_Id", phase_Id) :
                new ObjectParameter("Phase_Id", typeof(long));
    
            var sectorParameter = sector != null ?
                new ObjectParameter("Sector", sector) :
                new ObjectParameter("Sector", typeof(string));
    
            var plot_SizeParameter = plot_Size != null ?
                new ObjectParameter("Plot_Size", plot_Size) :
                new ObjectParameter("Plot_Size", typeof(string));
    
            var plot_CategoryParameter = plot_Category.HasValue ?
                new ObjectParameter("Plot_Category", plot_Category) :
                new ObjectParameter("Plot_Category", typeof(int));
    
            var plot_LocationParameter = plot_Location != null ?
                new ObjectParameter("Plot_Location", plot_Location) :
                new ObjectParameter("Plot_Location", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var road_TypeParameter = road_Type != null ?
                new ObjectParameter("Road_Type", road_Type) :
                new ObjectParameter("Road_Type", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_Plot", plot_NumberParameter, block_IdParameter, phase_IdParameter, sectorParameter, plot_SizeParameter, plot_CategoryParameter, plot_LocationParameter, typeParameter, road_TypeParameter, priceParameter);
        }
    
        public virtual int Sp_Add_PlotCancelation_Req(Nullable<long> plotid, Nullable<long> plot_own, Nullable<long> reqby, string rem, string plot_no, string block, string type)
        {
            var plotidParameter = plotid.HasValue ?
                new ObjectParameter("plotid", plotid) :
                new ObjectParameter("plotid", typeof(long));
    
            var plot_ownParameter = plot_own.HasValue ?
                new ObjectParameter("plot_own", plot_own) :
                new ObjectParameter("plot_own", typeof(long));
    
            var reqbyParameter = reqby.HasValue ?
                new ObjectParameter("reqby", reqby) :
                new ObjectParameter("reqby", typeof(long));
    
            var remParameter = rem != null ?
                new ObjectParameter("rem", rem) :
                new ObjectParameter("rem", typeof(string));
    
            var plot_noParameter = plot_no != null ?
                new ObjectParameter("plot_no", plot_no) :
                new ObjectParameter("plot_no", typeof(string));
    
            var blockParameter = block != null ?
                new ObjectParameter("block", block) :
                new ObjectParameter("block", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_PlotCancelation_Req", plotidParameter, plot_ownParameter, reqbyParameter, remParameter, plot_noParameter, blockParameter, typeParameter);
        }
    
        public virtual int Sp_Add_PlotComments(Nullable<long> plotid, string coment, Nullable<long> userid, string type)
        {
            var plotidParameter = plotid.HasValue ?
                new ObjectParameter("Plotid", plotid) :
                new ObjectParameter("Plotid", typeof(long));
    
            var comentParameter = coment != null ?
                new ObjectParameter("coment", coment) :
                new ObjectParameter("coment", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_PlotComments", plotidParameter, comentParameter, useridParameter, typeParameter);
        }
    
        public virtual int Sp_Add_PlotNOC(string name, string phase, Nullable<long> plot_Id, string plot_No, Nullable<decimal> ttlAmt, Nullable<decimal> dueamt, string serial_No, string size, string type, Nullable<long> userid, string block)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var phaseParameter = phase != null ?
                new ObjectParameter("Phase", phase) :
                new ObjectParameter("Phase", typeof(string));
    
            var plot_IdParameter = plot_Id.HasValue ?
                new ObjectParameter("Plot_Id", plot_Id) :
                new ObjectParameter("Plot_Id", typeof(long));
    
            var plot_NoParameter = plot_No != null ?
                new ObjectParameter("Plot_No", plot_No) :
                new ObjectParameter("Plot_No", typeof(string));
    
            var ttlAmtParameter = ttlAmt.HasValue ?
                new ObjectParameter("ttlAmt", ttlAmt) :
                new ObjectParameter("ttlAmt", typeof(decimal));
    
            var dueamtParameter = dueamt.HasValue ?
                new ObjectParameter("dueamt", dueamt) :
                new ObjectParameter("dueamt", typeof(decimal));
    
            var serial_NoParameter = serial_No != null ?
                new ObjectParameter("Serial_No", serial_No) :
                new ObjectParameter("Serial_No", typeof(string));
    
            var sizeParameter = size != null ?
                new ObjectParameter("Size", size) :
                new ObjectParameter("Size", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(long));
    
            var blockParameter = block != null ?
                new ObjectParameter("block", block) :
                new ObjectParameter("block", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_PlotNOC", nameParameter, phaseParameter, plot_IdParameter, plot_NoParameter, ttlAmtParameter, dueamtParameter, serial_NoParameter, sizeParameter, typeParameter, useridParameter, blockParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_PlotOwnerShip(string plot_Size, string name, string father_Husband, string cNIC_NICOP, string mobile_1, string mobile_2, string phone_Office, string residential, string postal_Address, string residential_Address, string email, string occupation, string nationality, string date_Of_Birth, string nominee_Name, string nominee_Relation, string nominee_Address, string nominee_CNIC_NICOP, Nullable<long> plot_Id, string city, Nullable<decimal> total, string img, Nullable<decimal> discount, Nullable<long> userid, Nullable<System.DateTime> ownerdate, string ownerstat, Nullable<long> grptag, string inst)
        {
            var plot_SizeParameter = plot_Size != null ?
                new ObjectParameter("Plot_Size", plot_Size) :
                new ObjectParameter("Plot_Size", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var father_HusbandParameter = father_Husband != null ?
                new ObjectParameter("Father_Husband", father_Husband) :
                new ObjectParameter("Father_Husband", typeof(string));
    
            var cNIC_NICOPParameter = cNIC_NICOP != null ?
                new ObjectParameter("CNIC_NICOP", cNIC_NICOP) :
                new ObjectParameter("CNIC_NICOP", typeof(string));
    
            var mobile_1Parameter = mobile_1 != null ?
                new ObjectParameter("Mobile_1", mobile_1) :
                new ObjectParameter("Mobile_1", typeof(string));
    
            var mobile_2Parameter = mobile_2 != null ?
                new ObjectParameter("Mobile_2", mobile_2) :
                new ObjectParameter("Mobile_2", typeof(string));
    
            var phone_OfficeParameter = phone_Office != null ?
                new ObjectParameter("Phone_Office", phone_Office) :
                new ObjectParameter("Phone_Office", typeof(string));
    
            var residentialParameter = residential != null ?
                new ObjectParameter("Residential", residential) :
                new ObjectParameter("Residential", typeof(string));
    
            var postal_AddressParameter = postal_Address != null ?
                new ObjectParameter("Postal_Address", postal_Address) :
                new ObjectParameter("Postal_Address", typeof(string));
    
            var residential_AddressParameter = residential_Address != null ?
                new ObjectParameter("Residential_Address", residential_Address) :
                new ObjectParameter("Residential_Address", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var occupationParameter = occupation != null ?
                new ObjectParameter("Occupation", occupation) :
                new ObjectParameter("Occupation", typeof(string));
    
            var nationalityParameter = nationality != null ?
                new ObjectParameter("Nationality", nationality) :
                new ObjectParameter("Nationality", typeof(string));
    
            var date_Of_BirthParameter = date_Of_Birth != null ?
                new ObjectParameter("Date_Of_Birth", date_Of_Birth) :
                new ObjectParameter("Date_Of_Birth", typeof(string));
    
            var nominee_NameParameter = nominee_Name != null ?
                new ObjectParameter("Nominee_Name", nominee_Name) :
                new ObjectParameter("Nominee_Name", typeof(string));
    
            var nominee_RelationParameter = nominee_Relation != null ?
                new ObjectParameter("Nominee_Relation", nominee_Relation) :
                new ObjectParameter("Nominee_Relation", typeof(string));
    
            var nominee_AddressParameter = nominee_Address != null ?
                new ObjectParameter("Nominee_Address", nominee_Address) :
                new ObjectParameter("Nominee_Address", typeof(string));
    
            var nominee_CNIC_NICOPParameter = nominee_CNIC_NICOP != null ?
                new ObjectParameter("Nominee_CNIC_NICOP", nominee_CNIC_NICOP) :
                new ObjectParameter("Nominee_CNIC_NICOP", typeof(string));
    
            var plot_IdParameter = plot_Id.HasValue ?
                new ObjectParameter("Plot_Id", plot_Id) :
                new ObjectParameter("Plot_Id", typeof(long));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(decimal));
    
            var imgParameter = img != null ?
                new ObjectParameter("img", img) :
                new ObjectParameter("img", typeof(string));
    
            var discountParameter = discount.HasValue ?
                new ObjectParameter("discount", discount) :
                new ObjectParameter("discount", typeof(decimal));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(long));
    
            var ownerdateParameter = ownerdate.HasValue ?
                new ObjectParameter("ownerdate", ownerdate) :
                new ObjectParameter("ownerdate", typeof(System.DateTime));
    
            var ownerstatParameter = ownerstat != null ?
                new ObjectParameter("ownerstat", ownerstat) :
                new ObjectParameter("ownerstat", typeof(string));
    
            var grptagParameter = grptag.HasValue ?
                new ObjectParameter("grptag", grptag) :
                new ObjectParameter("grptag", typeof(long));
    
            var instParameter = inst != null ?
                new ObjectParameter("inst", inst) :
                new ObjectParameter("inst", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_PlotOwnerShip", plot_SizeParameter, nameParameter, father_HusbandParameter, cNIC_NICOPParameter, mobile_1Parameter, mobile_2Parameter, phone_OfficeParameter, residentialParameter, postal_AddressParameter, residential_AddressParameter, emailParameter, occupationParameter, nationalityParameter, date_Of_BirthParameter, nominee_NameParameter, nominee_RelationParameter, nominee_AddressParameter, nominee_CNIC_NICOPParameter, plot_IdParameter, cityParameter, totalParameter, imgParameter, discountParameter, useridParameter, ownerdateParameter, ownerstatParameter, grptagParameter, instParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_PlotReceipt_Manual(Nullable<decimal> amount, string amountinWords, string bank, string ch_Pay_Draft_No, Nullable<System.DateTime> ch_Pay_Draft_Date, string branch, string contact, string father_Name, string file_Plot_No, string name, string paymentType, Nullable<decimal> plot_Total_Amount, string project, Nullable<decimal> ratePerMarla, string registeration_No, string size, string type, Nullable<long> token, Nullable<long> userid, string receNo, Nullable<System.DateTime> date, string phase, string block, string img, string module, string fileplotnumber)
        {
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var amountinWordsParameter = amountinWords != null ?
                new ObjectParameter("AmountinWords", amountinWords) :
                new ObjectParameter("AmountinWords", typeof(string));
    
            var bankParameter = bank != null ?
                new ObjectParameter("Bank", bank) :
                new ObjectParameter("Bank", typeof(string));
    
            var ch_Pay_Draft_NoParameter = ch_Pay_Draft_No != null ?
                new ObjectParameter("Ch_Pay_Draft_No", ch_Pay_Draft_No) :
                new ObjectParameter("Ch_Pay_Draft_No", typeof(string));
    
            var ch_Pay_Draft_DateParameter = ch_Pay_Draft_Date.HasValue ?
                new ObjectParameter("Ch_Pay_Draft_Date", ch_Pay_Draft_Date) :
                new ObjectParameter("Ch_Pay_Draft_Date", typeof(System.DateTime));
    
            var branchParameter = branch != null ?
                new ObjectParameter("Branch", branch) :
                new ObjectParameter("Branch", typeof(string));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var father_NameParameter = father_Name != null ?
                new ObjectParameter("Father_Name", father_Name) :
                new ObjectParameter("Father_Name", typeof(string));
    
            var file_Plot_NoParameter = file_Plot_No != null ?
                new ObjectParameter("File_Plot_No", file_Plot_No) :
                new ObjectParameter("File_Plot_No", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var paymentTypeParameter = paymentType != null ?
                new ObjectParameter("PaymentType", paymentType) :
                new ObjectParameter("PaymentType", typeof(string));
    
            var plot_Total_AmountParameter = plot_Total_Amount.HasValue ?
                new ObjectParameter("Plot_Total_Amount", plot_Total_Amount) :
                new ObjectParameter("Plot_Total_Amount", typeof(decimal));
    
            var projectParameter = project != null ?
                new ObjectParameter("Project", project) :
                new ObjectParameter("Project", typeof(string));
    
            var ratePerMarlaParameter = ratePerMarla.HasValue ?
                new ObjectParameter("RatePerMarla", ratePerMarla) :
                new ObjectParameter("RatePerMarla", typeof(decimal));
    
            var registeration_NoParameter = registeration_No != null ?
                new ObjectParameter("Registeration_No", registeration_No) :
                new ObjectParameter("Registeration_No", typeof(string));
    
            var sizeParameter = size != null ?
                new ObjectParameter("Size", size) :
                new ObjectParameter("Size", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var tokenParameter = token.HasValue ?
                new ObjectParameter("Token", token) :
                new ObjectParameter("Token", typeof(long));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var receNoParameter = receNo != null ?
                new ObjectParameter("ReceNo", receNo) :
                new ObjectParameter("ReceNo", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var phaseParameter = phase != null ?
                new ObjectParameter("Phase", phase) :
                new ObjectParameter("Phase", typeof(string));
    
            var blockParameter = block != null ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(string));
    
            var imgParameter = img != null ?
                new ObjectParameter("Img", img) :
                new ObjectParameter("Img", typeof(string));
    
            var moduleParameter = module != null ?
                new ObjectParameter("module", module) :
                new ObjectParameter("module", typeof(string));
    
            var fileplotnumberParameter = fileplotnumber != null ?
                new ObjectParameter("fileplotnumber", fileplotnumber) :
                new ObjectParameter("fileplotnumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_PlotReceipt_Manual", amountParameter, amountinWordsParameter, bankParameter, ch_Pay_Draft_NoParameter, ch_Pay_Draft_DateParameter, branchParameter, contactParameter, father_NameParameter, file_Plot_NoParameter, nameParameter, paymentTypeParameter, plot_Total_AmountParameter, projectParameter, ratePerMarlaParameter, registeration_NoParameter, sizeParameter, typeParameter, tokenParameter, useridParameter, receNoParameter, dateParameter, phaseParameter, blockParameter, imgParameter, moduleParameter, fileplotnumberParameter);
        }
    
        public virtual int Sp_Add_Plots_Comments_SvcChg(string cmnts)
        {
            var cmntsParameter = cmnts != null ?
                new ObjectParameter("cmnts", cmnts) :
                new ObjectParameter("cmnts", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_Plots_Comments_SvcChg", cmntsParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Sp_Add_Plots_Size(string uom, Nullable<decimal> front, Nullable<decimal> back, Nullable<decimal> left, Nullable<decimal> right, string nomen, Nullable<decimal> ne, Nullable<decimal> nw, Nullable<decimal> sw, Nullable<decimal> se)
        {
            var uomParameter = uom != null ?
                new ObjectParameter("uom", uom) :
                new ObjectParameter("uom", typeof(string));
    
            var frontParameter = front.HasValue ?
                new ObjectParameter("front", front) :
                new ObjectParameter("front", typeof(decimal));
    
            var backParameter = back.HasValue ?
                new ObjectParameter("back", back) :
                new ObjectParameter("back", typeof(decimal));
    
            var leftParameter = left.HasValue ?
                new ObjectParameter("left", left) :
                new ObjectParameter("left", typeof(decimal));
    
            var rightParameter = right.HasValue ?
                new ObjectParameter("right", right) :
                new ObjectParameter("right", typeof(decimal));
    
            var nomenParameter = nomen != null ?
                new ObjectParameter("nomen", nomen) :
                new ObjectParameter("nomen", typeof(string));
    
            var neParameter = ne.HasValue ?
                new ObjectParameter("ne", ne) :
                new ObjectParameter("ne", typeof(decimal));
    
            var nwParameter = nw.HasValue ?
                new ObjectParameter("nw", nw) :
                new ObjectParameter("nw", typeof(decimal));
    
            var swParameter = sw.HasValue ?
                new ObjectParameter("sw", sw) :
                new ObjectParameter("sw", typeof(decimal));
    
            var seParameter = se.HasValue ?
                new ObjectParameter("se", se) :
                new ObjectParameter("se", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Sp_Add_Plots_Size", uomParameter, frontParameter, backParameter, leftParameter, rightParameter, nomenParameter, neParameter, nwParameter, swParameter, seParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_PlotServiceChargeBills(Nullable<decimal> amount, string block, string name, string phase, Nullable<long> plot_Id, string plot_No, string plot_Type, Nullable<decimal> arrears, string remarks, Nullable<int> fine_Percentage, Nullable<decimal> fine_Amount, Nullable<System.DateTime> due_Date, Nullable<decimal> due_Date_Amount, Nullable<decimal> net_Total, string billNo, string details)
        {
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var blockParameter = block != null ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var phaseParameter = phase != null ?
                new ObjectParameter("phase", phase) :
                new ObjectParameter("phase", typeof(string));
    
            var plot_IdParameter = plot_Id.HasValue ?
                new ObjectParameter("Plot_Id", plot_Id) :
                new ObjectParameter("Plot_Id", typeof(long));
    
            var plot_NoParameter = plot_No != null ?
                new ObjectParameter("Plot_No", plot_No) :
                new ObjectParameter("Plot_No", typeof(string));
    
            var plot_TypeParameter = plot_Type != null ?
                new ObjectParameter("Plot_Type", plot_Type) :
                new ObjectParameter("Plot_Type", typeof(string));
    
            var arrearsParameter = arrears.HasValue ?
                new ObjectParameter("arrears", arrears) :
                new ObjectParameter("arrears", typeof(decimal));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            var fine_PercentageParameter = fine_Percentage.HasValue ?
                new ObjectParameter("Fine_Percentage", fine_Percentage) :
                new ObjectParameter("Fine_Percentage", typeof(int));
    
            var fine_AmountParameter = fine_Amount.HasValue ?
                new ObjectParameter("Fine_Amount", fine_Amount) :
                new ObjectParameter("Fine_Amount", typeof(decimal));
    
            var due_DateParameter = due_Date.HasValue ?
                new ObjectParameter("Due_Date", due_Date) :
                new ObjectParameter("Due_Date", typeof(System.DateTime));
    
            var due_Date_AmountParameter = due_Date_Amount.HasValue ?
                new ObjectParameter("Due_Date_Amount", due_Date_Amount) :
                new ObjectParameter("Due_Date_Amount", typeof(decimal));
    
            var net_TotalParameter = net_Total.HasValue ?
                new ObjectParameter("Net_Total", net_Total) :
                new ObjectParameter("Net_Total", typeof(decimal));
    
            var billNoParameter = billNo != null ?
                new ObjectParameter("billNo", billNo) :
                new ObjectParameter("billNo", typeof(string));
    
            var detailsParameter = details != null ?
                new ObjectParameter("details", details) :
                new ObjectParameter("details", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_PlotServiceChargeBills", amountParameter, blockParameter, nameParameter, phaseParameter, plot_IdParameter, plot_NoParameter, plot_TypeParameter, arrearsParameter, remarksParameter, fine_PercentageParameter, fine_AmountParameter, due_DateParameter, due_Date_AmountParameter, net_TotalParameter, billNoParameter, detailsParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_PlotServiceChargeBills_Regen(Nullable<decimal> amount, string block, string name, string phase, Nullable<long> plot_Id, string plot_No, string plot_Type, Nullable<decimal> arrears, string remarks, Nullable<int> fine_Percentage, Nullable<decimal> fine_Amount, Nullable<System.DateTime> due_Date, Nullable<decimal> due_Date_Amount, Nullable<decimal> net_Total, string details)
        {
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var blockParameter = block != null ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var phaseParameter = phase != null ?
                new ObjectParameter("phase", phase) :
                new ObjectParameter("phase", typeof(string));
    
            var plot_IdParameter = plot_Id.HasValue ?
                new ObjectParameter("Plot_Id", plot_Id) :
                new ObjectParameter("Plot_Id", typeof(long));
    
            var plot_NoParameter = plot_No != null ?
                new ObjectParameter("Plot_No", plot_No) :
                new ObjectParameter("Plot_No", typeof(string));
    
            var plot_TypeParameter = plot_Type != null ?
                new ObjectParameter("Plot_Type", plot_Type) :
                new ObjectParameter("Plot_Type", typeof(string));
    
            var arrearsParameter = arrears.HasValue ?
                new ObjectParameter("arrears", arrears) :
                new ObjectParameter("arrears", typeof(decimal));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            var fine_PercentageParameter = fine_Percentage.HasValue ?
                new ObjectParameter("Fine_Percentage", fine_Percentage) :
                new ObjectParameter("Fine_Percentage", typeof(int));
    
            var fine_AmountParameter = fine_Amount.HasValue ?
                new ObjectParameter("Fine_Amount", fine_Amount) :
                new ObjectParameter("Fine_Amount", typeof(decimal));
    
            var due_DateParameter = due_Date.HasValue ?
                new ObjectParameter("Due_Date", due_Date) :
                new ObjectParameter("Due_Date", typeof(System.DateTime));
    
            var due_Date_AmountParameter = due_Date_Amount.HasValue ?
                new ObjectParameter("Due_Date_Amount", due_Date_Amount) :
                new ObjectParameter("Due_Date_Amount", typeof(decimal));
    
            var net_TotalParameter = net_Total.HasValue ?
                new ObjectParameter("Net_Total", net_Total) :
                new ObjectParameter("Net_Total", typeof(decimal));
    
            var detailsParameter = details != null ?
                new ObjectParameter("details", details) :
                new ObjectParameter("details", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_PlotServiceChargeBills_Regen", amountParameter, blockParameter, nameParameter, phaseParameter, plot_IdParameter, plot_NoParameter, plot_TypeParameter, arrearsParameter, remarksParameter, fine_PercentageParameter, fine_AmountParameter, due_DateParameter, due_Date_AmountParameter, net_TotalParameter, detailsParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_PlotTransfer(string plot_Size, string name, string father_Husband, string cNIC_NICOP, string mobile_1, string mobile_2, string phone_Office, string residential, string postal_Address, string residential_Address, string email, string occupation, string nationality, string date_Of_Birth, string nominee_Name, string nominee_Relation, string nominee_Address, string nominee_CNIC_NICOP, Nullable<long> plot_Id, string city, Nullable<decimal> total, string owner, string img, Nullable<System.DateTime> ownerdate, Nullable<long> group_Tag)
        {
            var plot_SizeParameter = plot_Size != null ?
                new ObjectParameter("Plot_Size", plot_Size) :
                new ObjectParameter("Plot_Size", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var father_HusbandParameter = father_Husband != null ?
                new ObjectParameter("Father_Husband", father_Husband) :
                new ObjectParameter("Father_Husband", typeof(string));
    
            var cNIC_NICOPParameter = cNIC_NICOP != null ?
                new ObjectParameter("CNIC_NICOP", cNIC_NICOP) :
                new ObjectParameter("CNIC_NICOP", typeof(string));
    
            var mobile_1Parameter = mobile_1 != null ?
                new ObjectParameter("Mobile_1", mobile_1) :
                new ObjectParameter("Mobile_1", typeof(string));
    
            var mobile_2Parameter = mobile_2 != null ?
                new ObjectParameter("Mobile_2", mobile_2) :
                new ObjectParameter("Mobile_2", typeof(string));
    
            var phone_OfficeParameter = phone_Office != null ?
                new ObjectParameter("Phone_Office", phone_Office) :
                new ObjectParameter("Phone_Office", typeof(string));
    
            var residentialParameter = residential != null ?
                new ObjectParameter("Residential", residential) :
                new ObjectParameter("Residential", typeof(string));
    
            var postal_AddressParameter = postal_Address != null ?
                new ObjectParameter("Postal_Address", postal_Address) :
                new ObjectParameter("Postal_Address", typeof(string));
    
            var residential_AddressParameter = residential_Address != null ?
                new ObjectParameter("Residential_Address", residential_Address) :
                new ObjectParameter("Residential_Address", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var occupationParameter = occupation != null ?
                new ObjectParameter("Occupation", occupation) :
                new ObjectParameter("Occupation", typeof(string));
    
            var nationalityParameter = nationality != null ?
                new ObjectParameter("Nationality", nationality) :
                new ObjectParameter("Nationality", typeof(string));
    
            var date_Of_BirthParameter = date_Of_Birth != null ?
                new ObjectParameter("Date_Of_Birth", date_Of_Birth) :
                new ObjectParameter("Date_Of_Birth", typeof(string));
    
            var nominee_NameParameter = nominee_Name != null ?
                new ObjectParameter("Nominee_Name", nominee_Name) :
                new ObjectParameter("Nominee_Name", typeof(string));
    
            var nominee_RelationParameter = nominee_Relation != null ?
                new ObjectParameter("Nominee_Relation", nominee_Relation) :
                new ObjectParameter("Nominee_Relation", typeof(string));
    
            var nominee_AddressParameter = nominee_Address != null ?
                new ObjectParameter("Nominee_Address", nominee_Address) :
                new ObjectParameter("Nominee_Address", typeof(string));
    
            var nominee_CNIC_NICOPParameter = nominee_CNIC_NICOP != null ?
                new ObjectParameter("Nominee_CNIC_NICOP", nominee_CNIC_NICOP) :
                new ObjectParameter("Nominee_CNIC_NICOP", typeof(string));
    
            var plot_IdParameter = plot_Id.HasValue ?
                new ObjectParameter("Plot_Id", plot_Id) :
                new ObjectParameter("Plot_Id", typeof(long));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(decimal));
    
            var ownerParameter = owner != null ?
                new ObjectParameter("owner", owner) :
                new ObjectParameter("owner", typeof(string));
    
            var imgParameter = img != null ?
                new ObjectParameter("img", img) :
                new ObjectParameter("img", typeof(string));
    
            var ownerdateParameter = ownerdate.HasValue ?
                new ObjectParameter("ownerdate", ownerdate) :
                new ObjectParameter("ownerdate", typeof(System.DateTime));
    
            var group_TagParameter = group_Tag.HasValue ?
                new ObjectParameter("Group_Tag", group_Tag) :
                new ObjectParameter("Group_Tag", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_PlotTransfer", plot_SizeParameter, nameParameter, father_HusbandParameter, cNIC_NICOPParameter, mobile_1Parameter, mobile_2Parameter, phone_OfficeParameter, residentialParameter, postal_AddressParameter, residential_AddressParameter, emailParameter, occupationParameter, nationalityParameter, date_Of_BirthParameter, nominee_NameParameter, nominee_RelationParameter, nominee_AddressParameter, nominee_CNIC_NICOPParameter, plot_IdParameter, cityParameter, totalParameter, ownerParameter, imgParameter, ownerdateParameter, group_TagParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_Post(string post, Nullable<long> userid, Nullable<long> prj_id)
        {
            var postParameter = post != null ?
                new ObjectParameter("post", post) :
                new ObjectParameter("post", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var prj_idParameter = prj_id.HasValue ?
                new ObjectParameter("prj_id", prj_id) :
                new ObjectParameter("prj_id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_Post", postParameter, useridParameter, prj_idParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_Post_Attendees(Nullable<long> userid, Nullable<long> post_id)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var post_idParameter = post_id.HasValue ?
                new ObjectParameter("Post_id", post_id) :
                new ObjectParameter("Post_id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_Post_Attendees", useridParameter, post_idParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_Post_Comment(string coment, Nullable<long> userid, Nullable<long> post_id)
        {
            var comentParameter = coment != null ?
                new ObjectParameter("coment", coment) :
                new ObjectParameter("coment", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var post_idParameter = post_id.HasValue ?
                new ObjectParameter("Post_id", post_id) :
                new ObjectParameter("Post_id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_Post_Comment", comentParameter, useridParameter, post_idParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Sp_Add_POTerms(string term, Nullable<System.DateTime> date, Nullable<long> userid, Nullable<long> bidid, Nullable<long> vend_id)
        {
            var termParameter = term != null ?
                new ObjectParameter("term", term) :
                new ObjectParameter("term", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var bididParameter = bidid.HasValue ?
                new ObjectParameter("bidid", bidid) :
                new ObjectParameter("bidid", typeof(long));
    
            var vend_idParameter = vend_id.HasValue ?
                new ObjectParameter("vend_id", vend_id) :
                new ObjectParameter("vend_id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Sp_Add_POTerms", termParameter, dateParameter, useridParameter, bididParameter, vend_idParameter);
        }
    
        public virtual int Sp_Add_Prj_Departments(Nullable<long> prjid, Nullable<long> depid)
        {
            var prjidParameter = prjid.HasValue ?
                new ObjectParameter("Prjid", prjid) :
                new ObjectParameter("Prjid", typeof(long));
    
            var depidParameter = depid.HasValue ?
                new ObjectParameter("depid", depid) :
                new ObjectParameter("depid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_Prj_Departments", prjidParameter, depidParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_Prj_PaymentVoucherReq(string details, Nullable<long> groupid)
        {
            var detailsParameter = details != null ?
                new ObjectParameter("details", details) :
                new ObjectParameter("details", typeof(string));
    
            var groupidParameter = groupid.HasValue ?
                new ObjectParameter("groupid", groupid) :
                new ObjectParameter("groupid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_Prj_PaymentVoucherReq", detailsParameter, groupidParameter);
        }
    
        public virtual int Sp_Add_Prj_Users(Nullable<long> prjid, Nullable<long> depid, string dep_nam, Nullable<long> userid, string nam)
        {
            var prjidParameter = prjid.HasValue ?
                new ObjectParameter("Prjid", prjid) :
                new ObjectParameter("Prjid", typeof(long));
    
            var depidParameter = depid.HasValue ?
                new ObjectParameter("depid", depid) :
                new ObjectParameter("depid", typeof(long));
    
            var dep_namParameter = dep_nam != null ?
                new ObjectParameter("dep_nam", dep_nam) :
                new ObjectParameter("dep_nam", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var namParameter = nam != null ?
                new ObjectParameter("nam", nam) :
                new ObjectParameter("nam", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_Prj_Users", prjidParameter, depidParameter, dep_namParameter, useridParameter, namParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_Project(string prjnam, Nullable<long> userid, string prjid, string type, string dep, Nullable<bool> off, string headCode)
        {
            var prjnamParameter = prjnam != null ?
                new ObjectParameter("prjnam", prjnam) :
                new ObjectParameter("prjnam", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var prjidParameter = prjid != null ?
                new ObjectParameter("prjid", prjid) :
                new ObjectParameter("prjid", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var depParameter = dep != null ?
                new ObjectParameter("dep", dep) :
                new ObjectParameter("dep", typeof(string));
    
            var offParameter = off.HasValue ?
                new ObjectParameter("off", off) :
                new ObjectParameter("off", typeof(bool));
    
            var headCodeParameter = headCode != null ?
                new ObjectParameter("headCode", headCode) :
                new ObjectParameter("headCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_Project", prjnamParameter, useridParameter, prjidParameter, typeParameter, depParameter, offParameter, headCodeParameter);
        }
    
        public virtual int Sp_Add_PropertyDeal_Request(string type, Nullable<decimal> amt, string desc, Nullable<long> dealid, Nullable<long> partid, Nullable<long> userid)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var amtParameter = amt.HasValue ?
                new ObjectParameter("amt", amt) :
                new ObjectParameter("amt", typeof(decimal));
    
            var descParameter = desc != null ?
                new ObjectParameter("desc", desc) :
                new ObjectParameter("desc", typeof(string));
    
            var dealidParameter = dealid.HasValue ?
                new ObjectParameter("dealid", dealid) :
                new ObjectParameter("dealid", typeof(long));
    
            var partidParameter = partid.HasValue ?
                new ObjectParameter("partid", partid) :
                new ObjectParameter("partid", typeof(long));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_PropertyDeal_Request", typeParameter, amtParameter, descParameter, dealidParameter, partidParameter, useridParameter);
        }
    
        public virtual ObjectResult<Sp_Add_PropertyDealReceipt_Result> Sp_Add_PropertyDealReceipt(Nullable<decimal> amount, string amountinWords, string bank, string ch_Pay_Draft_To, string ch_Pay_Draft_No, Nullable<System.DateTime> ch_Pay_Draft_Date, string branch, string contact, Nullable<long> file_Plot_No, string name, string paymentType, Nullable<decimal> plot_Total_Amount, Nullable<decimal> ratePerMarla, string size, string type, Nullable<long> token, Nullable<long> userid, string filePlotNumber, string block, string comp, Nullable<long> groupId)
        {
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var amountinWordsParameter = amountinWords != null ?
                new ObjectParameter("AmountinWords", amountinWords) :
                new ObjectParameter("AmountinWords", typeof(string));
    
            var bankParameter = bank != null ?
                new ObjectParameter("Bank", bank) :
                new ObjectParameter("Bank", typeof(string));
    
            var ch_Pay_Draft_ToParameter = ch_Pay_Draft_To != null ?
                new ObjectParameter("Ch_Pay_Draft_To", ch_Pay_Draft_To) :
                new ObjectParameter("Ch_Pay_Draft_To", typeof(string));
    
            var ch_Pay_Draft_NoParameter = ch_Pay_Draft_No != null ?
                new ObjectParameter("Ch_Pay_Draft_No", ch_Pay_Draft_No) :
                new ObjectParameter("Ch_Pay_Draft_No", typeof(string));
    
            var ch_Pay_Draft_DateParameter = ch_Pay_Draft_Date.HasValue ?
                new ObjectParameter("Ch_Pay_Draft_Date", ch_Pay_Draft_Date) :
                new ObjectParameter("Ch_Pay_Draft_Date", typeof(System.DateTime));
    
            var branchParameter = branch != null ?
                new ObjectParameter("Branch", branch) :
                new ObjectParameter("Branch", typeof(string));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var file_Plot_NoParameter = file_Plot_No.HasValue ?
                new ObjectParameter("File_Plot_No", file_Plot_No) :
                new ObjectParameter("File_Plot_No", typeof(long));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var paymentTypeParameter = paymentType != null ?
                new ObjectParameter("PaymentType", paymentType) :
                new ObjectParameter("PaymentType", typeof(string));
    
            var plot_Total_AmountParameter = plot_Total_Amount.HasValue ?
                new ObjectParameter("Plot_Total_Amount", plot_Total_Amount) :
                new ObjectParameter("Plot_Total_Amount", typeof(decimal));
    
            var ratePerMarlaParameter = ratePerMarla.HasValue ?
                new ObjectParameter("RatePerMarla", ratePerMarla) :
                new ObjectParameter("RatePerMarla", typeof(decimal));
    
            var sizeParameter = size != null ?
                new ObjectParameter("Size", size) :
                new ObjectParameter("Size", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var tokenParameter = token.HasValue ?
                new ObjectParameter("Token", token) :
                new ObjectParameter("Token", typeof(long));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var filePlotNumberParameter = filePlotNumber != null ?
                new ObjectParameter("FilePlotNumber", filePlotNumber) :
                new ObjectParameter("FilePlotNumber", typeof(string));
    
            var blockParameter = block != null ?
                new ObjectParameter("block", block) :
                new ObjectParameter("block", typeof(string));
    
            var compParameter = comp != null ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(string));
    
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("GroupId", groupId) :
                new ObjectParameter("GroupId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Add_PropertyDealReceipt_Result>("Sp_Add_PropertyDealReceipt", amountParameter, amountinWordsParameter, bankParameter, ch_Pay_Draft_ToParameter, ch_Pay_Draft_NoParameter, ch_Pay_Draft_DateParameter, branchParameter, contactParameter, file_Plot_NoParameter, nameParameter, paymentTypeParameter, plot_Total_AmountParameter, ratePerMarlaParameter, sizeParameter, typeParameter, tokenParameter, useridParameter, filePlotNumberParameter, blockParameter, compParameter, groupIdParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_PropertyDealReceipt_Move(Nullable<decimal> amount, string amountinWords, string bank, string ch_Pay_Draft_To, string ch_Pay_Draft_No, Nullable<System.DateTime> ch_Pay_Draft_Date, string branch, string contact, Nullable<long> file_Plot_No, string name, string paymentType, Nullable<decimal> plot_Total_Amount, Nullable<decimal> ratePerMarla, string size, string type, Nullable<long> token, Nullable<long> userid, string filePlotNumber, string block, string comp, string receno, Nullable<System.DateTime> date, string status, Nullable<System.DateTime> dayClose)
        {
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var amountinWordsParameter = amountinWords != null ?
                new ObjectParameter("AmountinWords", amountinWords) :
                new ObjectParameter("AmountinWords", typeof(string));
    
            var bankParameter = bank != null ?
                new ObjectParameter("Bank", bank) :
                new ObjectParameter("Bank", typeof(string));
    
            var ch_Pay_Draft_ToParameter = ch_Pay_Draft_To != null ?
                new ObjectParameter("Ch_Pay_Draft_To", ch_Pay_Draft_To) :
                new ObjectParameter("Ch_Pay_Draft_To", typeof(string));
    
            var ch_Pay_Draft_NoParameter = ch_Pay_Draft_No != null ?
                new ObjectParameter("Ch_Pay_Draft_No", ch_Pay_Draft_No) :
                new ObjectParameter("Ch_Pay_Draft_No", typeof(string));
    
            var ch_Pay_Draft_DateParameter = ch_Pay_Draft_Date.HasValue ?
                new ObjectParameter("Ch_Pay_Draft_Date", ch_Pay_Draft_Date) :
                new ObjectParameter("Ch_Pay_Draft_Date", typeof(System.DateTime));
    
            var branchParameter = branch != null ?
                new ObjectParameter("Branch", branch) :
                new ObjectParameter("Branch", typeof(string));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var file_Plot_NoParameter = file_Plot_No.HasValue ?
                new ObjectParameter("File_Plot_No", file_Plot_No) :
                new ObjectParameter("File_Plot_No", typeof(long));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var paymentTypeParameter = paymentType != null ?
                new ObjectParameter("PaymentType", paymentType) :
                new ObjectParameter("PaymentType", typeof(string));
    
            var plot_Total_AmountParameter = plot_Total_Amount.HasValue ?
                new ObjectParameter("Plot_Total_Amount", plot_Total_Amount) :
                new ObjectParameter("Plot_Total_Amount", typeof(decimal));
    
            var ratePerMarlaParameter = ratePerMarla.HasValue ?
                new ObjectParameter("RatePerMarla", ratePerMarla) :
                new ObjectParameter("RatePerMarla", typeof(decimal));
    
            var sizeParameter = size != null ?
                new ObjectParameter("Size", size) :
                new ObjectParameter("Size", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var tokenParameter = token.HasValue ?
                new ObjectParameter("Token", token) :
                new ObjectParameter("Token", typeof(long));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var filePlotNumberParameter = filePlotNumber != null ?
                new ObjectParameter("FilePlotNumber", filePlotNumber) :
                new ObjectParameter("FilePlotNumber", typeof(string));
    
            var blockParameter = block != null ?
                new ObjectParameter("block", block) :
                new ObjectParameter("block", typeof(string));
    
            var compParameter = comp != null ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(string));
    
            var recenoParameter = receno != null ?
                new ObjectParameter("receno", receno) :
                new ObjectParameter("receno", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var dayCloseParameter = dayClose.HasValue ?
                new ObjectParameter("dayClose", dayClose) :
                new ObjectParameter("dayClose", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_PropertyDealReceipt_Move", amountParameter, amountinWordsParameter, bankParameter, ch_Pay_Draft_ToParameter, ch_Pay_Draft_NoParameter, ch_Pay_Draft_DateParameter, branchParameter, contactParameter, file_Plot_NoParameter, nameParameter, paymentTypeParameter, plot_Total_AmountParameter, ratePerMarlaParameter, sizeParameter, typeParameter, tokenParameter, useridParameter, filePlotNumberParameter, blockParameter, compParameter, recenoParameter, dateParameter, statusParameter, dayCloseParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_PropertyVoucher(string address, Nullable<decimal> amount, string amountinWords, string bank, string block, string branch_Name, Nullable<System.DateTime> ch_Pay_Draft_Date, string ch_Pay_Draft_No, string ch_Pay_Draft_To, string company, string contact, Nullable<long> deal_Id, Nullable<long> dealParty_Id, string description, string file_Plot_Number, string name, string paymentType, Nullable<decimal> plot_Total_Amount, Nullable<decimal> ratePerMarla, string size, Nullable<long> tokenParameter, Nullable<long> userid, string type, Nullable<long> req, Nullable<long> transactionid)
        {
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var amountinWordsParameter = amountinWords != null ?
                new ObjectParameter("AmountinWords", amountinWords) :
                new ObjectParameter("AmountinWords", typeof(string));
    
            var bankParameter = bank != null ?
                new ObjectParameter("Bank", bank) :
                new ObjectParameter("Bank", typeof(string));
    
            var blockParameter = block != null ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(string));
    
            var branch_NameParameter = branch_Name != null ?
                new ObjectParameter("Branch_Name", branch_Name) :
                new ObjectParameter("Branch_Name", typeof(string));
    
            var ch_Pay_Draft_DateParameter = ch_Pay_Draft_Date.HasValue ?
                new ObjectParameter("Ch_Pay_Draft_Date", ch_Pay_Draft_Date) :
                new ObjectParameter("Ch_Pay_Draft_Date", typeof(System.DateTime));
    
            var ch_Pay_Draft_NoParameter = ch_Pay_Draft_No != null ?
                new ObjectParameter("Ch_Pay_Draft_No", ch_Pay_Draft_No) :
                new ObjectParameter("Ch_Pay_Draft_No", typeof(string));
    
            var ch_Pay_Draft_ToParameter = ch_Pay_Draft_To != null ?
                new ObjectParameter("Ch_Pay_Draft_To", ch_Pay_Draft_To) :
                new ObjectParameter("Ch_Pay_Draft_To", typeof(string));
    
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var deal_IdParameter = deal_Id.HasValue ?
                new ObjectParameter("Deal_Id", deal_Id) :
                new ObjectParameter("Deal_Id", typeof(long));
    
            var dealParty_IdParameter = dealParty_Id.HasValue ?
                new ObjectParameter("DealParty_Id", dealParty_Id) :
                new ObjectParameter("DealParty_Id", typeof(long));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var file_Plot_NumberParameter = file_Plot_Number != null ?
                new ObjectParameter("File_Plot_Number", file_Plot_Number) :
                new ObjectParameter("File_Plot_Number", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var paymentTypeParameter = paymentType != null ?
                new ObjectParameter("PaymentType", paymentType) :
                new ObjectParameter("PaymentType", typeof(string));
    
            var plot_Total_AmountParameter = plot_Total_Amount.HasValue ?
                new ObjectParameter("Plot_Total_Amount", plot_Total_Amount) :
                new ObjectParameter("Plot_Total_Amount", typeof(decimal));
    
            var ratePerMarlaParameter = ratePerMarla.HasValue ?
                new ObjectParameter("RatePerMarla", ratePerMarla) :
                new ObjectParameter("RatePerMarla", typeof(decimal));
    
            var sizeParameter = size != null ?
                new ObjectParameter("Size", size) :
                new ObjectParameter("Size", typeof(string));
    
            var tokenParameterParameter = tokenParameter.HasValue ?
                new ObjectParameter("TokenParameter", tokenParameter) :
                new ObjectParameter("TokenParameter", typeof(long));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(long));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var reqParameter = req.HasValue ?
                new ObjectParameter("req", req) :
                new ObjectParameter("req", typeof(long));
    
            var transactionidParameter = transactionid.HasValue ?
                new ObjectParameter("transactionid", transactionid) :
                new ObjectParameter("transactionid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_PropertyVoucher", addressParameter, amountParameter, amountinWordsParameter, bankParameter, blockParameter, branch_NameParameter, ch_Pay_Draft_DateParameter, ch_Pay_Draft_NoParameter, ch_Pay_Draft_ToParameter, companyParameter, contactParameter, deal_IdParameter, dealParty_IdParameter, descriptionParameter, file_Plot_NumberParameter, nameParameter, paymentTypeParameter, plot_Total_AmountParameter, ratePerMarlaParameter, sizeParameter, tokenParameterParameter, useridParameter, typeParameter, reqParameter, transactionidParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_PropertyVoucherMove(string address, Nullable<decimal> amount, string amountinWords, string bank, string block, string branch_Name, Nullable<System.DateTime> ch_Pay_Draft_Date, string ch_Pay_Draft_No, string ch_Pay_Draft_To, string company, string contact, Nullable<long> deal_Id, Nullable<long> dealParty_Id, string description, string file_Plot_Number, string name, string paymentType, Nullable<decimal> plot_Total_Amount, Nullable<decimal> ratePerMarla, string size, Nullable<long> tokenParameter, Nullable<long> userid, string type, Nullable<long> req, string vouc, Nullable<System.DateTime> date, Nullable<System.DateTime> dayClose)
        {
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var amountinWordsParameter = amountinWords != null ?
                new ObjectParameter("AmountinWords", amountinWords) :
                new ObjectParameter("AmountinWords", typeof(string));
    
            var bankParameter = bank != null ?
                new ObjectParameter("Bank", bank) :
                new ObjectParameter("Bank", typeof(string));
    
            var blockParameter = block != null ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(string));
    
            var branch_NameParameter = branch_Name != null ?
                new ObjectParameter("Branch_Name", branch_Name) :
                new ObjectParameter("Branch_Name", typeof(string));
    
            var ch_Pay_Draft_DateParameter = ch_Pay_Draft_Date.HasValue ?
                new ObjectParameter("Ch_Pay_Draft_Date", ch_Pay_Draft_Date) :
                new ObjectParameter("Ch_Pay_Draft_Date", typeof(System.DateTime));
    
            var ch_Pay_Draft_NoParameter = ch_Pay_Draft_No != null ?
                new ObjectParameter("Ch_Pay_Draft_No", ch_Pay_Draft_No) :
                new ObjectParameter("Ch_Pay_Draft_No", typeof(string));
    
            var ch_Pay_Draft_ToParameter = ch_Pay_Draft_To != null ?
                new ObjectParameter("Ch_Pay_Draft_To", ch_Pay_Draft_To) :
                new ObjectParameter("Ch_Pay_Draft_To", typeof(string));
    
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var deal_IdParameter = deal_Id.HasValue ?
                new ObjectParameter("Deal_Id", deal_Id) :
                new ObjectParameter("Deal_Id", typeof(long));
    
            var dealParty_IdParameter = dealParty_Id.HasValue ?
                new ObjectParameter("DealParty_Id", dealParty_Id) :
                new ObjectParameter("DealParty_Id", typeof(long));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var file_Plot_NumberParameter = file_Plot_Number != null ?
                new ObjectParameter("File_Plot_Number", file_Plot_Number) :
                new ObjectParameter("File_Plot_Number", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var paymentTypeParameter = paymentType != null ?
                new ObjectParameter("PaymentType", paymentType) :
                new ObjectParameter("PaymentType", typeof(string));
    
            var plot_Total_AmountParameter = plot_Total_Amount.HasValue ?
                new ObjectParameter("Plot_Total_Amount", plot_Total_Amount) :
                new ObjectParameter("Plot_Total_Amount", typeof(decimal));
    
            var ratePerMarlaParameter = ratePerMarla.HasValue ?
                new ObjectParameter("RatePerMarla", ratePerMarla) :
                new ObjectParameter("RatePerMarla", typeof(decimal));
    
            var sizeParameter = size != null ?
                new ObjectParameter("Size", size) :
                new ObjectParameter("Size", typeof(string));
    
            var tokenParameterParameter = tokenParameter.HasValue ?
                new ObjectParameter("TokenParameter", tokenParameter) :
                new ObjectParameter("TokenParameter", typeof(long));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(long));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var reqParameter = req.HasValue ?
                new ObjectParameter("req", req) :
                new ObjectParameter("req", typeof(long));
    
            var voucParameter = vouc != null ?
                new ObjectParameter("vouc", vouc) :
                new ObjectParameter("vouc", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var dayCloseParameter = dayClose.HasValue ?
                new ObjectParameter("dayClose", dayClose) :
                new ObjectParameter("dayClose", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_PropertyVoucherMove", addressParameter, amountParameter, amountinWordsParameter, bankParameter, blockParameter, branch_NameParameter, ch_Pay_Draft_DateParameter, ch_Pay_Draft_NoParameter, ch_Pay_Draft_ToParameter, companyParameter, contactParameter, deal_IdParameter, dealParty_IdParameter, descriptionParameter, file_Plot_NumberParameter, nameParameter, paymentTypeParameter, plot_Total_AmountParameter, ratePerMarlaParameter, sizeParameter, tokenParameterParameter, useridParameter, typeParameter, reqParameter, voucParameter, dateParameter, dayCloseParameter);
        }
    
        public virtual ObjectResult<SP_Add_PurchaseOrders_Result> SP_Add_PurchaseOrders(string mats, Nullable<long> usrId, string status)
        {
            var matsParameter = mats != null ?
                new ObjectParameter("Mats", mats) :
                new ObjectParameter("Mats", typeof(string));
    
            var usrIdParameter = usrId.HasValue ?
                new ObjectParameter("usrId", usrId) :
                new ObjectParameter("usrId", typeof(long));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Add_PurchaseOrders_Result>("SP_Add_PurchaseOrders", matsParameter, usrIdParameter, statusParameter);
        }
    
        public virtual ObjectResult<SP_Add_PurchaseOrders_Manual_Result> SP_Add_PurchaseOrders_Manual(string mats, Nullable<long> usrId, string status)
        {
            var matsParameter = mats != null ?
                new ObjectParameter("Mats", mats) :
                new ObjectParameter("Mats", typeof(string));
    
            var usrIdParameter = usrId.HasValue ?
                new ObjectParameter("usrId", usrId) :
                new ObjectParameter("usrId", typeof(long));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Add_PurchaseOrders_Manual_Result>("SP_Add_PurchaseOrders_Manual", matsParameter, usrIdParameter, statusParameter);
        }
    
        public virtual ObjectResult<Sp_Add_PurchaseOrders_Ser_Result> Sp_Add_PurchaseOrders_Ser(string mats, Nullable<long> usrId, string status)
        {
            var matsParameter = mats != null ?
                new ObjectParameter("Mats", mats) :
                new ObjectParameter("Mats", typeof(string));
    
            var usrIdParameter = usrId.HasValue ?
                new ObjectParameter("usrId", usrId) :
                new ObjectParameter("usrId", typeof(long));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Add_PurchaseOrders_Ser_Result>("Sp_Add_PurchaseOrders_Ser", matsParameter, usrIdParameter, statusParameter);
        }
    
        public virtual ObjectResult<SP_Add_PurchaseRequisition_Result> SP_Add_PurchaseRequisition(string products, Nullable<long> prjId, Nullable<long> usrId)
        {
            var productsParameter = products != null ?
                new ObjectParameter("Products", products) :
                new ObjectParameter("Products", typeof(string));
    
            var prjIdParameter = prjId.HasValue ?
                new ObjectParameter("prjId", prjId) :
                new ObjectParameter("prjId", typeof(long));
    
            var usrIdParameter = usrId.HasValue ?
                new ObjectParameter("usrId", usrId) :
                new ObjectParameter("usrId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Add_PurchaseRequisition_Result>("SP_Add_PurchaseRequisition", productsParameter, prjIdParameter, usrIdParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_QRCode(string qR_Code_Text, Nullable<long> qR_Code_Uniqe_No, string module, string type)
        {
            var qR_Code_TextParameter = qR_Code_Text != null ?
                new ObjectParameter("QR_Code_Text", qR_Code_Text) :
                new ObjectParameter("QR_Code_Text", typeof(string));
    
            var qR_Code_Uniqe_NoParameter = qR_Code_Uniqe_No.HasValue ?
                new ObjectParameter("QR_Code_Uniqe_No", qR_Code_Uniqe_No) :
                new ObjectParameter("QR_Code_Uniqe_No", typeof(long));
    
            var moduleParameter = module != null ?
                new ObjectParameter("Module", module) :
                new ObjectParameter("Module", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_QRCode", qR_Code_TextParameter, qR_Code_Uniqe_NoParameter, moduleParameter, typeParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_RealEstateProject(string name, string des, string type)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var desParameter = des != null ?
                new ObjectParameter("des", des) :
                new ObjectParameter("des", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_RealEstateProject", nameParameter, desParameter, typeParameter);
        }
    
        public virtual ObjectResult<Sp_Add_Receipt_Result> Sp_Add_Receipt(Nullable<decimal> amount, string amountinWords, string bank, string ch_Pay_Draft_No, Nullable<System.DateTime> ch_Pay_Draft_Date, string branch, string contact, string father_Name, Nullable<long> file_Plot_No, string name, string paymentType, Nullable<decimal> plot_Total_Amount, string project, Nullable<decimal> ratePerMarla, string registeration_No, string size, string type, Nullable<long> token, Nullable<long> userid, string text, Nullable<System.DateTime> expdate, string mod, string devchar, string filePlotNumber, string block, string plot_Type, Nullable<long> owner_id, Nullable<long> trans, string dealership, string receiptno, Nullable<int> comp_Id)
        {
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var amountinWordsParameter = amountinWords != null ?
                new ObjectParameter("AmountinWords", amountinWords) :
                new ObjectParameter("AmountinWords", typeof(string));
    
            var bankParameter = bank != null ?
                new ObjectParameter("Bank", bank) :
                new ObjectParameter("Bank", typeof(string));
    
            var ch_Pay_Draft_NoParameter = ch_Pay_Draft_No != null ?
                new ObjectParameter("Ch_Pay_Draft_No", ch_Pay_Draft_No) :
                new ObjectParameter("Ch_Pay_Draft_No", typeof(string));
    
            var ch_Pay_Draft_DateParameter = ch_Pay_Draft_Date.HasValue ?
                new ObjectParameter("Ch_Pay_Draft_Date", ch_Pay_Draft_Date) :
                new ObjectParameter("Ch_Pay_Draft_Date", typeof(System.DateTime));
    
            var branchParameter = branch != null ?
                new ObjectParameter("Branch", branch) :
                new ObjectParameter("Branch", typeof(string));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var father_NameParameter = father_Name != null ?
                new ObjectParameter("Father_Name", father_Name) :
                new ObjectParameter("Father_Name", typeof(string));
    
            var file_Plot_NoParameter = file_Plot_No.HasValue ?
                new ObjectParameter("File_Plot_No", file_Plot_No) :
                new ObjectParameter("File_Plot_No", typeof(long));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var paymentTypeParameter = paymentType != null ?
                new ObjectParameter("PaymentType", paymentType) :
                new ObjectParameter("PaymentType", typeof(string));
    
            var plot_Total_AmountParameter = plot_Total_Amount.HasValue ?
                new ObjectParameter("Plot_Total_Amount", plot_Total_Amount) :
                new ObjectParameter("Plot_Total_Amount", typeof(decimal));
    
            var projectParameter = project != null ?
                new ObjectParameter("Project", project) :
                new ObjectParameter("Project", typeof(string));
    
            var ratePerMarlaParameter = ratePerMarla.HasValue ?
                new ObjectParameter("RatePerMarla", ratePerMarla) :
                new ObjectParameter("RatePerMarla", typeof(decimal));
    
            var registeration_NoParameter = registeration_No != null ?
                new ObjectParameter("Registeration_No", registeration_No) :
                new ObjectParameter("Registeration_No", typeof(string));
    
            var sizeParameter = size != null ?
                new ObjectParameter("Size", size) :
                new ObjectParameter("Size", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var tokenParameter = token.HasValue ?
                new ObjectParameter("Token", token) :
                new ObjectParameter("Token", typeof(long));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var textParameter = text != null ?
                new ObjectParameter("text", text) :
                new ObjectParameter("text", typeof(string));
    
            var expdateParameter = expdate.HasValue ?
                new ObjectParameter("expdate", expdate) :
                new ObjectParameter("expdate", typeof(System.DateTime));
    
            var modParameter = mod != null ?
                new ObjectParameter("mod", mod) :
                new ObjectParameter("mod", typeof(string));
    
            var devcharParameter = devchar != null ?
                new ObjectParameter("devchar", devchar) :
                new ObjectParameter("devchar", typeof(string));
    
            var filePlotNumberParameter = filePlotNumber != null ?
                new ObjectParameter("FilePlotNumber", filePlotNumber) :
                new ObjectParameter("FilePlotNumber", typeof(string));
    
            var blockParameter = block != null ?
                new ObjectParameter("block", block) :
                new ObjectParameter("block", typeof(string));
    
            var plot_TypeParameter = plot_Type != null ?
                new ObjectParameter("plot_Type", plot_Type) :
                new ObjectParameter("plot_Type", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(long));
    
            var transParameter = trans.HasValue ?
                new ObjectParameter("trans", trans) :
                new ObjectParameter("trans", typeof(long));
    
            var dealershipParameter = dealership != null ?
                new ObjectParameter("dealership", dealership) :
                new ObjectParameter("dealership", typeof(string));
    
            var receiptnoParameter = receiptno != null ?
                new ObjectParameter("Receiptno", receiptno) :
                new ObjectParameter("Receiptno", typeof(string));
    
            var comp_IdParameter = comp_Id.HasValue ?
                new ObjectParameter("comp_Id", comp_Id) :
                new ObjectParameter("comp_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Add_Receipt_Result>("Sp_Add_Receipt", amountParameter, amountinWordsParameter, bankParameter, ch_Pay_Draft_NoParameter, ch_Pay_Draft_DateParameter, branchParameter, contactParameter, father_NameParameter, file_Plot_NoParameter, nameParameter, paymentTypeParameter, plot_Total_AmountParameter, projectParameter, ratePerMarlaParameter, registeration_NoParameter, sizeParameter, typeParameter, tokenParameter, useridParameter, textParameter, expdateParameter, modParameter, devcharParameter, filePlotNumberParameter, blockParameter, plot_TypeParameter, owner_idParameter, transParameter, dealershipParameter, receiptnoParameter, comp_IdParameter);
        }
    
        public virtual ObjectResult<Sp_Add_Receipt_Contra_Result> Sp_Add_Receipt_Contra(Nullable<decimal> amount, string amountinWords, string bank, string ch_Pay_Draft_No, Nullable<System.DateTime> ch_Pay_Draft_Date, string branch, string contact, string father_Name, Nullable<long> file_Plot_No, string name, string paymentType, Nullable<decimal> plot_Total_Amount, string project, Nullable<decimal> ratePerMarla, string registeration_No, string size, string type, Nullable<long> token, Nullable<long> userid, string text, Nullable<System.DateTime> expdate, string mod, string devchar, string filePlotNumber, string block, string plot_Type, Nullable<long> owner_id, Nullable<long> trans)
        {
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var amountinWordsParameter = amountinWords != null ?
                new ObjectParameter("AmountinWords", amountinWords) :
                new ObjectParameter("AmountinWords", typeof(string));
    
            var bankParameter = bank != null ?
                new ObjectParameter("Bank", bank) :
                new ObjectParameter("Bank", typeof(string));
    
            var ch_Pay_Draft_NoParameter = ch_Pay_Draft_No != null ?
                new ObjectParameter("Ch_Pay_Draft_No", ch_Pay_Draft_No) :
                new ObjectParameter("Ch_Pay_Draft_No", typeof(string));
    
            var ch_Pay_Draft_DateParameter = ch_Pay_Draft_Date.HasValue ?
                new ObjectParameter("Ch_Pay_Draft_Date", ch_Pay_Draft_Date) :
                new ObjectParameter("Ch_Pay_Draft_Date", typeof(System.DateTime));
    
            var branchParameter = branch != null ?
                new ObjectParameter("Branch", branch) :
                new ObjectParameter("Branch", typeof(string));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var father_NameParameter = father_Name != null ?
                new ObjectParameter("Father_Name", father_Name) :
                new ObjectParameter("Father_Name", typeof(string));
    
            var file_Plot_NoParameter = file_Plot_No.HasValue ?
                new ObjectParameter("File_Plot_No", file_Plot_No) :
                new ObjectParameter("File_Plot_No", typeof(long));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var paymentTypeParameter = paymentType != null ?
                new ObjectParameter("PaymentType", paymentType) :
                new ObjectParameter("PaymentType", typeof(string));
    
            var plot_Total_AmountParameter = plot_Total_Amount.HasValue ?
                new ObjectParameter("Plot_Total_Amount", plot_Total_Amount) :
                new ObjectParameter("Plot_Total_Amount", typeof(decimal));
    
            var projectParameter = project != null ?
                new ObjectParameter("Project", project) :
                new ObjectParameter("Project", typeof(string));
    
            var ratePerMarlaParameter = ratePerMarla.HasValue ?
                new ObjectParameter("RatePerMarla", ratePerMarla) :
                new ObjectParameter("RatePerMarla", typeof(decimal));
    
            var registeration_NoParameter = registeration_No != null ?
                new ObjectParameter("Registeration_No", registeration_No) :
                new ObjectParameter("Registeration_No", typeof(string));
    
            var sizeParameter = size != null ?
                new ObjectParameter("Size", size) :
                new ObjectParameter("Size", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var tokenParameter = token.HasValue ?
                new ObjectParameter("Token", token) :
                new ObjectParameter("Token", typeof(long));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var textParameter = text != null ?
                new ObjectParameter("text", text) :
                new ObjectParameter("text", typeof(string));
    
            var expdateParameter = expdate.HasValue ?
                new ObjectParameter("expdate", expdate) :
                new ObjectParameter("expdate", typeof(System.DateTime));
    
            var modParameter = mod != null ?
                new ObjectParameter("mod", mod) :
                new ObjectParameter("mod", typeof(string));
    
            var devcharParameter = devchar != null ?
                new ObjectParameter("devchar", devchar) :
                new ObjectParameter("devchar", typeof(string));
    
            var filePlotNumberParameter = filePlotNumber != null ?
                new ObjectParameter("FilePlotNumber", filePlotNumber) :
                new ObjectParameter("FilePlotNumber", typeof(string));
    
            var blockParameter = block != null ?
                new ObjectParameter("block", block) :
                new ObjectParameter("block", typeof(string));
    
            var plot_TypeParameter = plot_Type != null ?
                new ObjectParameter("plot_Type", plot_Type) :
                new ObjectParameter("plot_Type", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(long));
    
            var transParameter = trans.HasValue ?
                new ObjectParameter("trans", trans) :
                new ObjectParameter("trans", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Add_Receipt_Contra_Result>("Sp_Add_Receipt_Contra", amountParameter, amountinWordsParameter, bankParameter, ch_Pay_Draft_NoParameter, ch_Pay_Draft_DateParameter, branchParameter, contactParameter, father_NameParameter, file_Plot_NoParameter, nameParameter, paymentTypeParameter, plot_Total_AmountParameter, projectParameter, ratePerMarlaParameter, registeration_NoParameter, sizeParameter, typeParameter, tokenParameter, useridParameter, textParameter, expdateParameter, modParameter, devcharParameter, filePlotNumberParameter, blockParameter, plot_TypeParameter, owner_idParameter, transParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_Receipt_Manual(Nullable<decimal> amount, string amountinWords, string bank, string ch_Pay_Draft_No, Nullable<System.DateTime> ch_Pay_Draft_Date, string branch, string contact, string father_Name, Nullable<long> file_Plot_No, string name, string paymentType, Nullable<decimal> plot_Total_Amount, string project, Nullable<decimal> ratePerMarla, string registeration_No, string size, string type, Nullable<long> token, Nullable<long> userid, string receNo, Nullable<System.DateTime> date, string devchar, string fileplotnumber, string block, string plot_Type)
        {
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var amountinWordsParameter = amountinWords != null ?
                new ObjectParameter("AmountinWords", amountinWords) :
                new ObjectParameter("AmountinWords", typeof(string));
    
            var bankParameter = bank != null ?
                new ObjectParameter("Bank", bank) :
                new ObjectParameter("Bank", typeof(string));
    
            var ch_Pay_Draft_NoParameter = ch_Pay_Draft_No != null ?
                new ObjectParameter("Ch_Pay_Draft_No", ch_Pay_Draft_No) :
                new ObjectParameter("Ch_Pay_Draft_No", typeof(string));
    
            var ch_Pay_Draft_DateParameter = ch_Pay_Draft_Date.HasValue ?
                new ObjectParameter("Ch_Pay_Draft_Date", ch_Pay_Draft_Date) :
                new ObjectParameter("Ch_Pay_Draft_Date", typeof(System.DateTime));
    
            var branchParameter = branch != null ?
                new ObjectParameter("Branch", branch) :
                new ObjectParameter("Branch", typeof(string));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var father_NameParameter = father_Name != null ?
                new ObjectParameter("Father_Name", father_Name) :
                new ObjectParameter("Father_Name", typeof(string));
    
            var file_Plot_NoParameter = file_Plot_No.HasValue ?
                new ObjectParameter("File_Plot_No", file_Plot_No) :
                new ObjectParameter("File_Plot_No", typeof(long));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var paymentTypeParameter = paymentType != null ?
                new ObjectParameter("PaymentType", paymentType) :
                new ObjectParameter("PaymentType", typeof(string));
    
            var plot_Total_AmountParameter = plot_Total_Amount.HasValue ?
                new ObjectParameter("Plot_Total_Amount", plot_Total_Amount) :
                new ObjectParameter("Plot_Total_Amount", typeof(decimal));
    
            var projectParameter = project != null ?
                new ObjectParameter("Project", project) :
                new ObjectParameter("Project", typeof(string));
    
            var ratePerMarlaParameter = ratePerMarla.HasValue ?
                new ObjectParameter("RatePerMarla", ratePerMarla) :
                new ObjectParameter("RatePerMarla", typeof(decimal));
    
            var registeration_NoParameter = registeration_No != null ?
                new ObjectParameter("Registeration_No", registeration_No) :
                new ObjectParameter("Registeration_No", typeof(string));
    
            var sizeParameter = size != null ?
                new ObjectParameter("Size", size) :
                new ObjectParameter("Size", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var tokenParameter = token.HasValue ?
                new ObjectParameter("Token", token) :
                new ObjectParameter("Token", typeof(long));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var receNoParameter = receNo != null ?
                new ObjectParameter("ReceNo", receNo) :
                new ObjectParameter("ReceNo", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var devcharParameter = devchar != null ?
                new ObjectParameter("devchar", devchar) :
                new ObjectParameter("devchar", typeof(string));
    
            var fileplotnumberParameter = fileplotnumber != null ?
                new ObjectParameter("fileplotnumber", fileplotnumber) :
                new ObjectParameter("fileplotnumber", typeof(string));
    
            var blockParameter = block != null ?
                new ObjectParameter("block", block) :
                new ObjectParameter("block", typeof(string));
    
            var plot_TypeParameter = plot_Type != null ?
                new ObjectParameter("Plot_Type", plot_Type) :
                new ObjectParameter("Plot_Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_Receipt_Manual", amountParameter, amountinWordsParameter, bankParameter, ch_Pay_Draft_NoParameter, ch_Pay_Draft_DateParameter, branchParameter, contactParameter, father_NameParameter, file_Plot_NoParameter, nameParameter, paymentTypeParameter, plot_Total_AmountParameter, projectParameter, ratePerMarlaParameter, registeration_NoParameter, sizeParameter, typeParameter, tokenParameter, useridParameter, receNoParameter, dateParameter, devcharParameter, fileplotnumberParameter, blockParameter, plot_TypeParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_Receipt_UpdateRequest(string bank, string ch_Pay_Draft_No, Nullable<System.DateTime> ch_Pay_Draft_Date, Nullable<long> userid, string text, Nullable<long> receiptid, string status, string paymentType)
        {
            var bankParameter = bank != null ?
                new ObjectParameter("Bank", bank) :
                new ObjectParameter("Bank", typeof(string));
    
            var ch_Pay_Draft_NoParameter = ch_Pay_Draft_No != null ?
                new ObjectParameter("Ch_Pay_Draft_No", ch_Pay_Draft_No) :
                new ObjectParameter("Ch_Pay_Draft_No", typeof(string));
    
            var ch_Pay_Draft_DateParameter = ch_Pay_Draft_Date.HasValue ?
                new ObjectParameter("Ch_Pay_Draft_Date", ch_Pay_Draft_Date) :
                new ObjectParameter("Ch_Pay_Draft_Date", typeof(System.DateTime));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var textParameter = text != null ?
                new ObjectParameter("text", text) :
                new ObjectParameter("text", typeof(string));
    
            var receiptidParameter = receiptid.HasValue ?
                new ObjectParameter("receiptid", receiptid) :
                new ObjectParameter("receiptid", typeof(long));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var paymentTypeParameter = paymentType != null ?
                new ObjectParameter("paymentType", paymentType) :
                new ObjectParameter("paymentType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_Receipt_UpdateRequest", bankParameter, ch_Pay_Draft_NoParameter, ch_Pay_Draft_DateParameter, useridParameter, textParameter, receiptidParameter, statusParameter, paymentTypeParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Sp_Add_ReceiptAdjust(Nullable<long> receid, string reason, string payment, Nullable<long> userid, string from, string to, Nullable<long> to_Id, string to_Name, string block, string module, string frommod, string tomode)
        {
            var receidParameter = receid.HasValue ?
                new ObjectParameter("receid", receid) :
                new ObjectParameter("receid", typeof(long));
    
            var reasonParameter = reason != null ?
                new ObjectParameter("reason", reason) :
                new ObjectParameter("reason", typeof(string));
    
            var paymentParameter = payment != null ?
                new ObjectParameter("payment", payment) :
                new ObjectParameter("payment", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var fromParameter = from != null ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(string));
    
            var toParameter = to != null ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(string));
    
            var to_IdParameter = to_Id.HasValue ?
                new ObjectParameter("to_Id", to_Id) :
                new ObjectParameter("to_Id", typeof(long));
    
            var to_NameParameter = to_Name != null ?
                new ObjectParameter("to_Name", to_Name) :
                new ObjectParameter("to_Name", typeof(string));
    
            var blockParameter = block != null ?
                new ObjectParameter("block", block) :
                new ObjectParameter("block", typeof(string));
    
            var moduleParameter = module != null ?
                new ObjectParameter("module", module) :
                new ObjectParameter("module", typeof(string));
    
            var frommodParameter = frommod != null ?
                new ObjectParameter("frommod", frommod) :
                new ObjectParameter("frommod", typeof(string));
    
            var tomodeParameter = tomode != null ?
                new ObjectParameter("tomode", tomode) :
                new ObjectParameter("tomode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Sp_Add_ReceiptAdjust", receidParameter, reasonParameter, paymentParameter, useridParameter, fromParameter, toParameter, to_IdParameter, to_NameParameter, blockParameter, moduleParameter, frommodParameter, tomodeParameter);
        }
    
        public virtual int Sp_Add_ReminderComment(Nullable<long> remId, string comment, string type, Nullable<long> userid)
        {
            var remIdParameter = remId.HasValue ?
                new ObjectParameter("remId", remId) :
                new ObjectParameter("remId", typeof(long));
    
            var commentParameter = comment != null ?
                new ObjectParameter("comment", comment) :
                new ObjectParameter("comment", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_ReminderComment", remIdParameter, commentParameter, typeParameter, useridParameter);
        }
    
        public virtual int Sp_Add_Rental(string name, string father_Husband, string cNIC_NICOP, string mobile_1, string mobile_2, string phone_Office, string email, string postal_Address, string residential_Address, string occupation, string nationality, Nullable<System.DateTime> date_Of_Birth, string rental_DateTime, string rental_Close_DateTime, string previous_Rental_Info, string current_Rental_Info, string residence_Time, string qualification, Nullable<int> total_Family_Memebers, Nullable<int> gents, Nullable<int> ladies, Nullable<int> children, string car_Arms_Passport_No, string floor, Nullable<long> plot_Id, Nullable<long> userid)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var father_HusbandParameter = father_Husband != null ?
                new ObjectParameter("Father_Husband", father_Husband) :
                new ObjectParameter("Father_Husband", typeof(string));
    
            var cNIC_NICOPParameter = cNIC_NICOP != null ?
                new ObjectParameter("CNIC_NICOP", cNIC_NICOP) :
                new ObjectParameter("CNIC_NICOP", typeof(string));
    
            var mobile_1Parameter = mobile_1 != null ?
                new ObjectParameter("Mobile_1", mobile_1) :
                new ObjectParameter("Mobile_1", typeof(string));
    
            var mobile_2Parameter = mobile_2 != null ?
                new ObjectParameter("Mobile_2", mobile_2) :
                new ObjectParameter("Mobile_2", typeof(string));
    
            var phone_OfficeParameter = phone_Office != null ?
                new ObjectParameter("Phone_Office", phone_Office) :
                new ObjectParameter("Phone_Office", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var postal_AddressParameter = postal_Address != null ?
                new ObjectParameter("Postal_Address", postal_Address) :
                new ObjectParameter("Postal_Address", typeof(string));
    
            var residential_AddressParameter = residential_Address != null ?
                new ObjectParameter("Residential_Address", residential_Address) :
                new ObjectParameter("Residential_Address", typeof(string));
    
            var occupationParameter = occupation != null ?
                new ObjectParameter("Occupation", occupation) :
                new ObjectParameter("Occupation", typeof(string));
    
            var nationalityParameter = nationality != null ?
                new ObjectParameter("Nationality", nationality) :
                new ObjectParameter("Nationality", typeof(string));
    
            var date_Of_BirthParameter = date_Of_Birth.HasValue ?
                new ObjectParameter("Date_Of_Birth", date_Of_Birth) :
                new ObjectParameter("Date_Of_Birth", typeof(System.DateTime));
    
            var rental_DateTimeParameter = rental_DateTime != null ?
                new ObjectParameter("Rental_DateTime", rental_DateTime) :
                new ObjectParameter("Rental_DateTime", typeof(string));
    
            var rental_Close_DateTimeParameter = rental_Close_DateTime != null ?
                new ObjectParameter("Rental_Close_DateTime", rental_Close_DateTime) :
                new ObjectParameter("Rental_Close_DateTime", typeof(string));
    
            var previous_Rental_InfoParameter = previous_Rental_Info != null ?
                new ObjectParameter("Previous_Rental_Info", previous_Rental_Info) :
                new ObjectParameter("Previous_Rental_Info", typeof(string));
    
            var current_Rental_InfoParameter = current_Rental_Info != null ?
                new ObjectParameter("Current_Rental_Info", current_Rental_Info) :
                new ObjectParameter("Current_Rental_Info", typeof(string));
    
            var residence_TimeParameter = residence_Time != null ?
                new ObjectParameter("Residence_Time", residence_Time) :
                new ObjectParameter("Residence_Time", typeof(string));
    
            var qualificationParameter = qualification != null ?
                new ObjectParameter("Qualification", qualification) :
                new ObjectParameter("Qualification", typeof(string));
    
            var total_Family_MemebersParameter = total_Family_Memebers.HasValue ?
                new ObjectParameter("Total_Family_Memebers", total_Family_Memebers) :
                new ObjectParameter("Total_Family_Memebers", typeof(int));
    
            var gentsParameter = gents.HasValue ?
                new ObjectParameter("Gents", gents) :
                new ObjectParameter("Gents", typeof(int));
    
            var ladiesParameter = ladies.HasValue ?
                new ObjectParameter("Ladies", ladies) :
                new ObjectParameter("Ladies", typeof(int));
    
            var childrenParameter = children.HasValue ?
                new ObjectParameter("Children", children) :
                new ObjectParameter("Children", typeof(int));
    
            var car_Arms_Passport_NoParameter = car_Arms_Passport_No != null ?
                new ObjectParameter("Car_Arms_Passport_No", car_Arms_Passport_No) :
                new ObjectParameter("Car_Arms_Passport_No", typeof(string));
    
            var floorParameter = floor != null ?
                new ObjectParameter("Floor", floor) :
                new ObjectParameter("Floor", typeof(string));
    
            var plot_IdParameter = plot_Id.HasValue ?
                new ObjectParameter("Plot_Id", plot_Id) :
                new ObjectParameter("Plot_Id", typeof(long));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_Rental", nameParameter, father_HusbandParameter, cNIC_NICOPParameter, mobile_1Parameter, mobile_2Parameter, phone_OfficeParameter, emailParameter, postal_AddressParameter, residential_AddressParameter, occupationParameter, nationalityParameter, date_Of_BirthParameter, rental_DateTimeParameter, rental_Close_DateTimeParameter, previous_Rental_InfoParameter, current_Rental_InfoParameter, residence_TimeParameter, qualificationParameter, total_Family_MemebersParameter, gentsParameter, ladiesParameter, childrenParameter, car_Arms_Passport_NoParameter, floorParameter, plot_IdParameter, useridParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_Repository_File(string description, string ext, string filename, string module, Nullable<long> module_Id, string path, Nullable<long> parent, Nullable<long> uploadedBy, Nullable<int> version)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var extParameter = ext != null ?
                new ObjectParameter("Ext", ext) :
                new ObjectParameter("Ext", typeof(string));
    
            var filenameParameter = filename != null ?
                new ObjectParameter("Filename", filename) :
                new ObjectParameter("Filename", typeof(string));
    
            var moduleParameter = module != null ?
                new ObjectParameter("Module", module) :
                new ObjectParameter("Module", typeof(string));
    
            var module_IdParameter = module_Id.HasValue ?
                new ObjectParameter("Module_Id", module_Id) :
                new ObjectParameter("Module_Id", typeof(long));
    
            var pathParameter = path != null ?
                new ObjectParameter("path", path) :
                new ObjectParameter("path", typeof(string));
    
            var parentParameter = parent.HasValue ?
                new ObjectParameter("Parent", parent) :
                new ObjectParameter("Parent", typeof(long));
    
            var uploadedByParameter = uploadedBy.HasValue ?
                new ObjectParameter("UploadedBy", uploadedBy) :
                new ObjectParameter("UploadedBy", typeof(long));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_Repository_File", descriptionParameter, extParameter, filenameParameter, moduleParameter, module_IdParameter, pathParameter, parentParameter, uploadedByParameter, versionParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Sp_Add_Role(string role, string group)
        {
            var roleParameter = role != null ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(string));
    
            var groupParameter = group != null ?
                new ObjectParameter("group", group) :
                new ObjectParameter("group", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Sp_Add_Role", roleParameter, groupParameter);
        }
    
        public virtual int Sp_Add_Salaries_Cash()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_Salaries_Cash");
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_Salary(Nullable<long> emp_Id, string employeeName, string employeeDesignation, Nullable<decimal> total_Allownces, string employee_code, string cNIN, Nullable<decimal> basic_salary, Nullable<decimal> stipend, Nullable<long> no_Of_Days, Nullable<decimal> deductions, Nullable<System.DateTime> emp_Date_Of_Joining, string email, Nullable<decimal> advance, string details, Nullable<long> extra_days, Nullable<int> bankHead)
        {
            var emp_IdParameter = emp_Id.HasValue ?
                new ObjectParameter("Emp_Id", emp_Id) :
                new ObjectParameter("Emp_Id", typeof(long));
    
            var employeeNameParameter = employeeName != null ?
                new ObjectParameter("EmployeeName", employeeName) :
                new ObjectParameter("EmployeeName", typeof(string));
    
            var employeeDesignationParameter = employeeDesignation != null ?
                new ObjectParameter("EmployeeDesignation", employeeDesignation) :
                new ObjectParameter("EmployeeDesignation", typeof(string));
    
            var total_AllowncesParameter = total_Allownces.HasValue ?
                new ObjectParameter("Total_Allownces", total_Allownces) :
                new ObjectParameter("Total_Allownces", typeof(decimal));
    
            var employee_codeParameter = employee_code != null ?
                new ObjectParameter("Employee_code", employee_code) :
                new ObjectParameter("Employee_code", typeof(string));
    
            var cNINParameter = cNIN != null ?
                new ObjectParameter("CNIN", cNIN) :
                new ObjectParameter("CNIN", typeof(string));
    
            var basic_salaryParameter = basic_salary.HasValue ?
                new ObjectParameter("Basic_salary", basic_salary) :
                new ObjectParameter("Basic_salary", typeof(decimal));
    
            var stipendParameter = stipend.HasValue ?
                new ObjectParameter("Stipend", stipend) :
                new ObjectParameter("Stipend", typeof(decimal));
    
            var no_Of_DaysParameter = no_Of_Days.HasValue ?
                new ObjectParameter("No_Of_Days", no_Of_Days) :
                new ObjectParameter("No_Of_Days", typeof(long));
    
            var deductionsParameter = deductions.HasValue ?
                new ObjectParameter("Deductions", deductions) :
                new ObjectParameter("Deductions", typeof(decimal));
    
            var emp_Date_Of_JoiningParameter = emp_Date_Of_Joining.HasValue ?
                new ObjectParameter("Emp_Date_Of_Joining", emp_Date_Of_Joining) :
                new ObjectParameter("Emp_Date_Of_Joining", typeof(System.DateTime));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var advanceParameter = advance.HasValue ?
                new ObjectParameter("advance", advance) :
                new ObjectParameter("advance", typeof(decimal));
    
            var detailsParameter = details != null ?
                new ObjectParameter("details", details) :
                new ObjectParameter("details", typeof(string));
    
            var extra_daysParameter = extra_days.HasValue ?
                new ObjectParameter("extra_days", extra_days) :
                new ObjectParameter("extra_days", typeof(long));
    
            var bankHeadParameter = bankHead.HasValue ?
                new ObjectParameter("bankHead", bankHead) :
                new ObjectParameter("bankHead", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_Salary", emp_IdParameter, employeeNameParameter, employeeDesignationParameter, total_AllowncesParameter, employee_codeParameter, cNINParameter, basic_salaryParameter, stipendParameter, no_Of_DaysParameter, deductionsParameter, emp_Date_Of_JoiningParameter, emailParameter, advanceParameter, detailsParameter, extra_daysParameter, bankHeadParameter);
        }
    
        public virtual int Sp_Add_Salary_Details(string des, Nullable<decimal> amt, Nullable<long> salaryid, string type, Nullable<long> userid)
        {
            var desParameter = des != null ?
                new ObjectParameter("des", des) :
                new ObjectParameter("des", typeof(string));
    
            var amtParameter = amt.HasValue ?
                new ObjectParameter("amt", amt) :
                new ObjectParameter("amt", typeof(decimal));
    
            var salaryidParameter = salaryid.HasValue ?
                new ObjectParameter("salaryid", salaryid) :
                new ObjectParameter("salaryid", typeof(long));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_Salary_Details", desParameter, amtParameter, salaryidParameter, typeParameter, useridParameter);
        }
    
        public virtual int Sp_Add_Salary_Log(string type, Nullable<long> user_Id, string iP, Nullable<System.DateTime> date, Nullable<System.DateTime> search_Sallary_Date, string updated_Status_Name, Nullable<long> sallary_Id)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var user_IdParameter = user_Id.HasValue ?
                new ObjectParameter("User_Id", user_Id) :
                new ObjectParameter("User_Id", typeof(long));
    
            var iPParameter = iP != null ?
                new ObjectParameter("IP", iP) :
                new ObjectParameter("IP", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var search_Sallary_DateParameter = search_Sallary_Date.HasValue ?
                new ObjectParameter("Search_Sallary_Date", search_Sallary_Date) :
                new ObjectParameter("Search_Sallary_Date", typeof(System.DateTime));
    
            var updated_Status_NameParameter = updated_Status_Name != null ?
                new ObjectParameter("Updated_Status_Name", updated_Status_Name) :
                new ObjectParameter("Updated_Status_Name", typeof(string));
    
            var sallary_IdParameter = sallary_Id.HasValue ?
                new ObjectParameter("Sallary_Id", sallary_Id) :
                new ObjectParameter("Sallary_Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_Salary_Log", typeParameter, user_IdParameter, iPParameter, dateParameter, search_Sallary_DateParameter, updated_Status_NameParameter, sallary_IdParameter);
        }
    
        public virtual ObjectResult<string> Sp_Add_SAM_Deal_Number(string com)
        {
            var comParameter = com != null ?
                new ObjectParameter("com", com) :
                new ObjectParameter("com", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Sp_Add_SAM_Deal_Number", comParameter);
        }
    
        public virtual ObjectResult<Sp_Add_SAM_Receipt_Result> Sp_Add_SAM_Receipt(Nullable<decimal> amount, string amountinWords, string bank, string ch_Pay_Draft_No, Nullable<System.DateTime> ch_Pay_Draft_Date, string branch, string contact, string father_Name, Nullable<long> file_Plot_No, string name, string paymentType, Nullable<decimal> plot_Total_Amount, string project, Nullable<decimal> ratePerMarla, string size, string type, Nullable<long> token, Nullable<long> userid, string text, Nullable<System.DateTime> expdate, string mod, string devchar, string filePlotNumber, string block, string comp, Nullable<long> groupId)
        {
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var amountinWordsParameter = amountinWords != null ?
                new ObjectParameter("AmountinWords", amountinWords) :
                new ObjectParameter("AmountinWords", typeof(string));
    
            var bankParameter = bank != null ?
                new ObjectParameter("Bank", bank) :
                new ObjectParameter("Bank", typeof(string));
    
            var ch_Pay_Draft_NoParameter = ch_Pay_Draft_No != null ?
                new ObjectParameter("Ch_Pay_Draft_No", ch_Pay_Draft_No) :
                new ObjectParameter("Ch_Pay_Draft_No", typeof(string));
    
            var ch_Pay_Draft_DateParameter = ch_Pay_Draft_Date.HasValue ?
                new ObjectParameter("Ch_Pay_Draft_Date", ch_Pay_Draft_Date) :
                new ObjectParameter("Ch_Pay_Draft_Date", typeof(System.DateTime));
    
            var branchParameter = branch != null ?
                new ObjectParameter("Branch", branch) :
                new ObjectParameter("Branch", typeof(string));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var father_NameParameter = father_Name != null ?
                new ObjectParameter("Father_Name", father_Name) :
                new ObjectParameter("Father_Name", typeof(string));
    
            var file_Plot_NoParameter = file_Plot_No.HasValue ?
                new ObjectParameter("File_Plot_No", file_Plot_No) :
                new ObjectParameter("File_Plot_No", typeof(long));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var paymentTypeParameter = paymentType != null ?
                new ObjectParameter("PaymentType", paymentType) :
                new ObjectParameter("PaymentType", typeof(string));
    
            var plot_Total_AmountParameter = plot_Total_Amount.HasValue ?
                new ObjectParameter("Plot_Total_Amount", plot_Total_Amount) :
                new ObjectParameter("Plot_Total_Amount", typeof(decimal));
    
            var projectParameter = project != null ?
                new ObjectParameter("Project", project) :
                new ObjectParameter("Project", typeof(string));
    
            var ratePerMarlaParameter = ratePerMarla.HasValue ?
                new ObjectParameter("RatePerMarla", ratePerMarla) :
                new ObjectParameter("RatePerMarla", typeof(decimal));
    
            var sizeParameter = size != null ?
                new ObjectParameter("Size", size) :
                new ObjectParameter("Size", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var tokenParameter = token.HasValue ?
                new ObjectParameter("Token", token) :
                new ObjectParameter("Token", typeof(long));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var textParameter = text != null ?
                new ObjectParameter("text", text) :
                new ObjectParameter("text", typeof(string));
    
            var expdateParameter = expdate.HasValue ?
                new ObjectParameter("expdate", expdate) :
                new ObjectParameter("expdate", typeof(System.DateTime));
    
            var modParameter = mod != null ?
                new ObjectParameter("mod", mod) :
                new ObjectParameter("mod", typeof(string));
    
            var devcharParameter = devchar != null ?
                new ObjectParameter("devchar", devchar) :
                new ObjectParameter("devchar", typeof(string));
    
            var filePlotNumberParameter = filePlotNumber != null ?
                new ObjectParameter("FilePlotNumber", filePlotNumber) :
                new ObjectParameter("FilePlotNumber", typeof(string));
    
            var blockParameter = block != null ?
                new ObjectParameter("block", block) :
                new ObjectParameter("block", typeof(string));
    
            var compParameter = comp != null ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(string));
    
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("GroupId", groupId) :
                new ObjectParameter("GroupId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Add_SAM_Receipt_Result>("Sp_Add_SAM_Receipt", amountParameter, amountinWordsParameter, bankParameter, ch_Pay_Draft_NoParameter, ch_Pay_Draft_DateParameter, branchParameter, contactParameter, father_NameParameter, file_Plot_NoParameter, nameParameter, paymentTypeParameter, plot_Total_AmountParameter, projectParameter, ratePerMarlaParameter, sizeParameter, typeParameter, tokenParameter, useridParameter, textParameter, expdateParameter, modParameter, devcharParameter, filePlotNumberParameter, blockParameter, compParameter, groupIdParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_SAM_Voucher_Req(Nullable<decimal> amount, string amountinWords, Nullable<long> requestedBy, string name, string father_Name, string block, string file_Plot_Number, Nullable<long> lead_Id, Nullable<decimal> ratePerMarla, string developmentCharges, string file_plot_size, Nullable<decimal> totalprice, string contact, string address, string descrip, string mod, string comp)
        {
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var amountinWordsParameter = amountinWords != null ?
                new ObjectParameter("AmountinWords", amountinWords) :
                new ObjectParameter("AmountinWords", typeof(string));
    
            var requestedByParameter = requestedBy.HasValue ?
                new ObjectParameter("RequestedBy", requestedBy) :
                new ObjectParameter("RequestedBy", typeof(long));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var father_NameParameter = father_Name != null ?
                new ObjectParameter("Father_Name", father_Name) :
                new ObjectParameter("Father_Name", typeof(string));
    
            var blockParameter = block != null ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(string));
    
            var file_Plot_NumberParameter = file_Plot_Number != null ?
                new ObjectParameter("File_Plot_Number", file_Plot_Number) :
                new ObjectParameter("File_Plot_Number", typeof(string));
    
            var lead_IdParameter = lead_Id.HasValue ?
                new ObjectParameter("Lead_Id", lead_Id) :
                new ObjectParameter("Lead_Id", typeof(long));
    
            var ratePerMarlaParameter = ratePerMarla.HasValue ?
                new ObjectParameter("RatePerMarla", ratePerMarla) :
                new ObjectParameter("RatePerMarla", typeof(decimal));
    
            var developmentChargesParameter = developmentCharges != null ?
                new ObjectParameter("DevelopmentCharges", developmentCharges) :
                new ObjectParameter("DevelopmentCharges", typeof(string));
    
            var file_plot_sizeParameter = file_plot_size != null ?
                new ObjectParameter("file_plot_size", file_plot_size) :
                new ObjectParameter("file_plot_size", typeof(string));
    
            var totalpriceParameter = totalprice.HasValue ?
                new ObjectParameter("Totalprice", totalprice) :
                new ObjectParameter("Totalprice", typeof(decimal));
    
            var contactParameter = contact != null ?
                new ObjectParameter("contact", contact) :
                new ObjectParameter("contact", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var descripParameter = descrip != null ?
                new ObjectParameter("descrip", descrip) :
                new ObjectParameter("descrip", typeof(string));
    
            var modParameter = mod != null ?
                new ObjectParameter("mod", mod) :
                new ObjectParameter("mod", typeof(string));
    
            var compParameter = comp != null ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_SAM_Voucher_Req", amountParameter, amountinWordsParameter, requestedByParameter, nameParameter, father_NameParameter, blockParameter, file_Plot_NumberParameter, lead_IdParameter, ratePerMarlaParameter, developmentChargesParameter, file_plot_sizeParameter, totalpriceParameter, contactParameter, addressParameter, descripParameter, modParameter, compParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Sp_Add_SecurityPrice(Nullable<long> block, Nullable<long> phase, Nullable<decimal> price)
        {
            var blockParameter = block.HasValue ?
                new ObjectParameter("block", block) :
                new ObjectParameter("block", typeof(long));
    
            var phaseParameter = phase.HasValue ?
                new ObjectParameter("phase", phase) :
                new ObjectParameter("phase", typeof(long));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Sp_Add_SecurityPrice", blockParameter, phaseParameter, priceParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Sp_Add_Seller_Data(string name, string cNIC, string mobileNo, string partyNo, string images)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var cNICParameter = cNIC != null ?
                new ObjectParameter("CNIC", cNIC) :
                new ObjectParameter("CNIC", typeof(string));
    
            var mobileNoParameter = mobileNo != null ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(string));
    
            var partyNoParameter = partyNo != null ?
                new ObjectParameter("PartyNo", partyNo) :
                new ObjectParameter("PartyNo", typeof(string));
    
            var imagesParameter = images != null ?
                new ObjectParameter("Images", images) :
                new ObjectParameter("Images", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Sp_Add_Seller_Data", nameParameter, cNICParameter, mobileNoParameter, partyNoParameter, imagesParameter);
        }
    
        public virtual ObjectResult<SP_Add_Ser_Bids_Result> SP_Add_Ser_Bids(string mats, Nullable<long> usrId, string reqStat)
        {
            var matsParameter = mats != null ?
                new ObjectParameter("Mats", mats) :
                new ObjectParameter("Mats", typeof(string));
    
            var usrIdParameter = usrId.HasValue ?
                new ObjectParameter("usrId", usrId) :
                new ObjectParameter("usrId", typeof(long));
    
            var reqStatParameter = reqStat != null ?
                new ObjectParameter("reqStat", reqStat) :
                new ObjectParameter("reqStat", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Add_Ser_Bids_Result>("SP_Add_Ser_Bids", matsParameter, usrIdParameter, reqStatParameter);
        }
    
        public virtual ObjectResult<Sp_Add_Service_Complet_Result> Sp_Add_Service_Complet(string items, Nullable<long> creatorId)
        {
            var itemsParameter = items != null ?
                new ObjectParameter("Items", items) :
                new ObjectParameter("Items", typeof(string));
    
            var creatorIdParameter = creatorId.HasValue ?
                new ObjectParameter("creatorId", creatorId) :
                new ObjectParameter("creatorId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Add_Service_Complet_Result>("Sp_Add_Service_Complet", itemsParameter, creatorIdParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Sp_Add_ServiceCharges(string name, Nullable<decimal> rate, string type, Nullable<int> plotsize)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("rate", rate) :
                new ObjectParameter("rate", typeof(decimal));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var plotsizeParameter = plotsize.HasValue ?
                new ObjectParameter("plotsize", plotsize) :
                new ObjectParameter("plotsize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Sp_Add_ServiceCharges", nameParameter, rateParameter, typeParameter, plotsizeParameter);
        }
    
        public virtual int SP_Add_ServiceCharges_PermissionRequests(string mats, Nullable<long> uid)
        {
            var matsParameter = mats != null ?
                new ObjectParameter("Mats", mats) :
                new ObjectParameter("Mats", typeof(string));
    
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Add_ServiceCharges_PermissionRequests", matsParameter, uidParameter);
        }
    
        public virtual ObjectResult<Sp_Add_ServiceRequisition_Result> Sp_Add_ServiceRequisition(string products, Nullable<long> prjId, Nullable<long> usrId)
        {
            var productsParameter = products != null ?
                new ObjectParameter("Products", products) :
                new ObjectParameter("Products", typeof(string));
    
            var prjIdParameter = prjId.HasValue ?
                new ObjectParameter("prjId", prjId) :
                new ObjectParameter("prjId", typeof(long));
    
            var usrIdParameter = usrId.HasValue ?
                new ObjectParameter("usrId", usrId) :
                new ObjectParameter("usrId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Add_ServiceRequisition_Result>("Sp_Add_ServiceRequisition", productsParameter, prjIdParameter, usrIdParameter);
        }
    
        public virtual int Sp_Add_SpeedFest(string address, string mobile, string name, string ticketNo, Nullable<long> userid)
        {
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var ticketNoParameter = ticketNo != null ?
                new ObjectParameter("TicketNo", ticketNo) :
                new ObjectParameter("TicketNo", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_SpeedFest", addressParameter, mobileParameter, nameParameter, ticketNoParameter, useridParameter);
        }
    
        public virtual ObjectResult<string> Sp_Add_Stockout_Multiple_Req(string mats, Nullable<long> usrId, Nullable<long> group, Nullable<long> prj, string prjName, Nullable<long> dep_id)
        {
            var matsParameter = mats != null ?
                new ObjectParameter("Mats", mats) :
                new ObjectParameter("Mats", typeof(string));
    
            var usrIdParameter = usrId.HasValue ?
                new ObjectParameter("usrId", usrId) :
                new ObjectParameter("usrId", typeof(long));
    
            var groupParameter = group.HasValue ?
                new ObjectParameter("group", group) :
                new ObjectParameter("group", typeof(long));
    
            var prjParameter = prj.HasValue ?
                new ObjectParameter("prj", prj) :
                new ObjectParameter("prj", typeof(long));
    
            var prjNameParameter = prjName != null ?
                new ObjectParameter("prjName", prjName) :
                new ObjectParameter("prjName", typeof(string));
    
            var dep_idParameter = dep_id.HasValue ?
                new ObjectParameter("dep_id", dep_id) :
                new ObjectParameter("dep_id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Sp_Add_Stockout_Multiple_Req", matsParameter, usrIdParameter, groupParameter, prjParameter, prjNameParameter, dep_idParameter);
        }
    
        public virtual ObjectResult<string> Sp_Add_Stockout_Req(string status, Nullable<long> group_Id, Nullable<long> issue_To, string issueTo_Name, Nullable<long> item_Id, Nullable<long> prj_Id, string prj_Name, Nullable<decimal> qty, Nullable<long> requested_By, Nullable<long> dep_Id)
        {
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var group_IdParameter = group_Id.HasValue ?
                new ObjectParameter("Group_Id", group_Id) :
                new ObjectParameter("Group_Id", typeof(long));
    
            var issue_ToParameter = issue_To.HasValue ?
                new ObjectParameter("Issue_To", issue_To) :
                new ObjectParameter("Issue_To", typeof(long));
    
            var issueTo_NameParameter = issueTo_Name != null ?
                new ObjectParameter("IssueTo_Name", issueTo_Name) :
                new ObjectParameter("IssueTo_Name", typeof(string));
    
            var item_IdParameter = item_Id.HasValue ?
                new ObjectParameter("Item_Id", item_Id) :
                new ObjectParameter("Item_Id", typeof(long));
    
            var prj_IdParameter = prj_Id.HasValue ?
                new ObjectParameter("Prj_Id", prj_Id) :
                new ObjectParameter("Prj_Id", typeof(long));
    
            var prj_NameParameter = prj_Name != null ?
                new ObjectParameter("Prj_Name", prj_Name) :
                new ObjectParameter("Prj_Name", typeof(string));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("Qty", qty) :
                new ObjectParameter("Qty", typeof(decimal));
    
            var requested_ByParameter = requested_By.HasValue ?
                new ObjectParameter("Requested_By", requested_By) :
                new ObjectParameter("Requested_By", typeof(long));
    
            var dep_IdParameter = dep_Id.HasValue ?
                new ObjectParameter("dep_Id", dep_Id) :
                new ObjectParameter("dep_Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Sp_Add_Stockout_Req", statusParameter, group_IdParameter, issue_ToParameter, issueTo_NameParameter, item_IdParameter, prj_IdParameter, prj_NameParameter, qtyParameter, requested_ByParameter, dep_IdParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Sp_Add_SubscribeServiceCharges(Nullable<long> plotid, Nullable<int> sc_id, string name)
        {
            var plotidParameter = plotid.HasValue ?
                new ObjectParameter("plotid", plotid) :
                new ObjectParameter("plotid", typeof(long));
    
            var sc_idParameter = sc_id.HasValue ?
                new ObjectParameter("sc_id", sc_id) :
                new ObjectParameter("sc_id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Sp_Add_SubscribeServiceCharges", plotidParameter, sc_idParameter, nameParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Sp_Add_SubscribeServiceCharges_Commercial(Nullable<long> plotid, Nullable<int> sc_id, string name)
        {
            var plotidParameter = plotid.HasValue ?
                new ObjectParameter("plotid", plotid) :
                new ObjectParameter("plotid", typeof(long));
    
            var sc_idParameter = sc_id.HasValue ?
                new ObjectParameter("sc_id", sc_id) :
                new ObjectParameter("sc_id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Sp_Add_SubscribeServiceCharges_Commercial", plotidParameter, sc_idParameter, nameParameter);
        }
    
        public virtual ObjectResult<Sp_Add_Ticket_Result> Sp_Add_Ticket(Nullable<long> assignedTo, Nullable<long> createdBy, string description, string dep, Nullable<int> dep_id, string title, Nullable<bool> cust, string name, string mobile, string address, Nullable<System.DateTime> deadline)
        {
            var assignedToParameter = assignedTo.HasValue ?
                new ObjectParameter("AssignedTo", assignedTo) :
                new ObjectParameter("AssignedTo", typeof(long));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(long));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var depParameter = dep != null ?
                new ObjectParameter("dep", dep) :
                new ObjectParameter("dep", typeof(string));
    
            var dep_idParameter = dep_id.HasValue ?
                new ObjectParameter("dep_id", dep_id) :
                new ObjectParameter("dep_id", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var custParameter = cust.HasValue ?
                new ObjectParameter("cust", cust) :
                new ObjectParameter("cust", typeof(bool));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var deadlineParameter = deadline.HasValue ?
                new ObjectParameter("deadline", deadline) :
                new ObjectParameter("deadline", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Add_Ticket_Result>("Sp_Add_Ticket", assignedToParameter, createdByParameter, descriptionParameter, depParameter, dep_idParameter, titleParameter, custParameter, nameParameter, mobileParameter, addressParameter, deadlineParameter);
        }
    
        public virtual int Sp_Add_Ticket_Comments(string comment, Nullable<long> ticket_Id, Nullable<long> userid, string type)
        {
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            var ticket_IdParameter = ticket_Id.HasValue ?
                new ObjectParameter("ticket_Id", ticket_Id) :
                new ObjectParameter("ticket_Id", typeof(long));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(long));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_Ticket_Comments", commentParameter, ticket_IdParameter, useridParameter, typeParameter);
        }
    
        public virtual ObjectResult<Sp_Add_Ticket_Customers_Result> Sp_Add_Ticket_Customers(string description, string dep, Nullable<int> dep_id, string title, Nullable<bool> cust, string name, string mobile, string address)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var depParameter = dep != null ?
                new ObjectParameter("dep", dep) :
                new ObjectParameter("dep", typeof(string));
    
            var dep_idParameter = dep_id.HasValue ?
                new ObjectParameter("dep_id", dep_id) :
                new ObjectParameter("dep_id", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var custParameter = cust.HasValue ?
                new ObjectParameter("cust", cust) :
                new ObjectParameter("cust", typeof(bool));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Add_Ticket_Customers_Result>("Sp_Add_Ticket_Customers", descriptionParameter, depParameter, dep_idParameter, titleParameter, custParameter, nameParameter, mobileParameter, addressParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Sp_Add_Ticket_Type(Nullable<int> dep_id, string title)
        {
            var dep_idParameter = dep_id.HasValue ?
                new ObjectParameter("dep_id", dep_id) :
                new ObjectParameter("dep_id", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Sp_Add_Ticket_Type", dep_idParameter, titleParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Sp_Add_TicketAttendee(Nullable<long> userid, Nullable<long> ticketid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var ticketidParameter = ticketid.HasValue ?
                new ObjectParameter("ticketid", ticketid) :
                new ObjectParameter("ticketid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Sp_Add_TicketAttendee", useridParameter, ticketidParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_Transfer_Commercial(Nullable<long> groupNo)
        {
            var groupNoParameter = groupNo.HasValue ?
                new ObjectParameter("groupNo", groupNo) :
                new ObjectParameter("groupNo", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_Transfer_Commercial", groupNoParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_Transfer_Plot(Nullable<long> groupNo)
        {
            var groupNoParameter = groupNo.HasValue ?
                new ObjectParameter("groupNo", groupNo) :
                new ObjectParameter("groupNo", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_Transfer_Plot", groupNoParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_TransferRequestCommercial(string plot_Size, string name, string father_Husband, string postal_Address, string residential_Address, string phone_Office, string residential, string mobile_1, string mobile_2, string email, string occupation, string nationality, string date_Of_Birth, string cNIC_NICOP, string nominee_Name, string nominee_Relation, string nominee_Address, string nominee_CNIC_NICOP, Nullable<long> plot_id, string city, Nullable<decimal> plt_pric, Nullable<bool> deal, Nullable<bool> emp, Nullable<long> transactionid, Nullable<bool> isFIler, Nullable<bool> buyerTaxExe, string buyerTaxExeRzn, Nullable<bool> sellerExe, string dealDealer, string sellExeRzn, string receNum, Nullable<long> grpTag, Nullable<bool> compProperty)
        {
            var plot_SizeParameter = plot_Size != null ?
                new ObjectParameter("Plot_Size", plot_Size) :
                new ObjectParameter("Plot_Size", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var father_HusbandParameter = father_Husband != null ?
                new ObjectParameter("Father_Husband", father_Husband) :
                new ObjectParameter("Father_Husband", typeof(string));
    
            var postal_AddressParameter = postal_Address != null ?
                new ObjectParameter("Postal_Address", postal_Address) :
                new ObjectParameter("Postal_Address", typeof(string));
    
            var residential_AddressParameter = residential_Address != null ?
                new ObjectParameter("Residential_Address", residential_Address) :
                new ObjectParameter("Residential_Address", typeof(string));
    
            var phone_OfficeParameter = phone_Office != null ?
                new ObjectParameter("Phone_Office", phone_Office) :
                new ObjectParameter("Phone_Office", typeof(string));
    
            var residentialParameter = residential != null ?
                new ObjectParameter("Residential", residential) :
                new ObjectParameter("Residential", typeof(string));
    
            var mobile_1Parameter = mobile_1 != null ?
                new ObjectParameter("Mobile_1", mobile_1) :
                new ObjectParameter("Mobile_1", typeof(string));
    
            var mobile_2Parameter = mobile_2 != null ?
                new ObjectParameter("Mobile_2", mobile_2) :
                new ObjectParameter("Mobile_2", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var occupationParameter = occupation != null ?
                new ObjectParameter("Occupation", occupation) :
                new ObjectParameter("Occupation", typeof(string));
    
            var nationalityParameter = nationality != null ?
                new ObjectParameter("Nationality", nationality) :
                new ObjectParameter("Nationality", typeof(string));
    
            var date_Of_BirthParameter = date_Of_Birth != null ?
                new ObjectParameter("Date_Of_Birth", date_Of_Birth) :
                new ObjectParameter("Date_Of_Birth", typeof(string));
    
            var cNIC_NICOPParameter = cNIC_NICOP != null ?
                new ObjectParameter("CNIC_NICOP", cNIC_NICOP) :
                new ObjectParameter("CNIC_NICOP", typeof(string));
    
            var nominee_NameParameter = nominee_Name != null ?
                new ObjectParameter("Nominee_Name", nominee_Name) :
                new ObjectParameter("Nominee_Name", typeof(string));
    
            var nominee_RelationParameter = nominee_Relation != null ?
                new ObjectParameter("Nominee_Relation", nominee_Relation) :
                new ObjectParameter("Nominee_Relation", typeof(string));
    
            var nominee_AddressParameter = nominee_Address != null ?
                new ObjectParameter("Nominee_Address", nominee_Address) :
                new ObjectParameter("Nominee_Address", typeof(string));
    
            var nominee_CNIC_NICOPParameter = nominee_CNIC_NICOP != null ?
                new ObjectParameter("Nominee_CNIC_NICOP", nominee_CNIC_NICOP) :
                new ObjectParameter("Nominee_CNIC_NICOP", typeof(string));
    
            var plot_idParameter = plot_id.HasValue ?
                new ObjectParameter("plot_id", plot_id) :
                new ObjectParameter("plot_id", typeof(long));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var plt_pricParameter = plt_pric.HasValue ?
                new ObjectParameter("plt_pric", plt_pric) :
                new ObjectParameter("plt_pric", typeof(decimal));
    
            var dealParameter = deal.HasValue ?
                new ObjectParameter("deal", deal) :
                new ObjectParameter("deal", typeof(bool));
    
            var empParameter = emp.HasValue ?
                new ObjectParameter("emp", emp) :
                new ObjectParameter("emp", typeof(bool));
    
            var transactionidParameter = transactionid.HasValue ?
                new ObjectParameter("transactionid", transactionid) :
                new ObjectParameter("transactionid", typeof(long));
    
            var isFIlerParameter = isFIler.HasValue ?
                new ObjectParameter("isFIler", isFIler) :
                new ObjectParameter("isFIler", typeof(bool));
    
            var buyerTaxExeParameter = buyerTaxExe.HasValue ?
                new ObjectParameter("buyerTaxExe", buyerTaxExe) :
                new ObjectParameter("buyerTaxExe", typeof(bool));
    
            var buyerTaxExeRznParameter = buyerTaxExeRzn != null ?
                new ObjectParameter("buyerTaxExeRzn", buyerTaxExeRzn) :
                new ObjectParameter("buyerTaxExeRzn", typeof(string));
    
            var sellerExeParameter = sellerExe.HasValue ?
                new ObjectParameter("sellerExe", sellerExe) :
                new ObjectParameter("sellerExe", typeof(bool));
    
            var dealDealerParameter = dealDealer != null ?
                new ObjectParameter("dealDealer", dealDealer) :
                new ObjectParameter("dealDealer", typeof(string));
    
            var sellExeRznParameter = sellExeRzn != null ?
                new ObjectParameter("sellExeRzn", sellExeRzn) :
                new ObjectParameter("sellExeRzn", typeof(string));
    
            var receNumParameter = receNum != null ?
                new ObjectParameter("receNum", receNum) :
                new ObjectParameter("receNum", typeof(string));
    
            var grpTagParameter = grpTag.HasValue ?
                new ObjectParameter("grpTag", grpTag) :
                new ObjectParameter("grpTag", typeof(long));
    
            var compPropertyParameter = compProperty.HasValue ?
                new ObjectParameter("CompProperty", compProperty) :
                new ObjectParameter("CompProperty", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_TransferRequestCommercial", plot_SizeParameter, nameParameter, father_HusbandParameter, postal_AddressParameter, residential_AddressParameter, phone_OfficeParameter, residentialParameter, mobile_1Parameter, mobile_2Parameter, emailParameter, occupationParameter, nationalityParameter, date_Of_BirthParameter, cNIC_NICOPParameter, nominee_NameParameter, nominee_RelationParameter, nominee_AddressParameter, nominee_CNIC_NICOPParameter, plot_idParameter, cityParameter, plt_pricParameter, dealParameter, empParameter, transactionidParameter, isFIlerParameter, buyerTaxExeParameter, buyerTaxExeRznParameter, sellerExeParameter, dealDealerParameter, sellExeRznParameter, receNumParameter, grpTagParameter, compPropertyParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_TransferRequestFile(string plot_Size, string name, string father_Husband, string postal_Address, string residential_Address, string phone_Office, string residential, string mobile_1, string mobile_2, string email, string occupation, string nationality, string date_Of_Birth, string cNIC_NICOP, string nominee_Name, string nominee_Relation, string nominee_Address, string nominee_CNIC_NICOP, Nullable<long> file_Form_Id, string city, Nullable<long> transactionId, string rec_no, string dealingDealership, Nullable<long> grp, Nullable<bool> compProp)
        {
            var plot_SizeParameter = plot_Size != null ?
                new ObjectParameter("Plot_Size", plot_Size) :
                new ObjectParameter("Plot_Size", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var father_HusbandParameter = father_Husband != null ?
                new ObjectParameter("Father_Husband", father_Husband) :
                new ObjectParameter("Father_Husband", typeof(string));
    
            var postal_AddressParameter = postal_Address != null ?
                new ObjectParameter("Postal_Address", postal_Address) :
                new ObjectParameter("Postal_Address", typeof(string));
    
            var residential_AddressParameter = residential_Address != null ?
                new ObjectParameter("Residential_Address", residential_Address) :
                new ObjectParameter("Residential_Address", typeof(string));
    
            var phone_OfficeParameter = phone_Office != null ?
                new ObjectParameter("Phone_Office", phone_Office) :
                new ObjectParameter("Phone_Office", typeof(string));
    
            var residentialParameter = residential != null ?
                new ObjectParameter("Residential", residential) :
                new ObjectParameter("Residential", typeof(string));
    
            var mobile_1Parameter = mobile_1 != null ?
                new ObjectParameter("Mobile_1", mobile_1) :
                new ObjectParameter("Mobile_1", typeof(string));
    
            var mobile_2Parameter = mobile_2 != null ?
                new ObjectParameter("Mobile_2", mobile_2) :
                new ObjectParameter("Mobile_2", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var occupationParameter = occupation != null ?
                new ObjectParameter("Occupation", occupation) :
                new ObjectParameter("Occupation", typeof(string));
    
            var nationalityParameter = nationality != null ?
                new ObjectParameter("Nationality", nationality) :
                new ObjectParameter("Nationality", typeof(string));
    
            var date_Of_BirthParameter = date_Of_Birth != null ?
                new ObjectParameter("Date_Of_Birth", date_Of_Birth) :
                new ObjectParameter("Date_Of_Birth", typeof(string));
    
            var cNIC_NICOPParameter = cNIC_NICOP != null ?
                new ObjectParameter("CNIC_NICOP", cNIC_NICOP) :
                new ObjectParameter("CNIC_NICOP", typeof(string));
    
            var nominee_NameParameter = nominee_Name != null ?
                new ObjectParameter("Nominee_Name", nominee_Name) :
                new ObjectParameter("Nominee_Name", typeof(string));
    
            var nominee_RelationParameter = nominee_Relation != null ?
                new ObjectParameter("Nominee_Relation", nominee_Relation) :
                new ObjectParameter("Nominee_Relation", typeof(string));
    
            var nominee_AddressParameter = nominee_Address != null ?
                new ObjectParameter("Nominee_Address", nominee_Address) :
                new ObjectParameter("Nominee_Address", typeof(string));
    
            var nominee_CNIC_NICOPParameter = nominee_CNIC_NICOP != null ?
                new ObjectParameter("Nominee_CNIC_NICOP", nominee_CNIC_NICOP) :
                new ObjectParameter("Nominee_CNIC_NICOP", typeof(string));
    
            var file_Form_IdParameter = file_Form_Id.HasValue ?
                new ObjectParameter("File_Form_Id", file_Form_Id) :
                new ObjectParameter("File_Form_Id", typeof(long));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var transactionIdParameter = transactionId.HasValue ?
                new ObjectParameter("TransactionId", transactionId) :
                new ObjectParameter("TransactionId", typeof(long));
    
            var rec_noParameter = rec_no != null ?
                new ObjectParameter("rec_no", rec_no) :
                new ObjectParameter("rec_no", typeof(string));
    
            var dealingDealershipParameter = dealingDealership != null ?
                new ObjectParameter("dealingDealership", dealingDealership) :
                new ObjectParameter("dealingDealership", typeof(string));
    
            var grpParameter = grp.HasValue ?
                new ObjectParameter("grp", grp) :
                new ObjectParameter("grp", typeof(long));
    
            var compPropParameter = compProp.HasValue ?
                new ObjectParameter("compProp", compProp) :
                new ObjectParameter("compProp", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_TransferRequestFile", plot_SizeParameter, nameParameter, father_HusbandParameter, postal_AddressParameter, residential_AddressParameter, phone_OfficeParameter, residentialParameter, mobile_1Parameter, mobile_2Parameter, emailParameter, occupationParameter, nationalityParameter, date_Of_BirthParameter, cNIC_NICOPParameter, nominee_NameParameter, nominee_RelationParameter, nominee_AddressParameter, nominee_CNIC_NICOPParameter, file_Form_IdParameter, cityParameter, transactionIdParameter, rec_noParameter, dealingDealershipParameter, grpParameter, compPropParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_TransferRequestPlot(string plot_Size, string name, string father_Husband, string postal_Address, string residential_Address, string phone_Office, string residential, string mobile_1, string mobile_2, string email, string occupation, string nationality, string date_Of_Birth, string cNIC_NICOP, string nominee_Name, string nominee_Relation, string nominee_Address, string nominee_CNIC_NICOP, Nullable<long> plot_id, string city, Nullable<decimal> plt_pric, Nullable<bool> deal, Nullable<bool> emp, Nullable<long> transactionid, Nullable<bool> isFIler, Nullable<bool> buyerTaxExe, string buyerTaxExeRzn, Nullable<bool> sellerExe, string dealDealer, string sellExeRzn, string receNum, Nullable<long> grpTag, Nullable<bool> compProperty)
        {
            var plot_SizeParameter = plot_Size != null ?
                new ObjectParameter("Plot_Size", plot_Size) :
                new ObjectParameter("Plot_Size", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var father_HusbandParameter = father_Husband != null ?
                new ObjectParameter("Father_Husband", father_Husband) :
                new ObjectParameter("Father_Husband", typeof(string));
    
            var postal_AddressParameter = postal_Address != null ?
                new ObjectParameter("Postal_Address", postal_Address) :
                new ObjectParameter("Postal_Address", typeof(string));
    
            var residential_AddressParameter = residential_Address != null ?
                new ObjectParameter("Residential_Address", residential_Address) :
                new ObjectParameter("Residential_Address", typeof(string));
    
            var phone_OfficeParameter = phone_Office != null ?
                new ObjectParameter("Phone_Office", phone_Office) :
                new ObjectParameter("Phone_Office", typeof(string));
    
            var residentialParameter = residential != null ?
                new ObjectParameter("Residential", residential) :
                new ObjectParameter("Residential", typeof(string));
    
            var mobile_1Parameter = mobile_1 != null ?
                new ObjectParameter("Mobile_1", mobile_1) :
                new ObjectParameter("Mobile_1", typeof(string));
    
            var mobile_2Parameter = mobile_2 != null ?
                new ObjectParameter("Mobile_2", mobile_2) :
                new ObjectParameter("Mobile_2", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var occupationParameter = occupation != null ?
                new ObjectParameter("Occupation", occupation) :
                new ObjectParameter("Occupation", typeof(string));
    
            var nationalityParameter = nationality != null ?
                new ObjectParameter("Nationality", nationality) :
                new ObjectParameter("Nationality", typeof(string));
    
            var date_Of_BirthParameter = date_Of_Birth != null ?
                new ObjectParameter("Date_Of_Birth", date_Of_Birth) :
                new ObjectParameter("Date_Of_Birth", typeof(string));
    
            var cNIC_NICOPParameter = cNIC_NICOP != null ?
                new ObjectParameter("CNIC_NICOP", cNIC_NICOP) :
                new ObjectParameter("CNIC_NICOP", typeof(string));
    
            var nominee_NameParameter = nominee_Name != null ?
                new ObjectParameter("Nominee_Name", nominee_Name) :
                new ObjectParameter("Nominee_Name", typeof(string));
    
            var nominee_RelationParameter = nominee_Relation != null ?
                new ObjectParameter("Nominee_Relation", nominee_Relation) :
                new ObjectParameter("Nominee_Relation", typeof(string));
    
            var nominee_AddressParameter = nominee_Address != null ?
                new ObjectParameter("Nominee_Address", nominee_Address) :
                new ObjectParameter("Nominee_Address", typeof(string));
    
            var nominee_CNIC_NICOPParameter = nominee_CNIC_NICOP != null ?
                new ObjectParameter("Nominee_CNIC_NICOP", nominee_CNIC_NICOP) :
                new ObjectParameter("Nominee_CNIC_NICOP", typeof(string));
    
            var plot_idParameter = plot_id.HasValue ?
                new ObjectParameter("plot_id", plot_id) :
                new ObjectParameter("plot_id", typeof(long));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var plt_pricParameter = plt_pric.HasValue ?
                new ObjectParameter("plt_pric", plt_pric) :
                new ObjectParameter("plt_pric", typeof(decimal));
    
            var dealParameter = deal.HasValue ?
                new ObjectParameter("deal", deal) :
                new ObjectParameter("deal", typeof(bool));
    
            var empParameter = emp.HasValue ?
                new ObjectParameter("emp", emp) :
                new ObjectParameter("emp", typeof(bool));
    
            var transactionidParameter = transactionid.HasValue ?
                new ObjectParameter("transactionid", transactionid) :
                new ObjectParameter("transactionid", typeof(long));
    
            var isFIlerParameter = isFIler.HasValue ?
                new ObjectParameter("isFIler", isFIler) :
                new ObjectParameter("isFIler", typeof(bool));
    
            var buyerTaxExeParameter = buyerTaxExe.HasValue ?
                new ObjectParameter("buyerTaxExe", buyerTaxExe) :
                new ObjectParameter("buyerTaxExe", typeof(bool));
    
            var buyerTaxExeRznParameter = buyerTaxExeRzn != null ?
                new ObjectParameter("buyerTaxExeRzn", buyerTaxExeRzn) :
                new ObjectParameter("buyerTaxExeRzn", typeof(string));
    
            var sellerExeParameter = sellerExe.HasValue ?
                new ObjectParameter("sellerExe", sellerExe) :
                new ObjectParameter("sellerExe", typeof(bool));
    
            var dealDealerParameter = dealDealer != null ?
                new ObjectParameter("dealDealer", dealDealer) :
                new ObjectParameter("dealDealer", typeof(string));
    
            var sellExeRznParameter = sellExeRzn != null ?
                new ObjectParameter("sellExeRzn", sellExeRzn) :
                new ObjectParameter("sellExeRzn", typeof(string));
    
            var receNumParameter = receNum != null ?
                new ObjectParameter("receNum", receNum) :
                new ObjectParameter("receNum", typeof(string));
    
            var grpTagParameter = grpTag.HasValue ?
                new ObjectParameter("grpTag", grpTag) :
                new ObjectParameter("grpTag", typeof(long));
    
            var compPropertyParameter = compProperty.HasValue ?
                new ObjectParameter("CompProperty", compProperty) :
                new ObjectParameter("CompProperty", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_TransferRequestPlot", plot_SizeParameter, nameParameter, father_HusbandParameter, postal_AddressParameter, residential_AddressParameter, phone_OfficeParameter, residentialParameter, mobile_1Parameter, mobile_2Parameter, emailParameter, occupationParameter, nationalityParameter, date_Of_BirthParameter, cNIC_NICOPParameter, nominee_NameParameter, nominee_RelationParameter, nominee_AddressParameter, nominee_CNIC_NICOPParameter, plot_idParameter, cityParameter, plt_pricParameter, dealParameter, empParameter, transactionidParameter, isFIlerParameter, buyerTaxExeParameter, buyerTaxExeRznParameter, sellerExeParameter, dealDealerParameter, sellExeRznParameter, receNumParameter, grpTagParameter, compPropertyParameter);
        }
    
        public virtual ObjectResult<string> Sp_Add_UnadjustableAmounts(Nullable<decimal> amount, string amountinWords, string bank, string ch_Pay_Draft_No, string contact, string father_Name, Nullable<long> file_Plot_No, string name, string paymentType, Nullable<decimal> plot_Total_Amount, string project, Nullable<decimal> ratePerMarla, string registeration_No, string size, string type, Nullable<long> token, Nullable<long> userid, Nullable<System.DateTime> date, Nullable<long> fileid, string reqBank, string mod, string devchar, string filePlotNumber, string block, Nullable<long> transId, string receiptno, string plottype)
        {
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var amountinWordsParameter = amountinWords != null ?
                new ObjectParameter("AmountinWords", amountinWords) :
                new ObjectParameter("AmountinWords", typeof(string));
    
            var bankParameter = bank != null ?
                new ObjectParameter("Bank", bank) :
                new ObjectParameter("Bank", typeof(string));
    
            var ch_Pay_Draft_NoParameter = ch_Pay_Draft_No != null ?
                new ObjectParameter("Ch_Pay_Draft_No", ch_Pay_Draft_No) :
                new ObjectParameter("Ch_Pay_Draft_No", typeof(string));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var father_NameParameter = father_Name != null ?
                new ObjectParameter("Father_Name", father_Name) :
                new ObjectParameter("Father_Name", typeof(string));
    
            var file_Plot_NoParameter = file_Plot_No.HasValue ?
                new ObjectParameter("File_Plot_No", file_Plot_No) :
                new ObjectParameter("File_Plot_No", typeof(long));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var paymentTypeParameter = paymentType != null ?
                new ObjectParameter("PaymentType", paymentType) :
                new ObjectParameter("PaymentType", typeof(string));
    
            var plot_Total_AmountParameter = plot_Total_Amount.HasValue ?
                new ObjectParameter("Plot_Total_Amount", plot_Total_Amount) :
                new ObjectParameter("Plot_Total_Amount", typeof(decimal));
    
            var projectParameter = project != null ?
                new ObjectParameter("Project", project) :
                new ObjectParameter("Project", typeof(string));
    
            var ratePerMarlaParameter = ratePerMarla.HasValue ?
                new ObjectParameter("RatePerMarla", ratePerMarla) :
                new ObjectParameter("RatePerMarla", typeof(decimal));
    
            var registeration_NoParameter = registeration_No != null ?
                new ObjectParameter("Registeration_No", registeration_No) :
                new ObjectParameter("Registeration_No", typeof(string));
    
            var sizeParameter = size != null ?
                new ObjectParameter("Size", size) :
                new ObjectParameter("Size", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var tokenParameter = token.HasValue ?
                new ObjectParameter("Token", token) :
                new ObjectParameter("Token", typeof(long));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var fileidParameter = fileid.HasValue ?
                new ObjectParameter("fileid", fileid) :
                new ObjectParameter("fileid", typeof(long));
    
            var reqBankParameter = reqBank != null ?
                new ObjectParameter("reqBank", reqBank) :
                new ObjectParameter("reqBank", typeof(string));
    
            var modParameter = mod != null ?
                new ObjectParameter("mod", mod) :
                new ObjectParameter("mod", typeof(string));
    
            var devcharParameter = devchar != null ?
                new ObjectParameter("devchar", devchar) :
                new ObjectParameter("devchar", typeof(string));
    
            var filePlotNumberParameter = filePlotNumber != null ?
                new ObjectParameter("FilePlotNumber", filePlotNumber) :
                new ObjectParameter("FilePlotNumber", typeof(string));
    
            var blockParameter = block != null ?
                new ObjectParameter("block", block) :
                new ObjectParameter("block", typeof(string));
    
            var transIdParameter = transId.HasValue ?
                new ObjectParameter("transId", transId) :
                new ObjectParameter("transId", typeof(long));
    
            var receiptnoParameter = receiptno != null ?
                new ObjectParameter("receiptno", receiptno) :
                new ObjectParameter("receiptno", typeof(string));
    
            var plottypeParameter = plottype != null ?
                new ObjectParameter("plottype", plottype) :
                new ObjectParameter("plottype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Sp_Add_UnadjustableAmounts", amountParameter, amountinWordsParameter, bankParameter, ch_Pay_Draft_NoParameter, contactParameter, father_NameParameter, file_Plot_NoParameter, nameParameter, paymentTypeParameter, plot_Total_AmountParameter, projectParameter, ratePerMarlaParameter, registeration_NoParameter, sizeParameter, typeParameter, tokenParameter, useridParameter, dateParameter, fileidParameter, reqBankParameter, modParameter, devcharParameter, filePlotNumberParameter, blockParameter, transIdParameter, receiptnoParameter, plottypeParameter);
        }
    
        public virtual ObjectResult<string> Sp_Add_UnadjustableAmounts_Pending(Nullable<decimal> amount, string amountinWords, string bank, string ch_Pay_Draft_No, string contact, string father_Name, Nullable<long> file_Plot_No, string name, string paymentType, Nullable<decimal> plot_Total_Amount, string project, Nullable<decimal> ratePerMarla, string registeration_No, string size, string type, Nullable<long> token, Nullable<long> userid, Nullable<System.DateTime> date, Nullable<long> fileid, string reqBank, string mod, string devchar, string filePlotNumber, string block, Nullable<long> transId, string receiptno, string plottype)
        {
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var amountinWordsParameter = amountinWords != null ?
                new ObjectParameter("AmountinWords", amountinWords) :
                new ObjectParameter("AmountinWords", typeof(string));
    
            var bankParameter = bank != null ?
                new ObjectParameter("Bank", bank) :
                new ObjectParameter("Bank", typeof(string));
    
            var ch_Pay_Draft_NoParameter = ch_Pay_Draft_No != null ?
                new ObjectParameter("Ch_Pay_Draft_No", ch_Pay_Draft_No) :
                new ObjectParameter("Ch_Pay_Draft_No", typeof(string));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var father_NameParameter = father_Name != null ?
                new ObjectParameter("Father_Name", father_Name) :
                new ObjectParameter("Father_Name", typeof(string));
    
            var file_Plot_NoParameter = file_Plot_No.HasValue ?
                new ObjectParameter("File_Plot_No", file_Plot_No) :
                new ObjectParameter("File_Plot_No", typeof(long));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var paymentTypeParameter = paymentType != null ?
                new ObjectParameter("PaymentType", paymentType) :
                new ObjectParameter("PaymentType", typeof(string));
    
            var plot_Total_AmountParameter = plot_Total_Amount.HasValue ?
                new ObjectParameter("Plot_Total_Amount", plot_Total_Amount) :
                new ObjectParameter("Plot_Total_Amount", typeof(decimal));
    
            var projectParameter = project != null ?
                new ObjectParameter("Project", project) :
                new ObjectParameter("Project", typeof(string));
    
            var ratePerMarlaParameter = ratePerMarla.HasValue ?
                new ObjectParameter("RatePerMarla", ratePerMarla) :
                new ObjectParameter("RatePerMarla", typeof(decimal));
    
            var registeration_NoParameter = registeration_No != null ?
                new ObjectParameter("Registeration_No", registeration_No) :
                new ObjectParameter("Registeration_No", typeof(string));
    
            var sizeParameter = size != null ?
                new ObjectParameter("Size", size) :
                new ObjectParameter("Size", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var tokenParameter = token.HasValue ?
                new ObjectParameter("Token", token) :
                new ObjectParameter("Token", typeof(long));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var fileidParameter = fileid.HasValue ?
                new ObjectParameter("fileid", fileid) :
                new ObjectParameter("fileid", typeof(long));
    
            var reqBankParameter = reqBank != null ?
                new ObjectParameter("reqBank", reqBank) :
                new ObjectParameter("reqBank", typeof(string));
    
            var modParameter = mod != null ?
                new ObjectParameter("mod", mod) :
                new ObjectParameter("mod", typeof(string));
    
            var devcharParameter = devchar != null ?
                new ObjectParameter("devchar", devchar) :
                new ObjectParameter("devchar", typeof(string));
    
            var filePlotNumberParameter = filePlotNumber != null ?
                new ObjectParameter("FilePlotNumber", filePlotNumber) :
                new ObjectParameter("FilePlotNumber", typeof(string));
    
            var blockParameter = block != null ?
                new ObjectParameter("block", block) :
                new ObjectParameter("block", typeof(string));
    
            var transIdParameter = transId.HasValue ?
                new ObjectParameter("transId", transId) :
                new ObjectParameter("transId", typeof(long));
    
            var receiptnoParameter = receiptno != null ?
                new ObjectParameter("receiptno", receiptno) :
                new ObjectParameter("receiptno", typeof(string));
    
            var plottypeParameter = plottype != null ?
                new ObjectParameter("plottype", plottype) :
                new ObjectParameter("plottype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Sp_Add_UnadjustableAmounts_Pending", amountParameter, amountinWordsParameter, bankParameter, ch_Pay_Draft_NoParameter, contactParameter, father_NameParameter, file_Plot_NoParameter, nameParameter, paymentTypeParameter, plot_Total_AmountParameter, projectParameter, ratePerMarlaParameter, registeration_NoParameter, sizeParameter, typeParameter, tokenParameter, useridParameter, dateParameter, fileidParameter, reqBankParameter, modParameter, devcharParameter, filePlotNumberParameter, blockParameter, transIdParameter, receiptnoParameter, plottypeParameter);
        }
    
        public virtual ObjectResult<Sp_Add_Vendor_Result> Sp_Add_Vendor(string name, string company, string address, string email, string office_Mobile, string fax, string city, Nullable<long> userid, string ntn, string stn)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var office_MobileParameter = office_Mobile != null ?
                new ObjectParameter("Office_Mobile", office_Mobile) :
                new ObjectParameter("Office_Mobile", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var ntnParameter = ntn != null ?
                new ObjectParameter("ntn", ntn) :
                new ObjectParameter("ntn", typeof(string));
    
            var stnParameter = stn != null ?
                new ObjectParameter("stn", stn) :
                new ObjectParameter("stn", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Add_Vendor_Result>("Sp_Add_Vendor", nameParameter, companyParameter, addressParameter, emailParameter, office_MobileParameter, faxParameter, cityParameter, useridParameter, ntnParameter, stnParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_Version(Nullable<int> plot_size, Nullable<int> filecount, Nullable<long> dealer_id, string delername, Nullable<long> project_id, Nullable<long> phase_Id, Nullable<long> block_id, Nullable<decimal> rate_marla, Nullable<decimal> amount, Nullable<decimal> deposit, Nullable<long> gropu_id, Nullable<long> deal_id, string pro_name, string phase_name, string blk_name, Nullable<int> installment_plan)
        {
            var plot_sizeParameter = plot_size.HasValue ?
                new ObjectParameter("plot_size", plot_size) :
                new ObjectParameter("plot_size", typeof(int));
    
            var filecountParameter = filecount.HasValue ?
                new ObjectParameter("Filecount", filecount) :
                new ObjectParameter("Filecount", typeof(int));
    
            var dealer_idParameter = dealer_id.HasValue ?
                new ObjectParameter("dealer_id", dealer_id) :
                new ObjectParameter("dealer_id", typeof(long));
    
            var delernameParameter = delername != null ?
                new ObjectParameter("delername", delername) :
                new ObjectParameter("delername", typeof(string));
    
            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("Project_id", project_id) :
                new ObjectParameter("Project_id", typeof(long));
    
            var phase_IdParameter = phase_Id.HasValue ?
                new ObjectParameter("phase_Id", phase_Id) :
                new ObjectParameter("phase_Id", typeof(long));
    
            var block_idParameter = block_id.HasValue ?
                new ObjectParameter("block_id", block_id) :
                new ObjectParameter("block_id", typeof(long));
    
            var rate_marlaParameter = rate_marla.HasValue ?
                new ObjectParameter("rate_marla", rate_marla) :
                new ObjectParameter("rate_marla", typeof(decimal));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            var depositParameter = deposit.HasValue ?
                new ObjectParameter("deposit", deposit) :
                new ObjectParameter("deposit", typeof(decimal));
    
            var gropu_idParameter = gropu_id.HasValue ?
                new ObjectParameter("gropu_id", gropu_id) :
                new ObjectParameter("gropu_id", typeof(long));
    
            var deal_idParameter = deal_id.HasValue ?
                new ObjectParameter("deal_id", deal_id) :
                new ObjectParameter("deal_id", typeof(long));
    
            var pro_nameParameter = pro_name != null ?
                new ObjectParameter("pro_name", pro_name) :
                new ObjectParameter("pro_name", typeof(string));
    
            var phase_nameParameter = phase_name != null ?
                new ObjectParameter("phase_name", phase_name) :
                new ObjectParameter("phase_name", typeof(string));
    
            var blk_nameParameter = blk_name != null ?
                new ObjectParameter("blk_name", blk_name) :
                new ObjectParameter("blk_name", typeof(string));
    
            var installment_planParameter = installment_plan.HasValue ?
                new ObjectParameter("installment_plan", installment_plan) :
                new ObjectParameter("installment_plan", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_Version", plot_sizeParameter, filecountParameter, dealer_idParameter, delernameParameter, project_idParameter, phase_IdParameter, block_idParameter, rate_marlaParameter, amountParameter, depositParameter, gropu_idParameter, deal_idParameter, pro_nameParameter, phase_nameParameter, blk_nameParameter, installment_planParameter);
        }
    
        public virtual ObjectResult<Sp_Add_Voucher_Result> Sp_Add_Voucher(string address, Nullable<decimal> amount, string amountinWords, string bank, string branch_Name, Nullable<System.DateTime> ch_Pay_Draft_Date, string ch_Pay_Draft_No, string contact, string description, string father_Name, Nullable<long> file_Plot_Id, string module, string name, string paymentType, string project, string text, Nullable<long> tokenParameter, string type, Nullable<long> userid, Nullable<long> vendor, Nullable<int> comp_Id)
        {
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var amountinWordsParameter = amountinWords != null ?
                new ObjectParameter("AmountinWords", amountinWords) :
                new ObjectParameter("AmountinWords", typeof(string));
    
            var bankParameter = bank != null ?
                new ObjectParameter("Bank", bank) :
                new ObjectParameter("Bank", typeof(string));
    
            var branch_NameParameter = branch_Name != null ?
                new ObjectParameter("Branch_Name", branch_Name) :
                new ObjectParameter("Branch_Name", typeof(string));
    
            var ch_Pay_Draft_DateParameter = ch_Pay_Draft_Date.HasValue ?
                new ObjectParameter("Ch_Pay_Draft_Date", ch_Pay_Draft_Date) :
                new ObjectParameter("Ch_Pay_Draft_Date", typeof(System.DateTime));
    
            var ch_Pay_Draft_NoParameter = ch_Pay_Draft_No != null ?
                new ObjectParameter("Ch_Pay_Draft_No", ch_Pay_Draft_No) :
                new ObjectParameter("Ch_Pay_Draft_No", typeof(string));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var father_NameParameter = father_Name != null ?
                new ObjectParameter("Father_Name", father_Name) :
                new ObjectParameter("Father_Name", typeof(string));
    
            var file_Plot_IdParameter = file_Plot_Id.HasValue ?
                new ObjectParameter("File_Plot_Id", file_Plot_Id) :
                new ObjectParameter("File_Plot_Id", typeof(long));
    
            var moduleParameter = module != null ?
                new ObjectParameter("Module", module) :
                new ObjectParameter("Module", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var paymentTypeParameter = paymentType != null ?
                new ObjectParameter("PaymentType", paymentType) :
                new ObjectParameter("PaymentType", typeof(string));
    
            var projectParameter = project != null ?
                new ObjectParameter("Project", project) :
                new ObjectParameter("Project", typeof(string));
    
            var textParameter = text != null ?
                new ObjectParameter("Text", text) :
                new ObjectParameter("Text", typeof(string));
    
            var tokenParameterParameter = tokenParameter.HasValue ?
                new ObjectParameter("TokenParameter", tokenParameter) :
                new ObjectParameter("TokenParameter", typeof(long));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(long));
    
            var vendorParameter = vendor.HasValue ?
                new ObjectParameter("vendor", vendor) :
                new ObjectParameter("vendor", typeof(long));
    
            var comp_IdParameter = comp_Id.HasValue ?
                new ObjectParameter("comp_Id", comp_Id) :
                new ObjectParameter("comp_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Add_Voucher_Result>("Sp_Add_Voucher", addressParameter, amountParameter, amountinWordsParameter, bankParameter, branch_NameParameter, ch_Pay_Draft_DateParameter, ch_Pay_Draft_NoParameter, contactParameter, descriptionParameter, father_NameParameter, file_Plot_IdParameter, moduleParameter, nameParameter, paymentTypeParameter, projectParameter, textParameter, tokenParameterParameter, typeParameter, useridParameter, vendorParameter, comp_IdParameter);
        }
    
        public virtual ObjectResult<Sp_Add_Voucher_Vendor_Result> Sp_Add_Voucher_Vendor(string address, Nullable<decimal> amount, string amountinWords, string bank, string branch_Name, Nullable<System.DateTime> ch_Pay_Draft_Date, string ch_Pay_Draft_No, string contact, string description, string father_Name, Nullable<long> file_Plot_Id, string module, string name, string paymentType, string project, string text, Nullable<long> tokenParameter, string type, Nullable<long> userid, Nullable<long> vendor, Nullable<long> group_Id, string pre_Name, Nullable<long> prepared_By, Nullable<System.DateTime> pre_Datetime, string sup_Name, Nullable<long> supervised_By, Nullable<System.DateTime> sup_Datetime, Nullable<long> transactionId)
        {
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var amountinWordsParameter = amountinWords != null ?
                new ObjectParameter("AmountinWords", amountinWords) :
                new ObjectParameter("AmountinWords", typeof(string));
    
            var bankParameter = bank != null ?
                new ObjectParameter("Bank", bank) :
                new ObjectParameter("Bank", typeof(string));
    
            var branch_NameParameter = branch_Name != null ?
                new ObjectParameter("Branch_Name", branch_Name) :
                new ObjectParameter("Branch_Name", typeof(string));
    
            var ch_Pay_Draft_DateParameter = ch_Pay_Draft_Date.HasValue ?
                new ObjectParameter("Ch_Pay_Draft_Date", ch_Pay_Draft_Date) :
                new ObjectParameter("Ch_Pay_Draft_Date", typeof(System.DateTime));
    
            var ch_Pay_Draft_NoParameter = ch_Pay_Draft_No != null ?
                new ObjectParameter("Ch_Pay_Draft_No", ch_Pay_Draft_No) :
                new ObjectParameter("Ch_Pay_Draft_No", typeof(string));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var father_NameParameter = father_Name != null ?
                new ObjectParameter("Father_Name", father_Name) :
                new ObjectParameter("Father_Name", typeof(string));
    
            var file_Plot_IdParameter = file_Plot_Id.HasValue ?
                new ObjectParameter("File_Plot_Id", file_Plot_Id) :
                new ObjectParameter("File_Plot_Id", typeof(long));
    
            var moduleParameter = module != null ?
                new ObjectParameter("Module", module) :
                new ObjectParameter("Module", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var paymentTypeParameter = paymentType != null ?
                new ObjectParameter("PaymentType", paymentType) :
                new ObjectParameter("PaymentType", typeof(string));
    
            var projectParameter = project != null ?
                new ObjectParameter("Project", project) :
                new ObjectParameter("Project", typeof(string));
    
            var textParameter = text != null ?
                new ObjectParameter("Text", text) :
                new ObjectParameter("Text", typeof(string));
    
            var tokenParameterParameter = tokenParameter.HasValue ?
                new ObjectParameter("TokenParameter", tokenParameter) :
                new ObjectParameter("TokenParameter", typeof(long));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(long));
    
            var vendorParameter = vendor.HasValue ?
                new ObjectParameter("vendor", vendor) :
                new ObjectParameter("vendor", typeof(long));
    
            var group_IdParameter = group_Id.HasValue ?
                new ObjectParameter("group_Id", group_Id) :
                new ObjectParameter("group_Id", typeof(long));
    
            var pre_NameParameter = pre_Name != null ?
                new ObjectParameter("Pre_Name", pre_Name) :
                new ObjectParameter("Pre_Name", typeof(string));
    
            var prepared_ByParameter = prepared_By.HasValue ?
                new ObjectParameter("Prepared_By", prepared_By) :
                new ObjectParameter("Prepared_By", typeof(long));
    
            var pre_DatetimeParameter = pre_Datetime.HasValue ?
                new ObjectParameter("Pre_Datetime", pre_Datetime) :
                new ObjectParameter("Pre_Datetime", typeof(System.DateTime));
    
            var sup_NameParameter = sup_Name != null ?
                new ObjectParameter("Sup_Name", sup_Name) :
                new ObjectParameter("Sup_Name", typeof(string));
    
            var supervised_ByParameter = supervised_By.HasValue ?
                new ObjectParameter("Supervised_By", supervised_By) :
                new ObjectParameter("Supervised_By", typeof(long));
    
            var sup_DatetimeParameter = sup_Datetime.HasValue ?
                new ObjectParameter("Sup_Datetime", sup_Datetime) :
                new ObjectParameter("Sup_Datetime", typeof(System.DateTime));
    
            var transactionIdParameter = transactionId.HasValue ?
                new ObjectParameter("transactionId", transactionId) :
                new ObjectParameter("transactionId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Add_Voucher_Vendor_Result>("Sp_Add_Voucher_Vendor", addressParameter, amountParameter, amountinWordsParameter, bankParameter, branch_NameParameter, ch_Pay_Draft_DateParameter, ch_Pay_Draft_NoParameter, contactParameter, descriptionParameter, father_NameParameter, file_Plot_IdParameter, moduleParameter, nameParameter, paymentTypeParameter, projectParameter, textParameter, tokenParameterParameter, typeParameter, useridParameter, vendorParameter, group_IdParameter, pre_NameParameter, prepared_ByParameter, pre_DatetimeParameter, sup_NameParameter, supervised_ByParameter, sup_DatetimeParameter, transactionIdParameter);
        }
    
        public virtual ObjectResult<Sp_Add_Voucher_Vendor_Contra_Result> Sp_Add_Voucher_Vendor_Contra(string address, Nullable<decimal> amount, string amountinWords, string bank, string branch_Name, Nullable<System.DateTime> ch_Pay_Draft_Date, string ch_Pay_Draft_No, string contact, string description, string father_Name, Nullable<long> file_Plot_Id, string module, string name, string paymentType, string project, string text, Nullable<long> tokenParameter, string type, Nullable<long> userid, Nullable<long> vendor, Nullable<long> group_Id, string pre_Name, Nullable<long> prepared_By, Nullable<System.DateTime> pre_Datetime, string sup_Name, Nullable<long> supervised_By, Nullable<System.DateTime> sup_Datetime)
        {
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var amountinWordsParameter = amountinWords != null ?
                new ObjectParameter("AmountinWords", amountinWords) :
                new ObjectParameter("AmountinWords", typeof(string));
    
            var bankParameter = bank != null ?
                new ObjectParameter("Bank", bank) :
                new ObjectParameter("Bank", typeof(string));
    
            var branch_NameParameter = branch_Name != null ?
                new ObjectParameter("Branch_Name", branch_Name) :
                new ObjectParameter("Branch_Name", typeof(string));
    
            var ch_Pay_Draft_DateParameter = ch_Pay_Draft_Date.HasValue ?
                new ObjectParameter("Ch_Pay_Draft_Date", ch_Pay_Draft_Date) :
                new ObjectParameter("Ch_Pay_Draft_Date", typeof(System.DateTime));
    
            var ch_Pay_Draft_NoParameter = ch_Pay_Draft_No != null ?
                new ObjectParameter("Ch_Pay_Draft_No", ch_Pay_Draft_No) :
                new ObjectParameter("Ch_Pay_Draft_No", typeof(string));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var father_NameParameter = father_Name != null ?
                new ObjectParameter("Father_Name", father_Name) :
                new ObjectParameter("Father_Name", typeof(string));
    
            var file_Plot_IdParameter = file_Plot_Id.HasValue ?
                new ObjectParameter("File_Plot_Id", file_Plot_Id) :
                new ObjectParameter("File_Plot_Id", typeof(long));
    
            var moduleParameter = module != null ?
                new ObjectParameter("Module", module) :
                new ObjectParameter("Module", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var paymentTypeParameter = paymentType != null ?
                new ObjectParameter("PaymentType", paymentType) :
                new ObjectParameter("PaymentType", typeof(string));
    
            var projectParameter = project != null ?
                new ObjectParameter("Project", project) :
                new ObjectParameter("Project", typeof(string));
    
            var textParameter = text != null ?
                new ObjectParameter("Text", text) :
                new ObjectParameter("Text", typeof(string));
    
            var tokenParameterParameter = tokenParameter.HasValue ?
                new ObjectParameter("TokenParameter", tokenParameter) :
                new ObjectParameter("TokenParameter", typeof(long));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(long));
    
            var vendorParameter = vendor.HasValue ?
                new ObjectParameter("vendor", vendor) :
                new ObjectParameter("vendor", typeof(long));
    
            var group_IdParameter = group_Id.HasValue ?
                new ObjectParameter("group_Id", group_Id) :
                new ObjectParameter("group_Id", typeof(long));
    
            var pre_NameParameter = pre_Name != null ?
                new ObjectParameter("Pre_Name", pre_Name) :
                new ObjectParameter("Pre_Name", typeof(string));
    
            var prepared_ByParameter = prepared_By.HasValue ?
                new ObjectParameter("Prepared_By", prepared_By) :
                new ObjectParameter("Prepared_By", typeof(long));
    
            var pre_DatetimeParameter = pre_Datetime.HasValue ?
                new ObjectParameter("Pre_Datetime", pre_Datetime) :
                new ObjectParameter("Pre_Datetime", typeof(System.DateTime));
    
            var sup_NameParameter = sup_Name != null ?
                new ObjectParameter("Sup_Name", sup_Name) :
                new ObjectParameter("Sup_Name", typeof(string));
    
            var supervised_ByParameter = supervised_By.HasValue ?
                new ObjectParameter("Supervised_By", supervised_By) :
                new ObjectParameter("Supervised_By", typeof(long));
    
            var sup_DatetimeParameter = sup_Datetime.HasValue ?
                new ObjectParameter("Sup_Datetime", sup_Datetime) :
                new ObjectParameter("Sup_Datetime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Add_Voucher_Vendor_Contra_Result>("Sp_Add_Voucher_Vendor_Contra", addressParameter, amountParameter, amountinWordsParameter, bankParameter, branch_NameParameter, ch_Pay_Draft_DateParameter, ch_Pay_Draft_NoParameter, contactParameter, descriptionParameter, father_NameParameter, file_Plot_IdParameter, moduleParameter, nameParameter, paymentTypeParameter, projectParameter, textParameter, tokenParameterParameter, typeParameter, useridParameter, vendorParameter, group_IdParameter, pre_NameParameter, prepared_ByParameter, pre_DatetimeParameter, sup_NameParameter, supervised_ByParameter, sup_DatetimeParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Add_VoucherDetails(Nullable<decimal> amount, string item_Name, Nullable<decimal> quantity, Nullable<decimal> rate, string uOM, Nullable<long> voucher_Id)
        {
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var item_NameParameter = item_Name != null ?
                new ObjectParameter("Item_Name", item_Name) :
                new ObjectParameter("Item_Name", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(decimal));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("Rate", rate) :
                new ObjectParameter("Rate", typeof(decimal));
    
            var uOMParameter = uOM != null ?
                new ObjectParameter("UOM", uOM) :
                new ObjectParameter("UOM", typeof(string));
    
            var voucher_IdParameter = voucher_Id.HasValue ?
                new ObjectParameter("Voucher_Id", voucher_Id) :
                new ObjectParameter("Voucher_Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Add_VoucherDetails", amountParameter, item_NameParameter, quantityParameter, rateParameter, uOMParameter, voucher_IdParameter);
        }
    
        public virtual int Sp_Add_WBD_Activity(Nullable<long> prjid, string title, string desc, string unit, Nullable<decimal> qty, Nullable<decimal> rate, Nullable<decimal> amt, Nullable<long> userid, Nullable<System.DateTime> start_date, Nullable<System.DateTime> deadline, Nullable<long> activity_Id, Nullable<int> noDays, string type, Nullable<long> wbd_Id)
        {
            var prjidParameter = prjid.HasValue ?
                new ObjectParameter("Prjid", prjid) :
                new ObjectParameter("Prjid", typeof(long));
    
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var descParameter = desc != null ?
                new ObjectParameter("desc", desc) :
                new ObjectParameter("desc", typeof(string));
    
            var unitParameter = unit != null ?
                new ObjectParameter("unit", unit) :
                new ObjectParameter("unit", typeof(string));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("qty", qty) :
                new ObjectParameter("qty", typeof(decimal));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("rate", rate) :
                new ObjectParameter("rate", typeof(decimal));
    
            var amtParameter = amt.HasValue ?
                new ObjectParameter("amt", amt) :
                new ObjectParameter("amt", typeof(decimal));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var deadlineParameter = deadline.HasValue ?
                new ObjectParameter("deadline", deadline) :
                new ObjectParameter("deadline", typeof(System.DateTime));
    
            var activity_IdParameter = activity_Id.HasValue ?
                new ObjectParameter("Activity_Id", activity_Id) :
                new ObjectParameter("Activity_Id", typeof(long));
    
            var noDaysParameter = noDays.HasValue ?
                new ObjectParameter("NoDays", noDays) :
                new ObjectParameter("NoDays", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var wbd_IdParameter = wbd_Id.HasValue ?
                new ObjectParameter("wbd_Id", wbd_Id) :
                new ObjectParameter("wbd_Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_WBD_Activity", prjidParameter, titleParameter, descParameter, unitParameter, qtyParameter, rateParameter, amtParameter, useridParameter, start_dateParameter, deadlineParameter, activity_IdParameter, noDaysParameter, typeParameter, wbd_IdParameter);
        }
    
        public virtual int Sp_Add_WBD_rsc_Equipment(Nullable<long> prjid, Nullable<long> activity_Id, string type, Nullable<decimal> qty, Nullable<decimal> rate, Nullable<decimal> amt, Nullable<long> userid, string phpd, string mitem)
        {
            var prjidParameter = prjid.HasValue ?
                new ObjectParameter("Prjid", prjid) :
                new ObjectParameter("Prjid", typeof(long));
    
            var activity_IdParameter = activity_Id.HasValue ?
                new ObjectParameter("Activity_Id", activity_Id) :
                new ObjectParameter("Activity_Id", typeof(long));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("qty", qty) :
                new ObjectParameter("qty", typeof(decimal));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("rate", rate) :
                new ObjectParameter("rate", typeof(decimal));
    
            var amtParameter = amt.HasValue ?
                new ObjectParameter("amt", amt) :
                new ObjectParameter("amt", typeof(decimal));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var phpdParameter = phpd != null ?
                new ObjectParameter("Phpd", phpd) :
                new ObjectParameter("Phpd", typeof(string));
    
            var mitemParameter = mitem != null ?
                new ObjectParameter("Mitem", mitem) :
                new ObjectParameter("Mitem", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_WBD_rsc_Equipment", prjidParameter, activity_IdParameter, typeParameter, qtyParameter, rateParameter, amtParameter, useridParameter, phpdParameter, mitemParameter);
        }
    
        public virtual int Sp_Add_WBD_rsc_Labour(Nullable<long> prjid, Nullable<long> activity_Id, string type, Nullable<decimal> qty, Nullable<decimal> rate, Nullable<decimal> amt, Nullable<long> userid, string phpd)
        {
            var prjidParameter = prjid.HasValue ?
                new ObjectParameter("Prjid", prjid) :
                new ObjectParameter("Prjid", typeof(long));
    
            var activity_IdParameter = activity_Id.HasValue ?
                new ObjectParameter("Activity_Id", activity_Id) :
                new ObjectParameter("Activity_Id", typeof(long));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("qty", qty) :
                new ObjectParameter("qty", typeof(decimal));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("rate", rate) :
                new ObjectParameter("rate", typeof(decimal));
    
            var amtParameter = amt.HasValue ?
                new ObjectParameter("amt", amt) :
                new ObjectParameter("amt", typeof(decimal));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var phpdParameter = phpd != null ?
                new ObjectParameter("Phpd", phpd) :
                new ObjectParameter("Phpd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_WBD_rsc_Labour", prjidParameter, activity_IdParameter, typeParameter, qtyParameter, rateParameter, amtParameter, useridParameter, phpdParameter);
        }
    
        public virtual int Sp_Add_WBD_rsc_Material(Nullable<long> prjid, Nullable<long> activity_Id, string type, Nullable<long> inventory, Nullable<decimal> qty, Nullable<decimal> rate, Nullable<decimal> amt, string uom, Nullable<long> userid)
        {
            var prjidParameter = prjid.HasValue ?
                new ObjectParameter("Prjid", prjid) :
                new ObjectParameter("Prjid", typeof(long));
    
            var activity_IdParameter = activity_Id.HasValue ?
                new ObjectParameter("Activity_Id", activity_Id) :
                new ObjectParameter("Activity_Id", typeof(long));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var inventoryParameter = inventory.HasValue ?
                new ObjectParameter("Inventory", inventory) :
                new ObjectParameter("Inventory", typeof(long));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("qty", qty) :
                new ObjectParameter("qty", typeof(decimal));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("rate", rate) :
                new ObjectParameter("rate", typeof(decimal));
    
            var amtParameter = amt.HasValue ?
                new ObjectParameter("amt", amt) :
                new ObjectParameter("amt", typeof(decimal));
    
            var uomParameter = uom != null ?
                new ObjectParameter("uom", uom) :
                new ObjectParameter("uom", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Add_WBD_rsc_Material", prjidParameter, activity_IdParameter, typeParameter, inventoryParameter, qtyParameter, rateParameter, amtParameter, uomParameter, useridParameter);
        }
    
        public virtual int Sp_Assets_Logs(string cURD, string action, Nullable<long> userName, string assetName, string assetSpecs, string assetHolderName)
        {
            var cURDParameter = cURD != null ?
                new ObjectParameter("CURD", cURD) :
                new ObjectParameter("CURD", typeof(string));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var userNameParameter = userName.HasValue ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(long));
    
            var assetNameParameter = assetName != null ?
                new ObjectParameter("AssetName", assetName) :
                new ObjectParameter("AssetName", typeof(string));
    
            var assetSpecsParameter = assetSpecs != null ?
                new ObjectParameter("AssetSpecs", assetSpecs) :
                new ObjectParameter("AssetSpecs", typeof(string));
    
            var assetHolderNameParameter = assetHolderName != null ?
                new ObjectParameter("AssetHolderName", assetHolderName) :
                new ObjectParameter("AssetHolderName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Assets_Logs", cURDParameter, actionParameter, userNameParameter, assetNameParameter, assetSpecsParameter, assetHolderNameParameter);
        }
    
        public virtual ObjectResult<Sp_Check_LoginEmail_Result> Sp_Check_LoginEmail(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Check_LoginEmail_Result>("Sp_Check_LoginEmail", emailParameter);
        }
    
        public virtual ObjectResult<Sp_Check_LoginMobile_Result> Sp_Check_LoginMobile(string mobile)
        {
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Check_LoginMobile_Result>("Sp_Check_LoginMobile", mobileParameter);
        }
    
        public virtual int SP_Dealership_Log(string cRUD, string extraInformation, string iP_Address, Nullable<long> userid)
        {
            var cRUDParameter = cRUD != null ?
                new ObjectParameter("CRUD", cRUD) :
                new ObjectParameter("CRUD", typeof(string));
    
            var extraInformationParameter = extraInformation != null ?
                new ObjectParameter("ExtraInformation", extraInformation) :
                new ObjectParameter("ExtraInformation", typeof(string));
    
            var iP_AddressParameter = iP_Address != null ?
                new ObjectParameter("IP_Address", iP_Address) :
                new ObjectParameter("IP_Address", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Dealership_Log", cRUDParameter, extraInformationParameter, iP_AddressParameter, useridParameter);
        }
    
        public virtual int Sp_Delete_Allownce(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_Allownce", idParameter);
        }
    
        public virtual int Sp_Delete_Arrear(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_Arrear", idParameter);
        }
    
        public virtual int Sp_Delete_ArrearSalary_Detail_Parameter(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_ArrearSalary_Detail_Parameter", idParameter);
        }
    
        public virtual int Sp_Delete_Assign_Assets(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_Assign_Assets", idParameter);
        }
    
        public virtual int Sp_Delete_Attendance_Of_Day(Nullable<System.DateTime> attDate)
        {
            var attDateParameter = attDate.HasValue ?
                new ObjectParameter("attDate", attDate) :
                new ObjectParameter("attDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_Attendance_Of_Day", attDateParameter);
        }
    
        public virtual int Sp_Delete_BankAccount(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_BankAccount", idParameter);
        }
    
        public virtual int SP_Delete_Bid(Nullable<long> bidId, string ty)
        {
            var bidIdParameter = bidId.HasValue ?
                new ObjectParameter("bidId", bidId) :
                new ObjectParameter("bidId", typeof(long));
    
            var tyParameter = ty != null ?
                new ObjectParameter("ty", ty) :
                new ObjectParameter("ty", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Delete_Bid", bidIdParameter, tyParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Sp_Delete_CommercialInstallment_Parameter(Nullable<long> planid)
        {
            var planidParameter = planid.HasValue ?
                new ObjectParameter("planid", planid) :
                new ObjectParameter("planid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Sp_Delete_CommercialInstallment_Parameter", planidParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Sp_Delete_CommercialManagement_Parameter(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Sp_Delete_CommercialManagement_Parameter", idParameter);
        }
    
        public virtual int Sp_Delete_Company_Assets(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_Company_Assets", idParameter);
        }
    
        public virtual int Sp_Delete_CompDepDes(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_CompDepDes", idParameter);
        }
    
        public virtual int Sp_Delete_CustomerUser(string email, string cnic, string phone)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var cnicParameter = cnic != null ?
                new ObjectParameter("cnic", cnic) :
                new ObjectParameter("cnic", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_CustomerUser", emailParameter, cnicParameter, phoneParameter);
        }
    
        public virtual int Sp_Delete_Deal(Nullable<long> grp)
        {
            var grpParameter = grp.HasValue ?
                new ObjectParameter("grp", grp) :
                new ObjectParameter("grp", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_Deal", grpParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Sp_Delete_Dealership_Dealers(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Sp_Delete_Dealership_Dealers", idParameter);
        }
    
        public virtual int SP_Delete_DeletePmtScheduleDetailInfo(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Delete_DeletePmtScheduleDetailInfo", idParameter);
        }
    
        public virtual int Sp_Delete_DemandReq(Nullable<long> grop)
        {
            var gropParameter = grop.HasValue ?
                new ObjectParameter("Grop", grop) :
                new ObjectParameter("Grop", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_DemandReq", gropParameter);
        }
    
        public virtual int Sp_Delete_Designation(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_Designation", idParameter);
        }
    
        public virtual int Sp_Delete_Discount(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_Discount", idParameter);
        }
    
        public virtual int Sp_Delete_Education(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_Education", idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Sp_Delete_Employee(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Sp_Delete_Employee", idParameter);
        }
    
        public virtual int Sp_Delete_Employee_Acheivements(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_Employee_Acheivements", idParameter);
        }
    
        public virtual int Sp_Delete_Employee_Award(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_Employee_Award", idParameter);
        }
    
        public virtual int Sp_Delete_Employee_Reward(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_Employee_Reward", idParameter);
        }
    
        public virtual int Sp_Delete_Employee_Training(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_Employee_Training", idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Sp_Delete_EntertaimentFeePlan(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Sp_Delete_EntertaimentFeePlan", idParameter);
        }
    
        public virtual int Sp_Delete_FamilyProperty(Nullable<int> cust_ID, Nullable<long> fileFormNumber)
        {
            var cust_IDParameter = cust_ID.HasValue ?
                new ObjectParameter("Cust_ID", cust_ID) :
                new ObjectParameter("Cust_ID", typeof(int));
    
            var fileFormNumberParameter = fileFormNumber.HasValue ?
                new ObjectParameter("FileFormNumber", fileFormNumber) :
                new ObjectParameter("FileFormNumber", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_FamilyProperty", cust_IDParameter, fileFormNumberParameter);
        }
    
        public virtual int Sp_Delete_FileInstallment_Plan(Nullable<long> fileId)
        {
            var fileIdParameter = fileId.HasValue ?
                new ObjectParameter("FileId", fileId) :
                new ObjectParameter("FileId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_FileInstallment_Plan", fileIdParameter);
        }
    
        public virtual int Sp_Delete_GeneralEntry(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_GeneralEntry", idParameter);
        }
    
        public virtual int Sp_Delete_Inventory_Dep(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_Inventory_Dep", idParameter);
        }
    
        public virtual int Sp_Delete_LeadData(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_LeadData", idParameter);
        }
    
        public virtual int Sp_Delete_LoanReq(Nullable<long> loanId)
        {
            var loanIdParameter = loanId.HasValue ?
                new ObjectParameter("loanId", loanId) :
                new ObjectParameter("loanId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_LoanReq", loanIdParameter);
        }
    
        public virtual int Sp_Delete_MaterialStatment(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_MaterialStatment", idParameter);
        }
    
        public virtual ObjectResult<Sp_Delete_MTS_Result> Sp_Delete_MTS(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Delete_MTS_Result>("Sp_Delete_MTS", idParameter);
        }
    
        public virtual int Sp_Delete_OtherExp(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_OtherExp", idParameter);
        }
    
        public virtual int Sp_Delete_PattyCash(Nullable<long> userid, Nullable<long> group)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var groupParameter = group.HasValue ?
                new ObjectParameter("group", group) :
                new ObjectParameter("group", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_PattyCash", useridParameter, groupParameter);
        }
    
        public virtual int Sp_Delete_Pending_Loan_Installments(Nullable<long> loanId)
        {
            var loanIdParameter = loanId.HasValue ?
                new ObjectParameter("loanId", loanId) :
                new ObjectParameter("loanId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_Pending_Loan_Installments", loanIdParameter);
        }
    
        public virtual int Sp_Delete_Plot_Installment(Nullable<long> insId)
        {
            var insIdParameter = insId.HasValue ?
                new ObjectParameter("insId", insId) :
                new ObjectParameter("insId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_Plot_Installment", insIdParameter);
        }
    
        public virtual int Sp_delete_PlotBounding(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_delete_PlotBounding", idParameter);
        }
    
        public virtual int Sp_Delete_PlotFile_Dc_Parameter(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_PlotFile_Dc_Parameter", idParameter);
        }
    
        public virtual int Sp_Delete_PlotMeter(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_PlotMeter", idParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Sp_Delete_PlotReceipt(Nullable<long> id, Nullable<long> plotid)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var plotidParameter = plotid.HasValue ?
                new ObjectParameter("plotid", plotid) :
                new ObjectParameter("plotid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Sp_Delete_PlotReceipt", idParameter, plotidParameter);
        }
    
        public virtual int Sp_Delete_PlotsOwnerShips(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_PlotsOwnerShips", idParameter);
        }
    
        public virtual int Sp_Delete_Post(Nullable<long> post_id)
        {
            var post_idParameter = post_id.HasValue ?
                new ObjectParameter("Post_id", post_id) :
                new ObjectParameter("Post_id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_Post", post_idParameter);
        }
    
        public virtual int Sp_Delete_POTerms(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_POTerms", idParameter);
        }
    
        public virtual int Sp_Delete_PrjAttendee(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_PrjAttendee", idParameter);
        }
    
        public virtual ObjectResult<Sp_Delete_Project_Result> Sp_Delete_Project(Nullable<long> prjid)
        {
            var prjidParameter = prjid.HasValue ?
                new ObjectParameter("prjid", prjid) :
                new ObjectParameter("prjid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Delete_Project_Result>("Sp_Delete_Project", prjidParameter);
        }
    
        public virtual int Sp_Delete_PropertyDeal_Req(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_PropertyDeal_Req", idParameter);
        }
    
        public virtual int Sp_Delete_PurchaseReq(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_PurchaseReq", idParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Sp_Delete_Receipt(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Sp_Delete_Receipt", idParameter);
        }
    
        public virtual int Sp_Delete_RequestedItem(Nullable<long> id, string mod)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var modParameter = mod != null ?
                new ObjectParameter("mod", mod) :
                new ObjectParameter("mod", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_RequestedItem", idParameter, modParameter);
        }
    
        public virtual int Sp_Delete_Reverted_Bills(Nullable<long> groupId)
        {
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("groupId", groupId) :
                new ObjectParameter("groupId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_Reverted_Bills", groupIdParameter);
        }
    
        public virtual int Sp_Delete_Reverted_Invoices(Nullable<long> groupId)
        {
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("groupId", groupId) :
                new ObjectParameter("groupId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_Reverted_Invoices", groupIdParameter);
        }
    
        public virtual int Sp_Delete_Salary(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_Salary", idParameter);
        }
    
        public virtual int Sp_Delete_Salary_Detail(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_Salary_Detail", idParameter);
        }
    
        public virtual int Sp_Delete_SalaryAllownce(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_SalaryAllownce", idParameter);
        }
    
        public virtual int Sp_Delete_Seller_Data(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_Seller_Data", idParameter);
        }
    
        public virtual int Sp_Delete_ServiceReq(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_ServiceReq", idParameter);
        }
    
        public virtual int Sp_Delete_Ticket_Type(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_Ticket_Type", idParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Sp_Delete_UnSubscribeServiceCharges(Nullable<long> plotid, Nullable<int> sc_id)
        {
            var plotidParameter = plotid.HasValue ?
                new ObjectParameter("plotid", plotid) :
                new ObjectParameter("plotid", typeof(long));
    
            var sc_idParameter = sc_id.HasValue ?
                new ObjectParameter("sc_id", sc_id) :
                new ObjectParameter("sc_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Sp_Delete_UnSubscribeServiceCharges", plotidParameter, sc_idParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Sp_Delete_UnSubscribeServiceCharges_Commercial(Nullable<long> plotid, Nullable<int> sc_id)
        {
            var plotidParameter = plotid.HasValue ?
                new ObjectParameter("plotid", plotid) :
                new ObjectParameter("plotid", typeof(long));
    
            var sc_idParameter = sc_id.HasValue ?
                new ObjectParameter("sc_id", sc_id) :
                new ObjectParameter("sc_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Sp_Delete_UnSubscribeServiceCharges_Commercial", plotidParameter, sc_idParameter);
        }
    
        public virtual int Sp_Delete_UserCompany(Nullable<long> compId, Nullable<long> uid)
        {
            var compIdParameter = compId.HasValue ?
                new ObjectParameter("CompId", compId) :
                new ObjectParameter("CompId", typeof(long));
    
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_UserCompany", compIdParameter, uidParameter);
        }
    
        public virtual int Sp_Delete_UserRole(Nullable<long> roleId, Nullable<long> uid)
        {
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(long));
    
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_UserRole", roleIdParameter, uidParameter);
        }
    
        public virtual int Sp_Delete_Vendor(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_Vendor", idParameter);
        }
    
        public virtual int Sp_Delete_Vendor_Bids(Nullable<long> venId, Nullable<long> grpId, string ty)
        {
            var venIdParameter = venId.HasValue ?
                new ObjectParameter("venId", venId) :
                new ObjectParameter("venId", typeof(long));
    
            var grpIdParameter = grpId.HasValue ?
                new ObjectParameter("grpId", grpId) :
                new ObjectParameter("grpId", typeof(long));
    
            var tyParameter = ty != null ?
                new ObjectParameter("ty", ty) :
                new ObjectParameter("ty", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_Vendor_Bids", venIdParameter, grpIdParameter, tyParameter);
        }
    
        public virtual int Sp_Delete_Vendor_Rep(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_Vendor_Rep", idParameter);
        }
    
        public virtual int Sp_Delete_WorkExperience(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_WorkExperience", idParameter);
        }
    
        public virtual int SP_Files_Log(string cRUD, string extraInformation, string type, string iP_Address, Nullable<long> userid, Nullable<long> fileid)
        {
            var cRUDParameter = cRUD != null ?
                new ObjectParameter("CRUD", cRUD) :
                new ObjectParameter("CRUD", typeof(string));
    
            var extraInformationParameter = extraInformation != null ?
                new ObjectParameter("ExtraInformation", extraInformation) :
                new ObjectParameter("ExtraInformation", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var iP_AddressParameter = iP_Address != null ?
                new ObjectParameter("IP_Address", iP_Address) :
                new ObjectParameter("IP_Address", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(long));
    
            var fileidParameter = fileid.HasValue ?
                new ObjectParameter("fileid", fileid) :
                new ObjectParameter("fileid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Files_Log", cRUDParameter, extraInformationParameter, typeParameter, iP_AddressParameter, useridParameter, fileidParameter);
        }
    
        public virtual int SP_Financial_Log(string cRUD, string extraInformation, string type, string iP_Address, Nullable<long> userid)
        {
            var cRUDParameter = cRUD != null ?
                new ObjectParameter("CRUD", cRUD) :
                new ObjectParameter("CRUD", typeof(string));
    
            var extraInformationParameter = extraInformation != null ?
                new ObjectParameter("ExtraInformation", extraInformation) :
                new ObjectParameter("ExtraInformation", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var iP_AddressParameter = iP_Address != null ?
                new ObjectParameter("IP_Address", iP_Address) :
                new ObjectParameter("IP_Address", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Financial_Log", cRUDParameter, extraInformationParameter, typeParameter, iP_AddressParameter, useridParameter);
        }
    
        public virtual ObjectResult<Sp_Get_AcceptedLeaves_Attendance_Result> Sp_Get_AcceptedLeaves_Attendance(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<long> emp)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var empParameter = emp.HasValue ?
                new ObjectParameter("emp", emp) :
                new ObjectParameter("emp", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_AcceptedLeaves_Attendance_Result>("Sp_Get_AcceptedLeaves_Attendance", startDateParameter, endDateParameter, empParameter);
        }
    
        public virtual ObjectResult<Sp_Get_AcceptedLeaves_Attendance_CurDate_Result> Sp_Get_AcceptedLeaves_Attendance_CurDate(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_AcceptedLeaves_Attendance_CurDate_Result>("Sp_Get_AcceptedLeaves_Attendance_CurDate", dateParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Activities_Result> Sp_Get_Activities(Nullable<long> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Activities_Result>("Sp_Get_Activities", useridParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Activities_List_Result> Sp_Get_Activities_List(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Activities_List_Result>("Sp_Get_Activities_List", fromdateParameter, todateParameter);
        }
    
        public virtual ObjectResult<Sp_Get_AdminProject_Result> Sp_Get_AdminProject()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_AdminProject_Result>("Sp_Get_AdminProject");
        }
    
        public virtual ObjectResult<Sp_Get_All_AssetList_Result> Sp_Get_All_AssetList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_All_AssetList_Result>("Sp_Get_All_AssetList");
        }
    
        public virtual ObjectResult<Sp_Get_All_Assigned_Assets_Result> Sp_Get_All_Assigned_Assets()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_All_Assigned_Assets_Result>("Sp_Get_All_Assigned_Assets");
        }
    
        public virtual ObjectResult<Sp_Get_All_Employess_Salaries_Result> Sp_Get_All_Employess_Salaries(string status)
        {
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_All_Employess_Salaries_Result>("Sp_Get_All_Employess_Salaries", statusParameter);
        }
    
        public virtual ObjectResult<Sp_Get_All_MembersFee_Result> Sp_Get_All_MembersFee(Nullable<long> proid)
        {
            var proidParameter = proid.HasValue ?
                new ObjectParameter("proid", proid) :
                new ObjectParameter("proid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_All_MembersFee_Result>("Sp_Get_All_MembersFee", proidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_AllCustomer_Portal_Result> Sp_Get_AllCustomer_Portal()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_AllCustomer_Portal_Result>("Sp_Get_AllCustomer_Portal");
        }
    
        public virtual ObjectResult<Sp_Get_ALLLeaveRequisition_Result> Sp_Get_ALLLeaveRequisition(Nullable<long> empid)
        {
            var empidParameter = empid.HasValue ?
                new ObjectParameter("Empid", empid) :
                new ObjectParameter("Empid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_ALLLeaveRequisition_Result>("Sp_Get_ALLLeaveRequisition", empidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_AllotmentImage_Result> Sp_Get_AllotmentImage()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_AllotmentImage_Result>("Sp_Get_AllotmentImage");
        }
    
        public virtual ObjectResult<Sp_Get_AllotmentLetter_Result> Sp_Get_AllotmentLetter(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_AllotmentLetter_Result>("Sp_Get_AllotmentLetter", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_AllotmentLetterRequests_Result> Sp_Get_AllotmentLetterRequests()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_AllotmentLetterRequests_Result>("Sp_Get_AllotmentLetterRequests");
        }
    
        public virtual ObjectResult<Sp_Get_AllotmentLetters_Result> Sp_Get_AllotmentLetters(string status)
        {
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_AllotmentLetters_Result>("Sp_Get_AllotmentLetters", statusParameter);
        }
    
        public virtual ObjectResult<Sp_Get_AllotmentLetterTracking_Result> Sp_Get_AllotmentLetterTracking()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_AllotmentLetterTracking_Result>("Sp_Get_AllotmentLetterTracking");
        }
    
        public virtual ObjectResult<Sp_Get_Amount_Result> Sp_Get_Amount(Nullable<long> fileId)
        {
            var fileIdParameter = fileId.HasValue ?
                new ObjectParameter("FileId", fileId) :
                new ObjectParameter("FileId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Amount_Result>("Sp_Get_Amount", fileIdParameter);
        }
    
        public virtual ObjectResult<SP_GET_Applied_Quotes_For_PR_Group_Result> SP_GET_Applied_Quotes_For_PR_Group(Nullable<long> grp)
        {
            var grpParameter = grp.HasValue ?
                new ObjectParameter("grp", grp) :
                new ObjectParameter("grp", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_Applied_Quotes_For_PR_Group_Result>("SP_GET_Applied_Quotes_For_PR_Group", grpParameter);
        }
    
        public virtual ObjectResult<SP_GET_Applied_Quotes_For_PR_List_Result> SP_GET_Applied_Quotes_For_PR_List(string grp)
        {
            var grpParameter = grp != null ?
                new ObjectParameter("grp", grp) :
                new ObjectParameter("grp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_Applied_Quotes_For_PR_List_Result>("SP_GET_Applied_Quotes_For_PR_List", grpParameter);
        }
    
        public virtual ObjectResult<Sp_GET_Applied_Quotes_For_SR_Group_Result> Sp_GET_Applied_Quotes_For_SR_Group(Nullable<long> grp)
        {
            var grpParameter = grp.HasValue ?
                new ObjectParameter("grp", grp) :
                new ObjectParameter("grp", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GET_Applied_Quotes_For_SR_Group_Result>("Sp_GET_Applied_Quotes_For_SR_Group", grpParameter);
        }
    
        public virtual int Sp_Get_AppliedLoan(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Get_AppliedLoan", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Approved_Salaries_Result> Sp_Get_Approved_Salaries()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Approved_Salaries_Result>("Sp_Get_Approved_Salaries");
        }
    
        public virtual ObjectResult<Sp_Get_Arrear_Distributor_Result> Sp_Get_Arrear_Distributor(Nullable<int> month, Nullable<int> year)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Arrear_Distributor_Result>("Sp_Get_Arrear_Distributor", monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Arrear_Salary_Details_Result> Sp_Get_Arrear_Salary_Details(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Arrear_Salary_Details_Result>("Sp_Get_Arrear_Salary_Details", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Arrears_Result> Sp_Get_Arrears(string status, Nullable<int> month, Nullable<int> year)
        {
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Arrears_Result>("Sp_Get_Arrears", statusParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Arrears_Parameter_Result> Sp_Get_Arrears_Parameter(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Arrears_Parameter_Result>("Sp_Get_Arrears_Parameter", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_ArrearsReport_Result> Sp_Get_ArrearsReport(Nullable<System.DateTime> date, string status)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_ArrearsReport_Result>("Sp_Get_ArrearsReport", dateParameter, statusParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Asset_Parameter_Result> Sp_Get_Asset_Parameter(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Asset_Parameter_Result>("Sp_Get_Asset_Parameter", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Assets_Logs_Result> Sp_Get_Assets_Logs()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Assets_Logs_Result>("Sp_Get_Assets_Logs");
        }
    
        public virtual ObjectResult<Sp_Get_Assign_List_Details_Result> Sp_Get_Assign_List_Details(string asetName)
        {
            var asetNameParameter = asetName != null ?
                new ObjectParameter("AsetName", asetName) :
                new ObjectParameter("AsetName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Assign_List_Details_Result>("Sp_Get_Assign_List_Details", asetNameParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Attendance_Period_Result> Sp_Get_Attendance_Period(Nullable<System.DateTime> start, Nullable<System.DateTime> end, string depart)
        {
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("end", end) :
                new ObjectParameter("end", typeof(System.DateTime));
    
            var departParameter = depart != null ?
                new ObjectParameter("depart", depart) :
                new ObjectParameter("depart", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Attendance_Period_Result>("Sp_Get_Attendance_Period", startParameter, endParameter, departParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Attendance_Report_Graphical_Result> Sp_Get_Attendance_Report_Graphical(Nullable<System.DateTime> startTime, Nullable<System.DateTime> endTime, Nullable<long> depart)
        {
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("startTime", startTime) :
                new ObjectParameter("startTime", typeof(System.DateTime));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("endTime", endTime) :
                new ObjectParameter("endTime", typeof(System.DateTime));
    
            var departParameter = depart.HasValue ?
                new ObjectParameter("depart", depart) :
                new ObjectParameter("depart", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Attendance_Report_Graphical_Result>("Sp_Get_Attendance_Report_Graphical", startTimeParameter, endTimeParameter, departParameter);
        }
    
        public virtual ObjectResult<Sp_Get_AttendanceReport_Result> Sp_Get_AttendanceReport(Nullable<System.DateTime> startDt, Nullable<System.DateTime> endDt, Nullable<long> id, Nullable<int> idType)
        {
            var startDtParameter = startDt.HasValue ?
                new ObjectParameter("startDt", startDt) :
                new ObjectParameter("startDt", typeof(System.DateTime));
    
            var endDtParameter = endDt.HasValue ?
                new ObjectParameter("endDt", endDt) :
                new ObjectParameter("endDt", typeof(System.DateTime));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var idTypeParameter = idType.HasValue ?
                new ObjectParameter("idType", idType) :
                new ObjectParameter("idType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_AttendanceReport_Result>("Sp_Get_AttendanceReport", startDtParameter, endDtParameter, idParameter, idTypeParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Balance_Result> Sp_Get_Balance(Nullable<int> file_plot_id)
        {
            var file_plot_idParameter = file_plot_id.HasValue ?
                new ObjectParameter("file_plot_id", file_plot_id) :
                new ObjectParameter("file_plot_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Balance_Result>("Sp_Get_Balance", file_plot_idParameter);
        }
    
        public virtual int Sp_Get_Balance_Sheet_New(Nullable<int> chartlevel, Nullable<System.DateTime> todate)
        {
            var chartlevelParameter = chartlevel.HasValue ?
                new ObjectParameter("chartlevel", chartlevel) :
                new ObjectParameter("chartlevel", typeof(int));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Get_Balance_Sheet_New", chartlevelParameter, todateParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> Sp_Get_BalanceAmount(Nullable<int> file_plot_id)
        {
            var file_plot_idParameter = file_plot_id.HasValue ?
                new ObjectParameter("file_plot_id", file_plot_id) :
                new ObjectParameter("file_plot_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Sp_Get_BalanceAmount", file_plot_idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_BalanceSheet_Result> Sp_Get_BalanceSheet(string head_Code_I, string head_Code_F)
        {
            var head_Code_IParameter = head_Code_I != null ?
                new ObjectParameter("Head_Code_I", head_Code_I) :
                new ObjectParameter("Head_Code_I", typeof(string));
    
            var head_Code_FParameter = head_Code_F != null ?
                new ObjectParameter("Head_Code_F", head_Code_F) :
                new ObjectParameter("Head_Code_F", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_BalanceSheet_Result>("Sp_Get_BalanceSheet", head_Code_IParameter, head_Code_FParameter);
        }
    
        public virtual int SP_GET_BalanceSheet_AllCom(Nullable<System.DateTime> date, string id)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GET_BalanceSheet_AllCom", dateParameter, idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Ballot_Qualifying_File_Result> Sp_Get_Ballot_Qualifying_File()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Ballot_Qualifying_File_Result>("Sp_Get_Ballot_Qualifying_File");
        }
    
        public virtual ObjectResult<Sp_Get_BallotedPlotsList_Result> Sp_Get_BallotedPlotsList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_BallotedPlotsList_Result>("Sp_Get_BallotedPlotsList");
        }
    
        public virtual ObjectResult<Sp_Get_BallotedPlotsList_Param_Result> Sp_Get_BallotedPlotsList_Param(string qry)
        {
            var qryParameter = qry != null ?
                new ObjectParameter("qry", qry) :
                new ObjectParameter("qry", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_BallotedPlotsList_Param_Result>("Sp_Get_BallotedPlotsList_Param", qryParameter);
        }
    
        public virtual ObjectResult<Sp_Get_BallotEventFiles_ForEntry_Result> Sp_Get_BallotEventFiles_ForEntry()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_BallotEventFiles_ForEntry_Result>("Sp_Get_BallotEventFiles_ForEntry");
        }
    
        public virtual ObjectResult<Sp_Get_BallotIntimationLetter_Result> Sp_Get_BallotIntimationLetter(Nullable<long> id, Nullable<long> uid)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_BallotIntimationLetter_Result>("Sp_Get_BallotIntimationLetter", idParameter, uidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_BallotInventory_Result> Sp_Get_BallotInventory(string status)
        {
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_BallotInventory_Result>("Sp_Get_BallotInventory", statusParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Bank_FileList_Result> Sp_Get_Bank_FileList(string fileFormNumber)
        {
            var fileFormNumberParameter = fileFormNumber != null ?
                new ObjectParameter("FileFormNumber", fileFormNumber) :
                new ObjectParameter("FileFormNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Bank_FileList_Result>("Sp_Get_Bank_FileList", fileFormNumberParameter);
        }
    
        public virtual int Sp_Get_Bank_FileList_Test(Nullable<long> fileFormNumber)
        {
            var fileFormNumberParameter = fileFormNumber.HasValue ?
                new ObjectParameter("FileFormNumber", fileFormNumber) :
                new ObjectParameter("FileFormNumber", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Get_Bank_FileList_Test", fileFormNumberParameter);
        }
    
        public virtual ObjectResult<Sp_Get_BankDraft_Result> Sp_Get_BankDraft()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_BankDraft_Result>("Sp_Get_BankDraft");
        }
    
        public virtual ObjectResult<Sp_Get_Bids_Result> Sp_Get_Bids(string status)
        {
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Bids_Result>("Sp_Get_Bids", statusParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Bill_Pending_Entries_Result> Sp_Get_Bill_Pending_Entries(Nullable<int> comp)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Bill_Pending_Entries_Result>("Sp_Get_Bill_Pending_Entries", compParameter);
        }
    
        public virtual ObjectResult<Sp_Get_BillsVendor_Result> Sp_Get_BillsVendor(Nullable<long> id, Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_BillsVendor_Result>("Sp_Get_BillsVendor", idParameter, fromParameter, toParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Block_Result> Sp_Get_Block()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Block_Result>("Sp_Get_Block");
        }
    
        public virtual ObjectResult<Sp_Get_BlockPlotlist_Short_Result> Sp_Get_BlockPlotlist_Short(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_BlockPlotlist_Short_Result>("Sp_Get_BlockPlotlist_Short", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_BlockPlotNoList_Result> Sp_Get_BlockPlotNoList(Nullable<long> id, string type)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_BlockPlotNoList_Result>("Sp_Get_BlockPlotNoList", idParameter, typeParameter);
        }
    
        public virtual ObjectResult<Sp_Get_CA_Head_Result> Sp_Get_CA_Head(Nullable<int> level, Nullable<int> comp)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("level", level) :
                new ObjectParameter("level", typeof(int));
    
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CA_Head_Result>("Sp_Get_CA_Head", levelParameter, compParameter);
        }
    
        public virtual ObjectResult<Sp_Get_CA_Head_FullCode_Result> Sp_Get_CA_Head_FullCode(Nullable<int> level, Nullable<int> comp)
        {
            var levelParameter = level.HasValue ?
                new ObjectParameter("level", level) :
                new ObjectParameter("level", typeof(int));
    
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CA_Head_FullCode_Result>("Sp_Get_CA_Head_FullCode", levelParameter, compParameter);
        }
    
        public virtual ObjectResult<Sp_Get_CA_Head_MultiRef_Result> Sp_Get_CA_Head_MultiRef(string l1, string l2)
        {
            var l1Parameter = l1 != null ?
                new ObjectParameter("L1", l1) :
                new ObjectParameter("L1", typeof(string));
    
            var l2Parameter = l2 != null ?
                new ObjectParameter("L2", l2) :
                new ObjectParameter("L2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CA_Head_MultiRef_Result>("Sp_Get_CA_Head_MultiRef", l1Parameter, l2Parameter);
        }
    
        public virtual ObjectResult<Sp_Get_CA_Head_MultiRef_3_Result> Sp_Get_CA_Head_MultiRef_3(string l1, string l2, string l3)
        {
            var l1Parameter = l1 != null ?
                new ObjectParameter("L1", l1) :
                new ObjectParameter("L1", typeof(string));
    
            var l2Parameter = l2 != null ?
                new ObjectParameter("L2", l2) :
                new ObjectParameter("L2", typeof(string));
    
            var l3Parameter = l3 != null ?
                new ObjectParameter("L3", l3) :
                new ObjectParameter("L3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CA_Head_MultiRef_3_Result>("Sp_Get_CA_Head_MultiRef_3", l1Parameter, l2Parameter, l3Parameter);
        }
    
        public virtual ObjectResult<Sp_Get_CA_Head_MultiRef_4_Result> Sp_Get_CA_Head_MultiRef_4(string l1, string l2, string l3, string l4)
        {
            var l1Parameter = l1 != null ?
                new ObjectParameter("L1", l1) :
                new ObjectParameter("L1", typeof(string));
    
            var l2Parameter = l2 != null ?
                new ObjectParameter("L2", l2) :
                new ObjectParameter("L2", typeof(string));
    
            var l3Parameter = l3 != null ?
                new ObjectParameter("L3", l3) :
                new ObjectParameter("L3", typeof(string));
    
            var l4Parameter = l4 != null ?
                new ObjectParameter("L4", l4) :
                new ObjectParameter("L4", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CA_Head_MultiRef_4_Result>("Sp_Get_CA_Head_MultiRef_4", l1Parameter, l2Parameter, l3Parameter, l4Parameter);
        }
    
        public virtual ObjectResult<Sp_Get_CA_Head_MultiRef_5_Result> Sp_Get_CA_Head_MultiRef_5(string l1, string l2, string l3, string l4, string l5)
        {
            var l1Parameter = l1 != null ?
                new ObjectParameter("L1", l1) :
                new ObjectParameter("L1", typeof(string));
    
            var l2Parameter = l2 != null ?
                new ObjectParameter("L2", l2) :
                new ObjectParameter("L2", typeof(string));
    
            var l3Parameter = l3 != null ?
                new ObjectParameter("L3", l3) :
                new ObjectParameter("L3", typeof(string));
    
            var l4Parameter = l4 != null ?
                new ObjectParameter("L4", l4) :
                new ObjectParameter("L4", typeof(string));
    
            var l5Parameter = l5 != null ?
                new ObjectParameter("L5", l5) :
                new ObjectParameter("L5", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CA_Head_MultiRef_5_Result>("Sp_Get_CA_Head_MultiRef_5", l1Parameter, l2Parameter, l3Parameter, l4Parameter, l5Parameter);
        }
    
        public virtual ObjectResult<Sp_Get_CA_Head_MultiRef_Fixed_Param_4_Result> Sp_Get_CA_Head_MultiRef_Fixed_Param_4(string l1, string l2, string l3, string l4)
        {
            var l1Parameter = l1 != null ?
                new ObjectParameter("L1", l1) :
                new ObjectParameter("L1", typeof(string));
    
            var l2Parameter = l2 != null ?
                new ObjectParameter("L2", l2) :
                new ObjectParameter("L2", typeof(string));
    
            var l3Parameter = l3 != null ?
                new ObjectParameter("L3", l3) :
                new ObjectParameter("L3", typeof(string));
    
            var l4Parameter = l4 != null ?
                new ObjectParameter("L4", l4) :
                new ObjectParameter("L4", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CA_Head_MultiRef_Fixed_Param_4_Result>("Sp_Get_CA_Head_MultiRef_Fixed_Param_4", l1Parameter, l2Parameter, l3Parameter, l4Parameter);
        }
    
        public virtual ObjectResult<Sp_Get_CA_Head_MultiRef_Fixed_Param_5_Result> Sp_Get_CA_Head_MultiRef_Fixed_Param_5(string l1, string l2, string l3, string l4, string l5)
        {
            var l1Parameter = l1 != null ?
                new ObjectParameter("L1", l1) :
                new ObjectParameter("L1", typeof(string));
    
            var l2Parameter = l2 != null ?
                new ObjectParameter("L2", l2) :
                new ObjectParameter("L2", typeof(string));
    
            var l3Parameter = l3 != null ?
                new ObjectParameter("L3", l3) :
                new ObjectParameter("L3", typeof(string));
    
            var l4Parameter = l4 != null ?
                new ObjectParameter("L4", l4) :
                new ObjectParameter("L4", typeof(string));
    
            var l5Parameter = l5 != null ?
                new ObjectParameter("L5", l5) :
                new ObjectParameter("L5", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CA_Head_MultiRef_Fixed_Param_5_Result>("Sp_Get_CA_Head_MultiRef_Fixed_Param_5", l1Parameter, l2Parameter, l3Parameter, l4Parameter, l5Parameter);
        }
    
        public virtual ObjectResult<Sp_Get_CA_Head_Param_Code_Result> Sp_Get_CA_Head_Param_Code(string headcode)
        {
            var headcodeParameter = headcode != null ?
                new ObjectParameter("headcode", headcode) :
                new ObjectParameter("headcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CA_Head_Param_Code_Result>("Sp_Get_CA_Head_Param_Code", headcodeParameter);
        }
    
        public virtual ObjectResult<Sp_Get_CA_Head_Param_Code_WildCard_Result> Sp_Get_CA_Head_Param_Code_WildCard(string s, string headcode, Nullable<int> comp)
        {
            var sParameter = s != null ?
                new ObjectParameter("s", s) :
                new ObjectParameter("s", typeof(string));
    
            var headcodeParameter = headcode != null ?
                new ObjectParameter("headcode", headcode) :
                new ObjectParameter("headcode", typeof(string));
    
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CA_Head_Param_Code_WildCard_Result>("Sp_Get_CA_Head_Param_Code_WildCard", sParameter, headcodeParameter, compParameter);
        }
    
        public virtual ObjectResult<Sp_Get_CA_Head_Parameter_Result> Sp_Get_CA_Head_Parameter(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CA_Head_Parameter_Result>("Sp_Get_CA_Head_Parameter", idParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> Sp_Get_CA_Head_Receivable_Balance(Nullable<int> head)
        {
            var headParameter = head.HasValue ?
                new ObjectParameter("head", head) :
                new ObjectParameter("head", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Sp_Get_CA_Head_Receivable_Balance", headParameter);
        }
    
        public virtual ObjectResult<Sp_Get_CA_Head_Search_Result> Sp_Get_CA_Head_Search(string q)
        {
            var qParameter = q != null ?
                new ObjectParameter("q", q) :
                new ObjectParameter("q", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CA_Head_Search_Result>("Sp_Get_CA_Head_Search", qParameter);
        }
    
        public virtual ObjectResult<Sp_Get_CA_LeaveNodes_Result> Sp_Get_CA_LeaveNodes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CA_LeaveNodes_Result>("Sp_Get_CA_LeaveNodes");
        }
    
        public virtual ObjectResult<Sp_Get_CA_LeaveNodes_Fixed_Assets_Result> Sp_Get_CA_LeaveNodes_Fixed_Assets()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CA_LeaveNodes_Fixed_Assets_Result>("Sp_Get_CA_LeaveNodes_Fixed_Assets");
        }
    
        public virtual ObjectResult<Sp_Get_CA_LeaveNodes_HeadSearch_Result> Sp_Get_CA_LeaveNodes_HeadSearch(string s, Nullable<int> comp)
        {
            var sParameter = s != null ?
                new ObjectParameter("s", s) :
                new ObjectParameter("s", typeof(string));
    
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CA_LeaveNodes_HeadSearch_Result>("Sp_Get_CA_LeaveNodes_HeadSearch", sParameter, compParameter);
        }
    
        public virtual ObjectResult<Sp_Get_CA_LeaveNodes_HeadSearch_Cash_Bank_Result> Sp_Get_CA_LeaveNodes_HeadSearch_Cash_Bank(string s, Nullable<int> comp)
        {
            var sParameter = s != null ?
                new ObjectParameter("s", s) :
                new ObjectParameter("s", typeof(string));
    
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CA_LeaveNodes_HeadSearch_Cash_Bank_Result>("Sp_Get_CA_LeaveNodes_HeadSearch_Cash_Bank", sParameter, compParameter);
        }
    
        public virtual ObjectResult<Sp_Get_CA_LeaveNodes_HeadSearch_Inventory_Expenses_Result> Sp_Get_CA_LeaveNodes_HeadSearch_Inventory_Expenses(string s, Nullable<int> comp)
        {
            var sParameter = s != null ?
                new ObjectParameter("s", s) :
                new ObjectParameter("s", typeof(string));
    
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CA_LeaveNodes_HeadSearch_Inventory_Expenses_Result>("Sp_Get_CA_LeaveNodes_HeadSearch_Inventory_Expenses", sParameter, compParameter);
        }
    
        public virtual ObjectResult<Sp_Get_CA_LeaveNodes_HeadSearch_Liabilities_Result> Sp_Get_CA_LeaveNodes_HeadSearch_Liabilities(string s, Nullable<int> comp)
        {
            var sParameter = s != null ?
                new ObjectParameter("s", s) :
                new ObjectParameter("s", typeof(string));
    
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CA_LeaveNodes_HeadSearch_Liabilities_Result>("Sp_Get_CA_LeaveNodes_HeadSearch_Liabilities", sParameter, compParameter);
        }
    
        public virtual ObjectResult<Sp_Get_CA_LeaveNodes_HeadSearch_Parameter_Result> Sp_Get_CA_LeaveNodes_HeadSearch_Parameter(string s, string code, Nullable<int> comp)
        {
            var sParameter = s != null ?
                new ObjectParameter("s", s) :
                new ObjectParameter("s", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CA_LeaveNodes_HeadSearch_Parameter_Result>("Sp_Get_CA_LeaveNodes_HeadSearch_Parameter", sParameter, codeParameter, compParameter);
        }
    
        public virtual ObjectResult<Sp_Get_CA_LeaveNodes_HeadSearch_TaxAccounts_Result> Sp_Get_CA_LeaveNodes_HeadSearch_TaxAccounts(string s, Nullable<int> comp)
        {
            var sParameter = s != null ?
                new ObjectParameter("s", s) :
                new ObjectParameter("s", typeof(string));
    
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CA_LeaveNodes_HeadSearch_TaxAccounts_Result>("Sp_Get_CA_LeaveNodes_HeadSearch_TaxAccounts", sParameter, compParameter);
        }
    
        public virtual ObjectResult<Sp_Get_CA_Mapper_Head_Result> Sp_Get_CA_Mapper_Head(string module, string moduleType, string transType, string acctType, Nullable<long> companyId)
        {
            var moduleParameter = module != null ?
                new ObjectParameter("Module", module) :
                new ObjectParameter("Module", typeof(string));
    
            var moduleTypeParameter = moduleType != null ?
                new ObjectParameter("ModuleType", moduleType) :
                new ObjectParameter("ModuleType", typeof(string));
    
            var transTypeParameter = transType != null ?
                new ObjectParameter("TransType", transType) :
                new ObjectParameter("TransType", typeof(string));
    
            var acctTypeParameter = acctType != null ?
                new ObjectParameter("AcctType", acctType) :
                new ObjectParameter("AcctType", typeof(string));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CA_Mapper_Head_Result>("Sp_Get_CA_Mapper_Head", moduleParameter, moduleTypeParameter, transTypeParameter, acctTypeParameter, companyIdParameter);
        }
    
        public virtual ObjectResult<Sp_Get_CA_OpeningClosing_Balance_Result> Sp_Get_CA_OpeningClosing_Balance(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string type, Nullable<int> level, Nullable<int> compId)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var levelParameter = level.HasValue ?
                new ObjectParameter("level", level) :
                new ObjectParameter("level", typeof(int));
    
            var compIdParameter = compId.HasValue ?
                new ObjectParameter("compId", compId) :
                new ObjectParameter("compId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CA_OpeningClosing_Balance_Result>("Sp_Get_CA_OpeningClosing_Balance", fromParameter, toParameter, typeParameter, levelParameter, compIdParameter);
        }
    
        public virtual ObjectResult<Sp_Get_CancelFilesReport_Result> Sp_Get_CancelFilesReport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CancelFilesReport_Result>("Sp_Get_CancelFilesReport");
        }
    
        public virtual ObjectResult<Sp_Get_Cancellation_Plot_Result> Sp_Get_Cancellation_Plot()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Cancellation_Plot_Result>("Sp_Get_Cancellation_Plot");
        }
    
        public virtual ObjectResult<Sp_Get_Cancellation_Shop_Result> Sp_Get_Cancellation_Shop()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Cancellation_Shop_Result>("Sp_Get_Cancellation_Shop");
        }
    
        public virtual ObjectResult<SP_Get_CancelledFiles_Result> SP_Get_CancelledFiles()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Get_CancelledFiles_Result>("SP_Get_CancelledFiles");
        }
    
        public virtual ObjectResult<Sp_Get_CancelPlotsReport_Result> Sp_Get_CancelPlotsReport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CancelPlotsReport_Result>("Sp_Get_CancelPlotsReport");
        }
    
        public virtual ObjectResult<Sp_Get_CancelReq_Result> Sp_Get_CancelReq(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, string userid)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CancelReq_Result>("Sp_Get_CancelReq", fromdateParameter, todateParameter, useridParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Cash_Bank_Accounts_Result> Sp_Get_Cash_Bank_Accounts(string a, string b)
        {
            var aParameter = a != null ?
                new ObjectParameter("a", a) :
                new ObjectParameter("a", typeof(string));
    
            var bParameter = b != null ?
                new ObjectParameter("b", b) :
                new ObjectParameter("b", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Cash_Bank_Accounts_Result>("Sp_Get_Cash_Bank_Accounts", aParameter, bParameter);
        }
    
        public virtual ObjectResult<Sp_Get_CashBankBook_Closing_Result> Sp_Get_CashBankBook_Closing(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string type, string code, string u)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var uParameter = u != null ?
                new ObjectParameter("u", u) :
                new ObjectParameter("u", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CashBankBook_Closing_Result>("Sp_Get_CashBankBook_Closing", fromParameter, toParameter, typeParameter, codeParameter, uParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Cashier_ArrearsReport_Result> Sp_Get_Cashier_ArrearsReport(Nullable<long> uid, Nullable<System.DateTime> dat)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(long));
    
            var datParameter = dat.HasValue ?
                new ObjectParameter("dat", dat) :
                new ObjectParameter("dat", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Cashier_ArrearsReport_Result>("Sp_Get_Cashier_ArrearsReport", uidParameter, datParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Cashiers_List_Result> Sp_Get_Cashiers_List()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Cashiers_List_Result>("Sp_Get_Cashiers_List");
        }
    
        public virtual ObjectResult<Sp_Get_Cbp_ReferenceNumber_Result> Sp_Get_Cbp_ReferenceNumber(Nullable<long> refno)
        {
            var refnoParameter = refno.HasValue ?
                new ObjectParameter("refno", refno) :
                new ObjectParameter("refno", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Cbp_ReferenceNumber_Result>("Sp_Get_Cbp_ReferenceNumber", refnoParameter);
        }
    
        public virtual ObjectResult<Sp_Get_ChDDPO_Result> Sp_Get_ChDDPO(string ch_dd_po, string status, Nullable<System.DateTime> from, Nullable<System.DateTime> to, string vouchertype, Nullable<int> comp_Id)
        {
            var ch_dd_poParameter = ch_dd_po != null ?
                new ObjectParameter("Ch_dd_po", ch_dd_po) :
                new ObjectParameter("Ch_dd_po", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var vouchertypeParameter = vouchertype != null ?
                new ObjectParameter("vouchertype", vouchertype) :
                new ObjectParameter("vouchertype", typeof(string));
    
            var comp_IdParameter = comp_Id.HasValue ?
                new ObjectParameter("comp_Id", comp_Id) :
                new ObjectParameter("comp_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_ChDDPO_Result>("Sp_Get_ChDDPO", ch_dd_poParameter, statusParameter, fromParameter, toParameter, vouchertypeParameter, comp_IdParameter);
        }
    
        public virtual ObjectResult<Sp_Get_ChDDPO_Leads_Result> Sp_Get_ChDDPO_Leads(string ch_dd_po, string status, string comp)
        {
            var ch_dd_poParameter = ch_dd_po != null ?
                new ObjectParameter("Ch_dd_po", ch_dd_po) :
                new ObjectParameter("Ch_dd_po", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var compParameter = comp != null ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_ChDDPO_Leads_Result>("Sp_Get_ChDDPO_Leads", ch_dd_poParameter, statusParameter, compParameter);
        }
    
        public virtual ObjectResult<Sp_Get_ChDDPODetails_Multi_Result> Sp_Get_ChDDPODetails_Multi(string chPoDdIds)
        {
            var chPoDdIdsParameter = chPoDdIds != null ?
                new ObjectParameter("ChPoDdIds", chPoDdIds) :
                new ObjectParameter("ChPoDdIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_ChDDPODetails_Multi_Result>("Sp_Get_ChDDPODetails_Multi", chPoDdIdsParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Cheque_BankDraft_PayOrder_MultiParamter_Result> Sp_Get_Cheque_BankDraft_PayOrder_MultiParamter(string no, string stat, string bank, Nullable<System.DateTime> date, string vouchertype)
        {
            var noParameter = no != null ?
                new ObjectParameter("No", no) :
                new ObjectParameter("No", typeof(string));
    
            var statParameter = stat != null ?
                new ObjectParameter("stat", stat) :
                new ObjectParameter("stat", typeof(string));
    
            var bankParameter = bank != null ?
                new ObjectParameter("bank", bank) :
                new ObjectParameter("bank", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var vouchertypeParameter = vouchertype != null ?
                new ObjectParameter("vouchertype", vouchertype) :
                new ObjectParameter("vouchertype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Cheque_BankDraft_PayOrder_MultiParamter_Result>("Sp_Get_Cheque_BankDraft_PayOrder_MultiParamter", noParameter, statParameter, bankParameter, dateParameter, vouchertypeParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Cheque_BankDraft_PayOrder_Paramter_Result> Sp_Get_Cheque_BankDraft_PayOrder_Paramter(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Cheque_BankDraft_PayOrder_Paramter_Result>("Sp_Get_Cheque_BankDraft_PayOrder_Paramter", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Cheques_Result> Sp_Get_Cheques()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Cheques_Result>("Sp_Get_Cheques");
        }
    
        public virtual ObjectResult<Sp_Get_ClosedSAMCashierVoucherUser_Report_Result> Sp_Get_ClosedSAMCashierVoucherUser_Report(Nullable<long> userid, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_ClosedSAMCashierVoucherUser_Report_Result>("Sp_Get_ClosedSAMCashierVoucherUser_Report", useridParameter, fromdateParameter, todateParameter);
        }
    
        public virtual ObjectResult<Sp_Get_COA_Head_Code_Result> Sp_Get_COA_Head_Code(string code)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_COA_Head_Code_Result>("Sp_Get_COA_Head_Code", codeParameter);
        }
    
        public virtual ObjectResult<Sp_Get_COAMapper_BankAccounts_Result> Sp_Get_COAMapper_BankAccounts(Nullable<int> comp)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_COAMapper_BankAccounts_Result>("Sp_Get_COAMapper_BankAccounts", compParameter);
        }
    
        public virtual ObjectResult<Sp_Get_COAMapper_Blocks_EC_Result> Sp_Get_COAMapper_Blocks_EC(Nullable<int> comp)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_COAMapper_Blocks_EC_Result>("Sp_Get_COAMapper_Blocks_EC", compParameter);
        }
    
        public virtual ObjectResult<Sp_Get_COAMapper_Blocks_EC_Income_Result> Sp_Get_COAMapper_Blocks_EC_Income(Nullable<int> comp)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_COAMapper_Blocks_EC_Income_Result>("Sp_Get_COAMapper_Blocks_EC_Income", compParameter);
        }
    
        public virtual ObjectResult<Sp_Get_COAMapper_Blocks_Sales_Commercial_Result> Sp_Get_COAMapper_Blocks_Sales_Commercial(Nullable<int> comp)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_COAMapper_Blocks_Sales_Commercial_Result>("Sp_Get_COAMapper_Blocks_Sales_Commercial", compParameter);
        }
    
        public virtual ObjectResult<Sp_Get_COAMapper_Blocks_Sales_Residential_Result> Sp_Get_COAMapper_Blocks_Sales_Residential(Nullable<int> comp)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_COAMapper_Blocks_Sales_Residential_Result>("Sp_Get_COAMapper_Blocks_Sales_Residential", compParameter);
        }
    
        public virtual ObjectResult<Sp_Get_COAMapper_Blocks_SC_Result> Sp_Get_COAMapper_Blocks_SC(Nullable<int> comp)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_COAMapper_Blocks_SC_Result>("Sp_Get_COAMapper_Blocks_SC", compParameter);
        }
    
        public virtual ObjectResult<Sp_Get_COAMapper_Blocks_SC_Income_Result> Sp_Get_COAMapper_Blocks_SC_Income(Nullable<int> comp)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_COAMapper_Blocks_SC_Income_Result>("Sp_Get_COAMapper_Blocks_SC_Income", compParameter);
        }
    
        public virtual ObjectResult<Sp_Get_COAMapper_BlocksCommercial_Result> Sp_Get_COAMapper_BlocksCommercial(Nullable<int> comp)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_COAMapper_BlocksCommercial_Result>("Sp_Get_COAMapper_BlocksCommercial", compParameter);
        }
    
        public virtual ObjectResult<Sp_Get_COAMapper_BlocksResidential_Result> Sp_Get_COAMapper_BlocksResidential(Nullable<int> comp)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_COAMapper_BlocksResidential_Result>("Sp_Get_COAMapper_BlocksResidential", compParameter);
        }
    
        public virtual ObjectResult<Sp_Get_COAMapper_Dealerlist_Result> Sp_Get_COAMapper_Dealerlist(Nullable<int> comp)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_COAMapper_Dealerlist_Result>("Sp_Get_COAMapper_Dealerlist", compParameter);
        }
    
        public virtual ObjectResult<Sp_Get_COAMapper_Dealerlist_Commission_Result> Sp_Get_COAMapper_Dealerlist_Commission()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_COAMapper_Dealerlist_Commission_Result>("Sp_Get_COAMapper_Dealerlist_Commission");
        }
    
        public virtual ObjectResult<Sp_Get_COAMapper_OnlineBank_Result> Sp_Get_COAMapper_OnlineBank(Nullable<int> comp)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_COAMapper_OnlineBank_Result>("Sp_Get_COAMapper_OnlineBank", compParameter);
        }
    
        public virtual ObjectResult<Sp_Get_COAMapper_PettyCash_Result> Sp_Get_COAMapper_PettyCash(Nullable<int> comp)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_COAMapper_PettyCash_Result>("Sp_Get_COAMapper_PettyCash", compParameter);
        }
    
        public virtual ObjectResult<Sp_Get_COAMapper_PettyCash_Expense_Result> Sp_Get_COAMapper_PettyCash_Expense(Nullable<int> comp_id)
        {
            var comp_idParameter = comp_id.HasValue ?
                new ObjectParameter("comp_id", comp_id) :
                new ObjectParameter("comp_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_COAMapper_PettyCash_Expense_Result>("Sp_Get_COAMapper_PettyCash_Expense", comp_idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_COAMapper_Prj_Result> Sp_Get_COAMapper_Prj(Nullable<int> comp)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_COAMapper_Prj_Result>("Sp_Get_COAMapper_Prj", compParameter);
        }
    
        public virtual ObjectResult<Sp_Get_COAMapper_Vendor_Result> Sp_Get_COAMapper_Vendor(Nullable<int> comp)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_COAMapper_Vendor_Result>("Sp_Get_COAMapper_Vendor", compParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Commercial_Cancelation_Req_Result> Sp_Get_Commercial_Cancelation_Req(string role)
        {
            var roleParameter = role != null ?
                new ObjectParameter("role", role) :
                new ObjectParameter("role", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Commercial_Cancelation_Req_Result>("Sp_Get_Commercial_Cancelation_Req", roleParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Commercial_Project_Inventory_Result> Sp_Get_Commercial_Project_Inventory(string project)
        {
            var projectParameter = project != null ?
                new ObjectParameter("project", project) :
                new ObjectParameter("project", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Commercial_Project_Inventory_Result>("Sp_Get_Commercial_Project_Inventory", projectParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Commercial_Project_Leads_Result> Sp_Get_Commercial_Project_Leads(string project, Nullable<System.DateTime> from, Nullable<System.DateTime> to, Nullable<long> createdby)
        {
            var projectParameter = project != null ?
                new ObjectParameter("project", project) :
                new ObjectParameter("project", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var createdbyParameter = createdby.HasValue ?
                new ObjectParameter("createdby", createdby) :
                new ObjectParameter("createdby", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Commercial_Project_Leads_Result>("Sp_Get_Commercial_Project_Leads", projectParameter, fromParameter, toParameter, createdbyParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Commercial_Receipt_Request_Result> Sp_Get_Commercial_Receipt_Request(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Commercial_Receipt_Request_Result>("Sp_Get_Commercial_Receipt_Request", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Commercial_Search_Result> Sp_Get_Commercial_Search(Nullable<int> option, string text1)
        {
            var optionParameter = option.HasValue ?
                new ObjectParameter("option", option) :
                new ObjectParameter("option", typeof(int));
    
            var text1Parameter = text1 != null ?
                new ObjectParameter("text1", text1) :
                new ObjectParameter("text1", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Commercial_Search_Result>("Sp_Get_Commercial_Search", optionParameter, text1Parameter);
        }
    
        public virtual ObjectResult<Sp_Get_Commercial_Unit_Result> Sp_Get_Commercial_Unit(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Commercial_Unit_Result>("Sp_Get_Commercial_Unit", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Commercial_Units_By_Param_Result> Sp_Get_Commercial_Units_By_Param(Nullable<long> projectId, Nullable<long> floorId, string type)
        {
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("projectId", projectId) :
                new ObjectParameter("projectId", typeof(long));
    
            var floorIdParameter = floorId.HasValue ?
                new ObjectParameter("floorId", floorId) :
                new ObjectParameter("floorId", typeof(long));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Commercial_Units_By_Param_Result>("Sp_Get_Commercial_Units_By_Param", projectIdParameter, floorIdParameter, typeParameter);
        }
    
        public virtual ObjectResult<Sp_Get_CommercialAllotmentLetterRequests_Result> Sp_Get_CommercialAllotmentLetterRequests()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CommercialAllotmentLetterRequests_Result>("Sp_Get_CommercialAllotmentLetterRequests");
        }
    
        public virtual ObjectResult<Sp_Get_CommercialAppFormDetails_Result> Sp_Get_CommercialAppFormDetails(Nullable<long> id, string romno)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var romnoParameter = romno != null ?
                new ObjectParameter("romno", romno) :
                new ObjectParameter("romno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CommercialAppFormDetails_Result>("Sp_Get_CommercialAppFormDetails", idParameter, romnoParameter);
        }
    
        public virtual ObjectResult<Sp_Get_CommercialComments_Result> Sp_Get_CommercialComments(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CommercialComments_Result>("Sp_Get_CommercialComments", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_CommercialData_Result> Sp_Get_CommercialData(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CommercialData_Result>("Sp_Get_CommercialData", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_CommercialDetailData_Result> Sp_Get_CommercialDetailData(Nullable<long> comId)
        {
            var comIdParameter = comId.HasValue ?
                new ObjectParameter("ComId", comId) :
                new ObjectParameter("ComId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CommercialDetailData_Result>("Sp_Get_CommercialDetailData", comIdParameter);
        }
    
        public virtual ObjectResult<Sp_Get_CommercialElectricCharges_ById_Result> Sp_Get_CommercialElectricCharges_ById(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CommercialElectricCharges_ById_Result>("Sp_Get_CommercialElectricCharges_ById", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_CommercialElectricCharges_ByProject_Result> Sp_Get_CommercialElectricCharges_ByProject(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CommercialElectricCharges_ByProject_Result>("Sp_Get_CommercialElectricCharges_ByProject", idParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Get_CommercialIdsServiceCharges()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Get_CommercialIdsServiceCharges");
        }
    
        public virtual ObjectResult<Sp_Get_CommercialInstallments_Result> Sp_Get_CommercialInstallments(Nullable<long> comid)
        {
            var comidParameter = comid.HasValue ?
                new ObjectParameter("comid", comid) :
                new ObjectParameter("comid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CommercialInstallments_Result>("Sp_Get_CommercialInstallments", comidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_CommercialInstallmentStructure_Result> Sp_Get_CommercialInstallmentStructure(Nullable<long> filid)
        {
            var filidParameter = filid.HasValue ?
                new ObjectParameter("filid", filid) :
                new ObjectParameter("filid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CommercialInstallmentStructure_Result>("Sp_Get_CommercialInstallmentStructure", filidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_CommercialLastOwner_Result> Sp_Get_CommercialLastOwner(Nullable<long> comid)
        {
            var comidParameter = comid.HasValue ?
                new ObjectParameter("comid", comid) :
                new ObjectParameter("comid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CommercialLastOwner_Result>("Sp_Get_CommercialLastOwner", comidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_CommercialManagementDetail_Result> Sp_Get_CommercialManagementDetail(Nullable<long> projectid)
        {
            var projectidParameter = projectid.HasValue ?
                new ObjectParameter("Projectid", projectid) :
                new ObjectParameter("Projectid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CommercialManagementDetail_Result>("Sp_Get_CommercialManagementDetail", projectidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_CommercialMeterDetails_Result> Sp_Get_CommercialMeterDetails(Nullable<long> projectid)
        {
            var projectidParameter = projectid.HasValue ?
                new ObjectParameter("Projectid", projectid) :
                new ObjectParameter("Projectid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CommercialMeterDetails_Result>("Sp_Get_CommercialMeterDetails", projectidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_CommercialMeterLastReading_Result> Sp_Get_CommercialMeterLastReading()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CommercialMeterLastReading_Result>("Sp_Get_CommercialMeterLastReading");
        }
    
        public virtual ObjectResult<Sp_Get_CommercialOwnerDetail_Result> Sp_Get_CommercialOwnerDetail(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CommercialOwnerDetail_Result>("Sp_Get_CommercialOwnerDetail", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_CommercialOwners_Result> Sp_Get_CommercialOwners(Nullable<long> comRomId)
        {
            var comRomIdParameter = comRomId.HasValue ?
                new ObjectParameter("comRomId", comRomId) :
                new ObjectParameter("comRomId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CommercialOwners_Result>("Sp_Get_CommercialOwners", comRomIdParameter);
        }
    
        public virtual ObjectResult<Sp_Get_CommercialPlotRoom_Result> Sp_Get_CommercialPlotRoom(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CommercialPlotRoom_Result>("Sp_Get_CommercialPlotRoom", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_CommercialPossessionsList_Result> Sp_Get_CommercialPossessionsList(Nullable<int> tp)
        {
            var tpParameter = tp.HasValue ?
                new ObjectParameter("tp", tp) :
                new ObjectParameter("tp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CommercialPossessionsList_Result>("Sp_Get_CommercialPossessionsList", tpParameter);
        }
    
        public virtual ObjectResult<Sp_Get_CommercialProjectShops_Result> Sp_Get_CommercialProjectShops(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CommercialProjectShops_Result>("Sp_Get_CommercialProjectShops", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Commercialrooms_Result> Sp_Get_Commercialrooms(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Commercialrooms_Result>("Sp_Get_Commercialrooms", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_CommercialSecondLastOwner_Result> Sp_Get_CommercialSecondLastOwner(Nullable<long> comId)
        {
            var comIdParameter = comId.HasValue ?
                new ObjectParameter("comId", comId) :
                new ObjectParameter("comId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CommercialSecondLastOwner_Result>("Sp_Get_CommercialSecondLastOwner", comIdParameter);
        }
    
        public virtual ObjectResult<Sp_Get_CommercialServiceCharges_ById_Result> Sp_Get_CommercialServiceCharges_ById(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CommercialServiceCharges_ById_Result>("Sp_Get_CommercialServiceCharges_ById", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_CommercialServiceCharges_ByProject_Result> Sp_Get_CommercialServiceCharges_ByProject(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CommercialServiceCharges_ByProject_Result>("Sp_Get_CommercialServiceCharges_ByProject", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_CommercialServiceChargesList_Result> Sp_Get_CommercialServiceChargesList(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CommercialServiceChargesList_Result>("Sp_Get_CommercialServiceChargesList", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_CommercialServiceChargesTypeList_Result> Sp_Get_CommercialServiceChargesTypeList(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CommercialServiceChargesTypeList_Result>("Sp_Get_CommercialServiceChargesTypeList", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Companies_Result> Sp_Get_Companies()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Companies_Result>("Sp_Get_Companies");
        }
    
        public virtual ObjectResult<Sp_Get_CompDepartment_Result> Sp_Get_CompDepartment(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CompDepartment_Result>("Sp_Get_CompDepartment", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_CompDepDes_Result> Sp_Get_CompDepDes(string type)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CompDepDes_Result>("Sp_Get_CompDepDes", typeParameter);
        }
    
        public virtual ObjectResult<Sp_Get_CompDepDesig_All_Result> Sp_Get_CompDepDesig_All()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CompDepDesig_All_Result>("Sp_Get_CompDepDesig_All");
        }
    
        public virtual ObjectResult<Sp_Get_CompDepList_ByParam_Result> Sp_Get_CompDepList_ByParam(string tp)
        {
            var tpParameter = tp != null ?
                new ObjectParameter("tp", tp) :
                new ObjectParameter("tp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CompDepList_ByParam_Result>("Sp_Get_CompDepList_ByParam", tpParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Completed_Invoices_Result> Sp_Get_Completed_Invoices()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Completed_Invoices_Result>("Sp_Get_Completed_Invoices");
        }
    
        public virtual ObjectResult<Sp_Get_Completed_Invoices_Receipts_Result> Sp_Get_Completed_Invoices_Receipts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Completed_Invoices_Receipts_Result>("Sp_Get_Completed_Invoices_Receipts");
        }
    
        public virtual ObjectResult<Sp_Get_ComProj_SalesReport_Result> Sp_Get_ComProj_SalesReport(string projectName, string mod)
        {
            var projectNameParameter = projectName != null ?
                new ObjectParameter("projectName", projectName) :
                new ObjectParameter("projectName", typeof(string));
    
            var modParameter = mod != null ?
                new ObjectParameter("Mod", mod) :
                new ObjectParameter("Mod", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_ComProj_SalesReport_Result>("Sp_Get_ComProj_SalesReport", projectNameParameter, modParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Confirmation_Info_Result> Sp_Get_Confirmation_Info(Nullable<long> fileformid)
        {
            var fileformidParameter = fileformid.HasValue ?
                new ObjectParameter("fileformid", fileformid) :
                new ObjectParameter("fileformid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Confirmation_Info_Result>("Sp_Get_Confirmation_Info", fileformidParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Sp_Get_CountFiles(string cNIC)
        {
            var cNICParameter = cNIC != null ?
                new ObjectParameter("CNIC", cNIC) :
                new ObjectParameter("CNIC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Sp_Get_CountFiles", cNICParameter);
        }
    
        public virtual ObjectResult<Sp_Get_CurrentOwner_File_Result> Sp_Get_CurrentOwner_File(Nullable<long> fileformnum)
        {
            var fileformnumParameter = fileformnum.HasValue ?
                new ObjectParameter("fileformnum", fileformnum) :
                new ObjectParameter("fileformnum", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CurrentOwner_File_Result>("Sp_Get_CurrentOwner_File", fileformnumParameter);
        }
    
        public virtual ObjectResult<Sp_Get_CurrentOwner_File_Id_Result> Sp_Get_CurrentOwner_File_Id(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CurrentOwner_File_Id_Result>("Sp_Get_CurrentOwner_File_Id", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_CustomerFamilyProperties_Result> Sp_Get_CustomerFamilyProperties(Nullable<int> cust_ID)
        {
            var cust_IDParameter = cust_ID.HasValue ?
                new ObjectParameter("Cust_ID", cust_ID) :
                new ObjectParameter("Cust_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CustomerFamilyProperties_Result>("Sp_Get_CustomerFamilyProperties", cust_IDParameter);
        }
    
        public virtual ObjectResult<Sp_Get_CustomerInfo_Result> Sp_Get_CustomerInfo(string fileNo)
        {
            var fileNoParameter = fileNo != null ?
                new ObjectParameter("FileNo", fileNo) :
                new ObjectParameter("FileNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CustomerInfo_Result>("Sp_Get_CustomerInfo", fileNoParameter);
        }
    
        public virtual ObjectResult<Sp_Get_CustomerLoginInformation_Result> Sp_Get_CustomerLoginInformation(string phoneNumber, string cNIC)
        {
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var cNICParameter = cNIC != null ?
                new ObjectParameter("CNIC", cNIC) :
                new ObjectParameter("CNIC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CustomerLoginInformation_Result>("Sp_Get_CustomerLoginInformation", phoneNumberParameter, cNICParameter);
        }
    
        public virtual ObjectResult<Sp_Get_CustomerRegisterationInformation_Result> Sp_Get_CustomerRegisterationInformation(string phoneNumber)
        {
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CustomerRegisterationInformation_Result>("Sp_Get_CustomerRegisterationInformation", phoneNumberParameter);
        }
    
        public virtual ObjectResult<Sp_Get_DailyCash_Report_Result> Sp_Get_DailyCash_Report()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_DailyCash_Report_Result>("Sp_Get_DailyCash_Report");
        }
    
        public virtual ObjectResult<Sp_Get_DailyCashierUser_Report_Result> Sp_Get_DailyCashierUser_Report(Nullable<long> userid, Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_DailyCashierUser_Report_Result>("Sp_Get_DailyCashierUser_Report", useridParameter, fromParameter, toParameter);
        }
    
        public virtual ObjectResult<Sp_Get_DailyRecovery_Report_Result> Sp_Get_DailyRecovery_Report()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_DailyRecovery_Report_Result>("Sp_Get_DailyRecovery_Report");
        }
    
        public virtual ObjectResult<Sp_Get_DailyRecovery_Report_Parameter_Result> Sp_Get_DailyRecovery_Report_Parameter(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, string userid, string types)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            var typesParameter = types != null ?
                new ObjectParameter("types", types) :
                new ObjectParameter("types", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_DailyRecovery_Report_Parameter_Result>("Sp_Get_DailyRecovery_Report_Parameter", fromdateParameter, todateParameter, useridParameter, typesParameter);
        }
    
        public virtual ObjectResult<Sp_Get_DailyReversal_Report_Result> Sp_Get_DailyReversal_Report(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, string userid)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_DailyReversal_Report_Result>("Sp_Get_DailyReversal_Report", fromdateParameter, todateParameter, useridParameter);
        }
    
        public virtual ObjectResult<Sp_Get_DailySAMCashierUser_Report_Result> Sp_Get_DailySAMCashierUser_Report(Nullable<long> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_DailySAMCashierUser_Report_Result>("Sp_Get_DailySAMCashierUser_Report", useridParameter);
        }
    
        public virtual ObjectResult<Sp_Get_DailySAMCashierVoucherUser_Report_Result> Sp_Get_DailySAMCashierVoucherUser_Report(Nullable<long> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_DailySAMCashierVoucherUser_Report_Result>("Sp_Get_DailySAMCashierVoucherUser_Report", useridParameter);
        }
    
        public virtual ObjectResult<Sp_Get_DailySAMRecovery_Report_Parameter_Result> Sp_Get_DailySAMRecovery_Report_Parameter(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, string userid)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_DailySAMRecovery_Report_Parameter_Result>("Sp_Get_DailySAMRecovery_Report_Parameter", fromdateParameter, todateParameter, useridParameter);
        }
    
        public virtual ObjectResult<Sp_Get_DailySAMVoucher_Report_Parameter_Result> Sp_Get_DailySAMVoucher_Report_Parameter(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, string userid)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_DailySAMVoucher_Report_Parameter_Result>("Sp_Get_DailySAMVoucher_Report_Parameter", fromdateParameter, todateParameter, useridParameter);
        }
    
        public virtual ObjectResult<Sp_Get_DayCloseCashierUser_Report_Result> Sp_Get_DayCloseCashierUser_Report(Nullable<long> userid, Nullable<System.DateTime> from, Nullable<System.DateTime> to, string status)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_DayCloseCashierUser_Report_Result>("Sp_Get_DayCloseCashierUser_Report", useridParameter, fromParameter, toParameter, statusParameter);
        }
    
        public virtual ObjectResult<Sp_Get_DayClosed_SAMCashier_Report_Result> Sp_Get_DayClosed_SAMCashier_Report(Nullable<long> userid, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> toDate)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_DayClosed_SAMCashier_Report_Result>("Sp_Get_DayClosed_SAMCashier_Report", useridParameter, fromdateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Deal_Parameter_Result> Sp_Get_Deal_Parameter(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Deal_Parameter_Result>("Sp_Get_Deal_Parameter", idParameter);
        }
    
        public virtual int Sp_Get_Deal_Receipt()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Get_Deal_Receipt");
        }
    
        public virtual ObjectResult<Sp_Get_Dealership_Plots_Report_Result> Sp_Get_Dealership_Plots_Report(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Dealership_Plots_Report_Result>("Sp_Get_Dealership_Plots_Report", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_DealershipComments_Result> Sp_Get_DealershipComments(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_DealershipComments_Result>("Sp_Get_DealershipComments", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_DealershipFilesReport_Result> Sp_Get_DealershipFilesReport(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_DealershipFilesReport_Result>("Sp_Get_DealershipFilesReport", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Dealerships_Result> Sp_Get_Dealerships()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Dealerships_Result>("Sp_Get_Dealerships");
        }
    
        public virtual ObjectResult<Sp_Get_DealerStockAssigned_Result> Sp_Get_DealerStockAssigned(Nullable<long> dealid)
        {
            var dealidParameter = dealid.HasValue ?
                new ObjectParameter("dealid", dealid) :
                new ObjectParameter("dealid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_DealerStockAssigned_Result>("Sp_Get_DealerStockAssigned", dealidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_DealFiles_Result> Sp_Get_DealFiles()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_DealFiles_Result>("Sp_Get_DealFiles");
        }
    
        public virtual ObjectResult<Sp_Get_DealLedger_Result> Sp_Get_DealLedger()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_DealLedger_Result>("Sp_Get_DealLedger");
        }
    
        public virtual ObjectResult<Sp_Get_DealLedger_Parameter_Result> Sp_Get_DealLedger_Parameter(string user, Nullable<System.DateTime> from, Nullable<System.DateTime> to, string leadstatus)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var leadstatusParameter = leadstatus != null ?
                new ObjectParameter("leadstatus", leadstatus) :
                new ObjectParameter("leadstatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_DealLedger_Parameter_Result>("Sp_Get_DealLedger_Parameter", userParameter, fromParameter, toParameter, leadstatusParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Deals_Result> Sp_Get_Deals()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Deals_Result>("Sp_Get_Deals");
        }
    
        public virtual ObjectResult<Sp_Get_DemandOrder_Details_Result> Sp_Get_DemandOrder_Details(Nullable<long> groupid)
        {
            var groupidParameter = groupid.HasValue ?
                new ObjectParameter("Groupid", groupid) :
                new ObjectParameter("Groupid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_DemandOrder_Details_Result>("Sp_Get_DemandOrder_Details", groupidParameter);
        }
    
        public virtual ObjectResult<SP_Get_DemandOrderItemDetails_Result> SP_Get_DemandOrderItemDetails(string demOr)
        {
            var demOrParameter = demOr != null ?
                new ObjectParameter("DemOr", demOr) :
                new ObjectParameter("DemOr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Get_DemandOrderItemDetails_Result>("SP_Get_DemandOrderItemDetails", demOrParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Deparetment_Approved_Salaries_Result> Sp_Get_Deparetment_Approved_Salaries(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Deparetment_Approved_Salaries_Result>("Sp_Get_Deparetment_Approved_Salaries", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_DepartmentalLoanReport_Result> Sp_Get_DepartmentalLoanReport(string depId, string stat, Nullable<System.DateTime> from, Nullable<System.DateTime> till)
        {
            var depIdParameter = depId != null ?
                new ObjectParameter("depId", depId) :
                new ObjectParameter("depId", typeof(string));
    
            var statParameter = stat != null ?
                new ObjectParameter("stat", stat) :
                new ObjectParameter("stat", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var tillParameter = till.HasValue ?
                new ObjectParameter("till", till) :
                new ObjectParameter("till", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_DepartmentalLoanReport_Result>("Sp_Get_DepartmentalLoanReport", depIdParameter, statParameter, fromParameter, tillParameter);
        }
    
        public virtual ObjectResult<Sp_Get_DepartmentEmployees_Result> Sp_Get_DepartmentEmployees(Nullable<long> depId)
        {
            var depIdParameter = depId.HasValue ?
                new ObjectParameter("depId", depId) :
                new ObjectParameter("depId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_DepartmentEmployees_Result>("Sp_Get_DepartmentEmployees", depIdParameter);
        }
    
        public virtual ObjectResult<Sp_Get_DepLeaves_Result> Sp_Get_DepLeaves(Nullable<long> uid, string status)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(long));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_DepLeaves_Result>("Sp_Get_DepLeaves", uidParameter, statusParameter);
        }
    
        public virtual ObjectResult<Sp_Get_DepMISUsers_Result> Sp_Get_DepMISUsers(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_DepMISUsers_Result>("Sp_Get_DepMISUsers", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Descendants_Result> Sp_Get_Descendants(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Descendants_Result>("Sp_Get_Descendants", idParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Sp_Get_DevlopmentChargesInfo(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Sp_Get_DevlopmentChargesInfo", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_DifferSize_Plots_Result> Sp_Get_DifferSize_Plots()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_DifferSize_Plots_Result>("Sp_Get_DifferSize_Plots");
        }
    
        public virtual ObjectResult<Sp_Get_DishonredCheques_Result> Sp_Get_DishonredCheques()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_DishonredCheques_Result>("Sp_Get_DishonredCheques");
        }
    
        public virtual ObjectResult<Sp_Get_DispatchableReminders_Result> Sp_Get_DispatchableReminders(Nullable<System.DateTime> forDate)
        {
            var forDateParameter = forDate.HasValue ?
                new ObjectParameter("forDate", forDate) :
                new ObjectParameter("forDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_DispatchableReminders_Result>("Sp_Get_DispatchableReminders", forDateParameter);
        }
    
        public virtual ObjectResult<Sp_Get_ElecBill_ById_Result> Sp_Get_ElecBill_ById(string billId)
        {
            var billIdParameter = billId != null ?
                new ObjectParameter("billId", billId) :
                new ObjectParameter("billId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_ElecBill_ById_Result>("Sp_Get_ElecBill_ById", billIdParameter);
        }
    
        public virtual ObjectResult<SP_Get_ElectricitySubscribed_Plots_Blockwise_Result> SP_Get_ElectricitySubscribed_Plots_Blockwise(Nullable<long> block)
        {
            var blockParameter = block.HasValue ?
                new ObjectParameter("block", block) :
                new ObjectParameter("block", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Get_ElectricitySubscribed_Plots_Blockwise_Result>("SP_Get_ElectricitySubscribed_Plots_Blockwise", blockParameter);
        }
    
        public virtual ObjectResult<Sp_Get_ElectricUnitRate_Parameter_Result> Sp_Get_ElectricUnitRate_Parameter(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_ElectricUnitRate_Parameter_Result>("Sp_Get_ElectricUnitRate_Parameter", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Email_Result> Sp_Get_Email(string mobile, string cnic_Nicop)
        {
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var cnic_NicopParameter = cnic_Nicop != null ?
                new ObjectParameter("Cnic_Nicop", cnic_Nicop) :
                new ObjectParameter("Cnic_Nicop", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Email_Result>("Sp_Get_Email", mobileParameter, cnic_NicopParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Emp_Details_Warning_Letter_Result> Sp_Get_Emp_Details_Warning_Letter(string letterType)
        {
            var letterTypeParameter = letterType != null ?
                new ObjectParameter("LetterType", letterType) :
                new ObjectParameter("LetterType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Emp_Details_Warning_Letter_Result>("Sp_Get_Emp_Details_Warning_Letter", letterTypeParameter);
        }
    
        public virtual ObjectResult<Sp_Get_EmpDetails_Print_Result> Sp_Get_EmpDetails_Print(Nullable<long> emp_Id)
        {
            var emp_IdParameter = emp_Id.HasValue ?
                new ObjectParameter("Emp_Id", emp_Id) :
                new ObjectParameter("Emp_Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_EmpDetails_Print_Result>("Sp_Get_EmpDetails_Print", emp_IdParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Employee_Result> Sp_Get_Employee()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Employee_Result>("Sp_Get_Employee");
        }
    
        public virtual int Sp_Get_Employee_Acheivements()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Get_Employee_Acheivements");
        }
    
        public virtual ObjectResult<Sp_Get_Employee_Achievement_print_Result> Sp_Get_Employee_Achievement_print(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Employee_Achievement_print_Result>("Sp_Get_Employee_Achievement_print", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Employee_Award_Result> Sp_Get_Employee_Award(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Employee_Award_Result>("Sp_Get_Employee_Award", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Employee_Award_print_Result> Sp_Get_Employee_Award_print(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Employee_Award_print_Result>("Sp_Get_Employee_Award_print", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Employee_By_Code_Result> Sp_Get_Employee_By_Code(string empcode)
        {
            var empcodeParameter = empcode != null ?
                new ObjectParameter("empcode", empcode) :
                new ObjectParameter("empcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Employee_By_Code_Result>("Sp_Get_Employee_By_Code", empcodeParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Employee_Count_Result> Sp_Get_Employee_Count()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Employee_Count_Result>("Sp_Get_Employee_Count");
        }
    
        public virtual ObjectResult<Sp_Get_Employee_Designation_Result> Sp_Get_Employee_Designation(Nullable<long> emp_Id)
        {
            var emp_IdParameter = emp_Id.HasValue ?
                new ObjectParameter("Emp_Id", emp_Id) :
                new ObjectParameter("Emp_Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Employee_Designation_Result>("Sp_Get_Employee_Designation", emp_IdParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Employee_For_Salaries_Result> Sp_Get_Employee_For_Salaries()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Employee_For_Salaries_Result>("Sp_Get_Employee_For_Salaries");
        }
    
        public virtual ObjectResult<Sp_Get_Employee_Fuel_Details_Result> Sp_Get_Employee_Fuel_Details(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Employee_Fuel_Details_Result>("Sp_Get_Employee_Fuel_Details", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Employee_LFO_valid_Result> Sp_Get_Employee_LFO_valid(Nullable<bool> bit)
        {
            var bitParameter = bit.HasValue ?
                new ObjectParameter("bit", bit) :
                new ObjectParameter("bit", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Employee_LFO_valid_Result>("Sp_Get_Employee_LFO_valid", bitParameter);
        }
    
        public virtual int Sp_Get_Employee_Loan_Or_Advance_List(string name, Nullable<long> id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Get_Employee_Loan_Or_Advance_List", nameParameter, idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Employee_Minimum_Wages_Result> Sp_Get_Employee_Minimum_Wages()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Employee_Minimum_Wages_Result>("Sp_Get_Employee_Minimum_Wages");
        }
    
        public virtual ObjectResult<Sp_Get_Employee_Parameter_Result> Sp_Get_Employee_Parameter(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Employee_Parameter_Result>("Sp_Get_Employee_Parameter", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Employee_Reward_Result> Sp_Get_Employee_Reward(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Employee_Reward_Result>("Sp_Get_Employee_Reward", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Employee_Reward_print_Result> Sp_Get_Employee_Reward_print(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Employee_Reward_print_Result>("Sp_Get_Employee_Reward_print", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Employee_Search_Result> Sp_Get_Employee_Search(string q)
        {
            var qParameter = q != null ?
                new ObjectParameter("q", q) :
                new ObjectParameter("q", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Employee_Search_Result>("Sp_Get_Employee_Search", qParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Employee_Status_Parameter_Result> Sp_Get_Employee_Status_Parameter(string status)
        {
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Employee_Status_Parameter_Result>("Sp_Get_Employee_Status_Parameter", statusParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Employee_Training_Result> Sp_Get_Employee_Training(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Employee_Training_Result>("Sp_Get_Employee_Training", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Employee_Training_print_Result> Sp_Get_Employee_Training_print(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Employee_Training_print_Result>("Sp_Get_Employee_Training_print", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Employee_UserId_Result> Sp_Get_Employee_UserId(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Employee_UserId_Result>("Sp_Get_Employee_UserId", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Employee_Warning_Letter_Result> Sp_Get_Employee_Warning_Letter(Nullable<long> empId)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Employee_Warning_Letter_Result>("Sp_Get_Employee_Warning_Letter", empIdParameter);
        }
    
        public virtual ObjectResult<Sp_Get_EmployeeCode_Parameter_Result> Sp_Get_EmployeeCode_Parameter(string empcode)
        {
            var empcodeParameter = empcode != null ?
                new ObjectParameter("empcode", empcode) :
                new ObjectParameter("empcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_EmployeeCode_Parameter_Result>("Sp_Get_EmployeeCode_Parameter", empcodeParameter);
        }
    
        public virtual ObjectResult<Sp_Get_EmployeeFilePlotInfo_Result> Sp_Get_EmployeeFilePlotInfo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_EmployeeFilePlotInfo_Result>("Sp_Get_EmployeeFilePlotInfo");
        }
    
        public virtual ObjectResult<Sp_Get_EmployeeFirstDesignation_Result> Sp_Get_EmployeeFirstDesignation(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_EmployeeFirstDesignation_Result>("Sp_Get_EmployeeFirstDesignation", idParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Get_EmployeeId(Nullable<long> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Get_EmployeeId", useridParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Sp_Get_EmployeeLeave_dates(Nullable<long> empid)
        {
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Sp_Get_EmployeeLeave_dates", empidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_EmployeeLeave_Management_Result> Sp_Get_EmployeeLeave_Management(string manger, Nullable<long> empid)
        {
            var mangerParameter = manger != null ?
                new ObjectParameter("manger", manger) :
                new ObjectParameter("manger", typeof(string));
    
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_EmployeeLeave_Management_Result>("Sp_Get_EmployeeLeave_Management", mangerParameter, empidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_EmployeeLeaves_Result> Sp_Get_EmployeeLeaves(Nullable<long> empid)
        {
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_EmployeeLeaves_Result>("Sp_Get_EmployeeLeaves", empidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_EmployeeList_ByParam_Result> Sp_Get_EmployeeList_ByParam(string tp, string startQry, string endQry)
        {
            var tpParameter = tp != null ?
                new ObjectParameter("tp", tp) :
                new ObjectParameter("tp", typeof(string));
    
            var startQryParameter = startQry != null ?
                new ObjectParameter("startQry", startQry) :
                new ObjectParameter("startQry", typeof(string));
    
            var endQryParameter = endQry != null ?
                new ObjectParameter("endQry", endQry) :
                new ObjectParameter("endQry", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_EmployeeList_ByParam_Result>("Sp_Get_EmployeeList_ByParam", tpParameter, startQryParameter, endQryParameter);
        }
    
        public virtual ObjectResult<Sp_Get_EmployeeLoan_Management_Result> Sp_Get_EmployeeLoan_Management(string manger, string hr, Nullable<long> empid)
        {
            var mangerParameter = manger != null ?
                new ObjectParameter("manger", manger) :
                new ObjectParameter("manger", typeof(string));
    
            var hrParameter = hr != null ?
                new ObjectParameter("hr", hr) :
                new ObjectParameter("hr", typeof(string));
    
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_EmployeeLoan_Management_Result>("Sp_Get_EmployeeLoan_Management", mangerParameter, hrParameter, empidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_EmployeeReligion_Parameter_Result> Sp_Get_EmployeeReligion_Parameter(string religion)
        {
            var religionParameter = religion != null ?
                new ObjectParameter("religion", religion) :
                new ObjectParameter("religion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_EmployeeReligion_Parameter_Result>("Sp_Get_EmployeeReligion_Parameter", religionParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Employees_Dep_Result> Sp_Get_Employees_Dep(string dep)
        {
            var depParameter = dep != null ?
                new ObjectParameter("dep", dep) :
                new ObjectParameter("dep", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Employees_Dep_Result>("Sp_Get_Employees_Dep", depParameter);
        }
    
        public virtual ObjectResult<Sp_Get_EmployeeSalaryInfo_Result> Sp_Get_EmployeeSalaryInfo(Nullable<long> salId)
        {
            var salIdParameter = salId.HasValue ?
                new ObjectParameter("salId", salId) :
                new ObjectParameter("salId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_EmployeeSalaryInfo_Result>("Sp_Get_EmployeeSalaryInfo", salIdParameter);
        }
    
        public virtual ObjectResult<Sp_Get_EmployeesAll_WithCDD_Result> Sp_Get_EmployeesAll_WithCDD()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_EmployeesAll_WithCDD_Result>("Sp_Get_EmployeesAll_WithCDD");
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Get_EmpSalId(Nullable<System.DateTime> from, Nullable<System.DateTime> to, Nullable<long> empId)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("empId", empId) :
                new ObjectParameter("empId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Get_EmpSalId", fromParameter, toParameter, empIdParameter);
        }
    
        public virtual ObjectResult<Sp_Get_EntertaimentFeePlan_Result> Sp_Get_EntertaimentFeePlan()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_EntertaimentFeePlan_Result>("Sp_Get_EntertaimentFeePlan");
        }
    
        public virtual int Sp_Get_Expenses(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Get_Expenses", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_FamilyFiles_List_Result> Sp_Get_FamilyFiles_List(string phone, string fileNo)
        {
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var fileNoParameter = fileNo != null ?
                new ObjectParameter("FileNo", fileNo) :
                new ObjectParameter("FileNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_FamilyFiles_List_Result>("Sp_Get_FamilyFiles_List", phoneParameter, fileNoParameter);
        }
    
        public virtual ObjectResult<Sp_Get_FamilyInfo_Result> Sp_Get_FamilyInfo(Nullable<long> fileformid, string cnic)
        {
            var fileformidParameter = fileformid.HasValue ?
                new ObjectParameter("fileformid", fileformid) :
                new ObjectParameter("fileformid", typeof(long));
    
            var cnicParameter = cnic != null ?
                new ObjectParameter("cnic", cnic) :
                new ObjectParameter("cnic", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_FamilyInfo_Result>("Sp_Get_FamilyInfo", fileformidParameter, cnicParameter);
        }
    
        public virtual ObjectResult<Sp_Get_FamilyLoginInformation_Result> Sp_Get_FamilyLoginInformation(string phoneNumber, string email)
        {
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_FamilyLoginInformation_Result>("Sp_Get_FamilyLoginInformation", phoneNumberParameter, emailParameter);
        }
    
        public virtual ObjectResult<Sp_Get_FamilyProperties_Result> Sp_Get_FamilyProperties(Nullable<int> cust_ID, Nullable<long> fileFormNumber)
        {
            var cust_IDParameter = cust_ID.HasValue ?
                new ObjectParameter("Cust_ID", cust_ID) :
                new ObjectParameter("Cust_ID", typeof(int));
    
            var fileFormNumberParameter = fileFormNumber.HasValue ?
                new ObjectParameter("FileFormNumber", fileFormNumber) :
                new ObjectParameter("FileFormNumber", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_FamilyProperties_Result>("Sp_Get_FamilyProperties", cust_IDParameter, fileFormNumberParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Fee_Month_Parameter_Result> Sp_Get_Fee_Month_Parameter(Nullable<long> proid, Nullable<System.DateTime> date)
        {
            var proidParameter = proid.HasValue ?
                new ObjectParameter("proid", proid) :
                new ObjectParameter("proid", typeof(long));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Fee_Month_Parameter_Result>("Sp_Get_Fee_Month_Parameter", proidParameter, dateParameter);
        }
    
        public virtual ObjectResult<Sp_Get_File_Search_Result> Sp_Get_File_Search(string text, Nullable<int> opt)
        {
            var textParameter = text != null ?
                new ObjectParameter("text", text) :
                new ObjectParameter("text", typeof(string));
    
            var optParameter = opt.HasValue ?
                new ObjectParameter("opt", opt) :
                new ObjectParameter("opt", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_File_Search_Result>("Sp_Get_File_Search", textParameter, optParameter);
        }
    
        public virtual ObjectResult<Sp_Get_File_Security_Result> Sp_Get_File_Security(Nullable<long> phaseid, Nullable<long> blockid)
        {
            var phaseidParameter = phaseid.HasValue ?
                new ObjectParameter("phaseid", phaseid) :
                new ObjectParameter("phaseid", typeof(long));
    
            var blockidParameter = blockid.HasValue ?
                new ObjectParameter("blockid", blockid) :
                new ObjectParameter("blockid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_File_Security_Result>("Sp_Get_File_Security", phaseidParameter, blockidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_FileAppFormData_Result> Sp_Get_FileAppFormData(string fileformnumber)
        {
            var fileformnumberParameter = fileformnumber != null ?
                new ObjectParameter("fileformnumber", fileformnumber) :
                new ObjectParameter("fileformnumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_FileAppFormData_Result>("Sp_Get_FileAppFormData", fileformnumberParameter);
        }
    
        public virtual ObjectResult<Sp_Get_FileAppForms_Result> Sp_Get_FileAppForms()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_FileAppForms_Result>("Sp_Get_FileAppForms");
        }
    
        public virtual ObjectResult<Sp_Get_FileAppForms_GParameter_Result> Sp_Get_FileAppForms_GParameter(Nullable<long> groupid)
        {
            var groupidParameter = groupid.HasValue ?
                new ObjectParameter("groupid", groupid) :
                new ObjectParameter("groupid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_FileAppForms_GParameter_Result>("Sp_Get_FileAppForms_GParameter", groupidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_FileComments_Result> Sp_Get_FileComments(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_FileComments_Result>("Sp_Get_FileComments", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_FileData_Result> Sp_Get_FileData(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_FileData_Result>("Sp_Get_FileData", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_FileDetail_Result> Sp_Get_FileDetail(string fileFormNo)
        {
            var fileFormNoParameter = fileFormNo != null ?
                new ObjectParameter("FileFormNo", fileFormNo) :
                new ObjectParameter("FileFormNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_FileDetail_Result>("Sp_Get_FileDetail", fileFormNoParameter);
        }
    
        public virtual ObjectResult<Sp_Get_FileFormData_Result> Sp_Get_FileFormData(Nullable<long> fileformid)
        {
            var fileformidParameter = fileformid.HasValue ?
                new ObjectParameter("fileformid", fileformid) :
                new ObjectParameter("fileformid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_FileFormData_Result>("Sp_Get_FileFormData", fileformidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_FileFormDatabyFormNumber_Result> Sp_Get_FileFormDatabyFormNumber(string fileformid)
        {
            var fileformidParameter = fileformid != null ?
                new ObjectParameter("fileformid", fileformid) :
                new ObjectParameter("fileformid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_FileFormDatabyFormNumber_Result>("Sp_Get_FileFormDatabyFormNumber", fileformidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_FileInstallment_Result> Sp_Get_FileInstallment(string fileId)
        {
            var fileIdParameter = fileId != null ?
                new ObjectParameter("FileId", fileId) :
                new ObjectParameter("FileId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_FileInstallment_Result>("Sp_Get_FileInstallment", fileIdParameter);
        }
    
        public virtual ObjectResult<Sp_Get_FileInstallmentAmount_Result> Sp_Get_FileInstallmentAmount(Nullable<long> file_form_id, Nullable<int> installmentoption)
        {
            var file_form_idParameter = file_form_id.HasValue ?
                new ObjectParameter("file_form_id", file_form_id) :
                new ObjectParameter("file_form_id", typeof(long));
    
            var installmentoptionParameter = installmentoption.HasValue ?
                new ObjectParameter("installmentoption", installmentoption) :
                new ObjectParameter("installmentoption", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_FileInstallmentAmount_Result>("Sp_Get_FileInstallmentAmount", file_form_idParameter, installmentoptionParameter);
        }
    
        public virtual ObjectResult<SP_Get_FileInstallmentDetails_Result> SP_Get_FileInstallmentDetails(string mats)
        {
            var matsParameter = mats != null ?
                new ObjectParameter("Mats", mats) :
                new ObjectParameter("Mats", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Get_FileInstallmentDetails_Result>("SP_Get_FileInstallmentDetails", matsParameter);
        }
    
        public virtual ObjectResult<Sp_Get_FileInstallments_Result> Sp_Get_FileInstallments(Nullable<long> fileformid)
        {
            var fileformidParameter = fileformid.HasValue ?
                new ObjectParameter("fileformid", fileformid) :
                new ObjectParameter("fileformid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_FileInstallments_Result>("Sp_Get_FileInstallments", fileformidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_FileInstallments_Cancelled_Result> Sp_Get_FileInstallments_Cancelled(Nullable<long> fileformid, Nullable<long> ownerid)
        {
            var fileformidParameter = fileformid.HasValue ?
                new ObjectParameter("fileformid", fileformid) :
                new ObjectParameter("fileformid", typeof(long));
    
            var owneridParameter = ownerid.HasValue ?
                new ObjectParameter("ownerid", ownerid) :
                new ObjectParameter("ownerid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_FileInstallments_Cancelled_Result>("Sp_Get_FileInstallments_Cancelled", fileformidParameter, owneridParameter);
        }
    
        public virtual ObjectResult<Sp_Get_FileLastOwner_Result> Sp_Get_FileLastOwner(Nullable<long> flId)
        {
            var flIdParameter = flId.HasValue ?
                new ObjectParameter("flId", flId) :
                new ObjectParameter("flId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_FileLastOwner_Result>("Sp_Get_FileLastOwner", flIdParameter);
        }
    
        public virtual ObjectResult<Sp_Get_FileList_Parameter_Result> Sp_Get_FileList_Parameter(Nullable<int> status)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_FileList_Parameter_Result>("Sp_Get_FileList_Parameter", statusParameter);
        }
    
        public virtual ObjectResult<Sp_Get_FileOwnerList_Result> Sp_Get_FileOwnerList(Nullable<long> fileid)
        {
            var fileidParameter = fileid.HasValue ?
                new ObjectParameter("fileid", fileid) :
                new ObjectParameter("fileid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_FileOwnerList_Result>("Sp_Get_FileOwnerList", fileidParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Get_FilePlot_BallotedNotBalloted_Reprot(string block, string type)
        {
            var blockParameter = block != null ?
                new ObjectParameter("block", block) :
                new ObjectParameter("block", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Get_FilePlot_BallotedNotBalloted_Reprot", blockParameter, typeParameter);
        }
    
        public virtual ObjectResult<Sp_Get_FilePlot_NDC_WDC_TBA_Report_Result> Sp_Get_FilePlot_NDC_WDC_TBA_Report(string block)
        {
            var blockParameter = block != null ?
                new ObjectParameter("block", block) :
                new ObjectParameter("block", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_FilePlot_NDC_WDC_TBA_Report_Result>("Sp_Get_FilePlot_NDC_WDC_TBA_Report", blockParameter);
        }
    
        public virtual ObjectResult<Sp_Get_FilePlot_SalesReport_Result> Sp_Get_FilePlot_SalesReport(Nullable<int> blockId, string type, string sector)
        {
            var blockIdParameter = blockId.HasValue ?
                new ObjectParameter("BlockId", blockId) :
                new ObjectParameter("BlockId", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var sectorParameter = sector != null ?
                new ObjectParameter("sector", sector) :
                new ObjectParameter("sector", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_FilePlot_SalesReport_Result>("Sp_Get_FilePlot_SalesReport", blockIdParameter, typeParameter, sectorParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Files_Result> Sp_Get_Files()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Files_Result>("Sp_Get_Files");
        }
    
        public virtual ObjectResult<Sp_Get_Files_Lists_Result> Sp_Get_Files_Lists(string phone, string cNIC)
        {
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var cNICParameter = cNIC != null ?
                new ObjectParameter("CNIC", cNIC) :
                new ObjectParameter("CNIC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Files_Lists_Result>("Sp_Get_Files_Lists", phoneParameter, cNICParameter);
        }
    
        public virtual int SP_Get_Files_Log(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Get_Files_Log", fromdateParameter, todateParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Files_Veri_Parameter_Result> Sp_Get_Files_Veri_Parameter(string status)
        {
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Files_Veri_Parameter_Result>("Sp_Get_Files_Veri_Parameter", statusParameter);
        }
    
        public virtual ObjectResult<Sp_Get_FilesCancelation_Req_Result> Sp_Get_FilesCancelation_Req(string role)
        {
            var roleParameter = role != null ?
                new ObjectParameter("role", role) :
                new ObjectParameter("role", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_FilesCancelation_Req_Result>("Sp_Get_FilesCancelation_Req", roleParameter);
        }
    
        public virtual ObjectResult<Sp_Get_FileSecondLastOwner_Result> Sp_Get_FileSecondLastOwner(Nullable<long> flId)
        {
            var flIdParameter = flId.HasValue ?
                new ObjectParameter("flId", flId) :
                new ObjectParameter("flId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_FileSecondLastOwner_Result>("Sp_Get_FileSecondLastOwner", flIdParameter);
        }
    
        public virtual ObjectResult<Sp_Get_FilesPlots_Details_Report_Result> Sp_Get_FilesPlots_Details_Report(string block, string charges)
        {
            var blockParameter = block != null ?
                new ObjectParameter("block", block) :
                new ObjectParameter("block", typeof(string));
    
            var chargesParameter = charges != null ?
                new ObjectParameter("charges", charges) :
                new ObjectParameter("charges", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_FilesPlots_Details_Report_Result>("Sp_Get_FilesPlots_Details_Report", blockParameter, chargesParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Get_FilesPlots_Report_blockwise(string block, string type)
        {
            var blockParameter = block != null ?
                new ObjectParameter("block", block) :
                new ObjectParameter("block", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Get_FilesPlots_Report_blockwise", blockParameter, typeParameter);
        }
    
        public virtual ObjectResult<Sp_Get_FilesReport_Short_Result> Sp_Get_FilesReport_Short()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_FilesReport_Short_Result>("Sp_Get_FilesReport_Short");
        }
    
        public virtual ObjectResult<Sp_Get_FilesShortSummary_Result> Sp_Get_FilesShortSummary()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_FilesShortSummary_Result>("Sp_Get_FilesShortSummary");
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Get_FileStatus(Nullable<long> fileformid)
        {
            var fileformidParameter = fileformid.HasValue ?
                new ObjectParameter("fileformid", fileformid) :
                new ObjectParameter("fileformid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Get_FileStatus", fileformidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_FilesTransferLetter_Id_Result> Sp_Get_FilesTransferLetter_Id(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_FilesTransferLetter_Id_Result>("Sp_Get_FilesTransferLetter_Id", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_FilesTransferList_Result> Sp_Get_FilesTransferList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_FilesTransferList_Result>("Sp_Get_FilesTransferList");
        }
    
        public virtual ObjectResult<SP_Get_FileVerifier_Result> SP_Get_FileVerifier(Nullable<long> fileId)
        {
            var fileIdParameter = fileId.HasValue ?
                new ObjectParameter("fileId", fileId) :
                new ObjectParameter("fileId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Get_FileVerifier_Result>("SP_Get_FileVerifier", fileIdParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Final_Bank_Salaries_Result> Sp_Get_Final_Bank_Salaries(Nullable<int> mon, Nullable<int> yr)
        {
            var monParameter = mon.HasValue ?
                new ObjectParameter("mon", mon) :
                new ObjectParameter("mon", typeof(int));
    
            var yrParameter = yr.HasValue ?
                new ObjectParameter("yr", yr) :
                new ObjectParameter("yr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Final_Bank_Salaries_Result>("Sp_Get_Final_Bank_Salaries", monParameter, yrParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Final_Cash_Salaries_Result> Sp_Get_Final_Cash_Salaries(Nullable<int> mon, Nullable<int> yr)
        {
            var monParameter = mon.HasValue ?
                new ObjectParameter("mon", mon) :
                new ObjectParameter("mon", typeof(int));
    
            var yrParameter = yr.HasValue ?
                new ObjectParameter("yr", yr) :
                new ObjectParameter("yr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Final_Cash_Salaries_Result>("Sp_Get_Final_Cash_Salaries", monParameter, yrParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Final_Salaries_Result> Sp_Get_Final_Salaries()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Final_Salaries_Result>("Sp_Get_Final_Salaries");
        }
    
        public virtual ObjectResult<Sp_Get_FirstWarning_File_Result> Sp_Get_FirstWarning_File(Nullable<int> installments, Nullable<int> s_Inst_Range, Nullable<int> e_Inst_Range, string plot_Size, Nullable<long> dealer_Id, Nullable<decimal> s_Range, Nullable<decimal> e_Range, Nullable<decimal> g_Amt, Nullable<decimal> l_Amt)
        {
            var installmentsParameter = installments.HasValue ?
                new ObjectParameter("Installments", installments) :
                new ObjectParameter("Installments", typeof(int));
    
            var s_Inst_RangeParameter = s_Inst_Range.HasValue ?
                new ObjectParameter("S_Inst_Range", s_Inst_Range) :
                new ObjectParameter("S_Inst_Range", typeof(int));
    
            var e_Inst_RangeParameter = e_Inst_Range.HasValue ?
                new ObjectParameter("E_Inst_Range", e_Inst_Range) :
                new ObjectParameter("E_Inst_Range", typeof(int));
    
            var plot_SizeParameter = plot_Size != null ?
                new ObjectParameter("Plot_Size", plot_Size) :
                new ObjectParameter("Plot_Size", typeof(string));
    
            var dealer_IdParameter = dealer_Id.HasValue ?
                new ObjectParameter("Dealer_Id", dealer_Id) :
                new ObjectParameter("Dealer_Id", typeof(long));
    
            var s_RangeParameter = s_Range.HasValue ?
                new ObjectParameter("S_Range", s_Range) :
                new ObjectParameter("S_Range", typeof(decimal));
    
            var e_RangeParameter = e_Range.HasValue ?
                new ObjectParameter("E_Range", e_Range) :
                new ObjectParameter("E_Range", typeof(decimal));
    
            var g_AmtParameter = g_Amt.HasValue ?
                new ObjectParameter("G_Amt", g_Amt) :
                new ObjectParameter("G_Amt", typeof(decimal));
    
            var l_AmtParameter = l_Amt.HasValue ?
                new ObjectParameter("L_Amt", l_Amt) :
                new ObjectParameter("L_Amt", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_FirstWarning_File_Result>("Sp_Get_FirstWarning_File", installmentsParameter, s_Inst_RangeParameter, e_Inst_RangeParameter, plot_SizeParameter, dealer_IdParameter, s_RangeParameter, e_RangeParameter, g_AmtParameter, l_AmtParameter);
        }
    
        public virtual ObjectResult<Sp_Get_FirstWarning_Plot_Result> Sp_Get_FirstWarning_Plot()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_FirstWarning_Plot_Result>("Sp_Get_FirstWarning_Plot");
        }
    
        public virtual ObjectResult<Sp_Get_FirstWarning_Shop_Result> Sp_Get_FirstWarning_Shop()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_FirstWarning_Shop_Result>("Sp_Get_FirstWarning_Shop");
        }
    
        public virtual ObjectResult<Sp_Get_Followups_Result> Sp_Get_Followups(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Followups_Result>("Sp_Get_Followups", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_ForgotPassword_Result> Sp_Get_ForgotPassword(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_ForgotPassword_Result>("Sp_Get_ForgotPassword", emailParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Fuel_Details_Result> Sp_Get_Fuel_Details()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Fuel_Details_Result>("Sp_Get_Fuel_Details");
        }
    
        public virtual ObjectResult<Sp_Get_FuelSheet_Result> Sp_Get_FuelSheet(Nullable<long> empId, Nullable<System.DateTime> start, Nullable<System.DateTime> end)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("empId", empId) :
                new ObjectParameter("empId", typeof(long));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("end", end) :
                new ObjectParameter("end", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_FuelSheet_Result>("Sp_Get_FuelSheet", empIdParameter, startParameter, endParameter);
        }
    
        public virtual ObjectResult<Sp_Get_GeneralEntries_Parameter_Result> Sp_Get_GeneralEntries_Parameter(Nullable<long> grop)
        {
            var gropParameter = grop.HasValue ?
                new ObjectParameter("grop", grop) :
                new ObjectParameter("grop", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_GeneralEntries_Parameter_Result>("Sp_Get_GeneralEntries_Parameter", gropParameter);
        }
    
        public virtual ObjectResult<Sp_Get_GeneralEntries_Parameter_All_Result> Sp_Get_GeneralEntries_Parameter_All(Nullable<long> grop)
        {
            var gropParameter = grop.HasValue ?
                new ObjectParameter("grop", grop) :
                new ObjectParameter("grop", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_GeneralEntries_Parameter_All_Result>("Sp_Get_GeneralEntries_Parameter_All", gropParameter);
        }
    
        public virtual ObjectResult<Sp_Get_GeneralEntries_Payable_Parameter_Result> Sp_Get_GeneralEntries_Payable_Parameter(Nullable<long> grop, Nullable<long> head)
        {
            var gropParameter = grop.HasValue ?
                new ObjectParameter("grop", grop) :
                new ObjectParameter("grop", typeof(long));
    
            var headParameter = head.HasValue ?
                new ObjectParameter("head", head) :
                new ObjectParameter("head", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_GeneralEntries_Payable_Parameter_Result>("Sp_Get_GeneralEntries_Payable_Parameter", gropParameter, headParameter);
        }
    
        public virtual ObjectResult<Sp_Get_GeneralEntries_TrialBalance_Result> Sp_Get_GeneralEntries_TrialBalance(Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_GeneralEntries_TrialBalance_Result>("Sp_Get_GeneralEntries_TrialBalance", fromParameter, toParameter);
        }
    
        public virtual ObjectResult<Sp_Get_GeneralEntriesPayable_Parameter_Result> Sp_Get_GeneralEntriesPayable_Parameter(Nullable<long> grop, Nullable<long> headid)
        {
            var gropParameter = grop.HasValue ?
                new ObjectParameter("grop", grop) :
                new ObjectParameter("grop", typeof(long));
    
            var headidParameter = headid.HasValue ?
                new ObjectParameter("headid", headid) :
                new ObjectParameter("headid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_GeneralEntriesPayable_Parameter_Result>("Sp_Get_GeneralEntriesPayable_Parameter", gropParameter, headidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_GeneralEntry_Bills_Updation_Result> Sp_Get_GeneralEntry_Bills_Updation(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_GeneralEntry_Bills_Updation_Result>("Sp_Get_GeneralEntry_Bills_Updation", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_GeneralEntry_Invoices_Updation_Result> Sp_Get_GeneralEntry_Invoices_Updation(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_GeneralEntry_Invoices_Updation_Result>("Sp_Get_GeneralEntry_Invoices_Updation", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_GeneralEntry_Parameter_Result> Sp_Get_GeneralEntry_Parameter(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_GeneralEntry_Parameter_Result>("Sp_Get_GeneralEntry_Parameter", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_GeneralEntry_Payables_Result> Sp_Get_GeneralEntry_Payables(Nullable<long> groupId)
        {
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("GroupId", groupId) :
                new ObjectParameter("GroupId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_GeneralEntry_Payables_Result>("Sp_Get_GeneralEntry_Payables", groupIdParameter);
        }
    
        public virtual ObjectResult<Sp_Get_GeneralEntry_Receivables_Result> Sp_Get_GeneralEntry_Receivables(Nullable<long> groupId)
        {
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("GroupId", groupId) :
                new ObjectParameter("GroupId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_GeneralEntry_Receivables_Result>("Sp_Get_GeneralEntry_Receivables", groupIdParameter);
        }
    
        public virtual ObjectResult<Sp_Get_GeneralEntry_Updations_Result> Sp_Get_GeneralEntry_Updations(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_GeneralEntry_Updations_Result>("Sp_Get_GeneralEntry_Updations", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_GeneralEntry_Userid_Result> Sp_Get_GeneralEntry_Userid(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_GeneralEntry_Userid_Result>("Sp_Get_GeneralEntry_Userid", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_GRN_List_Result> Sp_Get_GRN_List(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string user)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_GRN_List_Result>("Sp_Get_GRN_List", fromParameter, toParameter, userParameter);
        }
    
        public virtual ObjectResult<Sp_Get_GRN_List_DPT_Result> Sp_Get_GRN_List_DPT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_GRN_List_DPT_Result>("Sp_Get_GRN_List_DPT");
        }
    
        public virtual ObjectResult<Sp_Get_Head_Balance_Result> Sp_Get_Head_Balance(string headcode, Nullable<System.DateTime> start, Nullable<System.DateTime> end)
        {
            var headcodeParameter = headcode != null ?
                new ObjectParameter("headcode", headcode) :
                new ObjectParameter("headcode", typeof(string));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("end", end) :
                new ObjectParameter("end", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Head_Balance_Result>("Sp_Get_Head_Balance", headcodeParameter, startParameter, endParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Head_Id_COA_Result> Sp_Get_Head_Id_COA(string head)
        {
            var headParameter = head != null ?
                new ObjectParameter("Head", head) :
                new ObjectParameter("Head", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Head_Id_COA_Result>("Sp_Get_Head_Id_COA", headParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Head_OpeningClosing_Balance_Result> Sp_Get_Head_OpeningClosing_Balance(string headcode, string type, Nullable<System.DateTime> start, Nullable<System.DateTime> end)
        {
            var headcodeParameter = headcode != null ?
                new ObjectParameter("headcode", headcode) :
                new ObjectParameter("headcode", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("end", end) :
                new ObjectParameter("end", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Head_OpeningClosing_Balance_Result>("Sp_Get_Head_OpeningClosing_Balance", headcodeParameter, typeParameter, startParameter, endParameter);
        }
    
        public virtual ObjectResult<Sp_Get_HeadLedger_Result> Sp_Get_HeadLedger(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_HeadLedger_Result>("Sp_Get_HeadLedger", idParameter);
        }
    
        public virtual ObjectResult<SP_Get_HeadOfDepartment_Result> SP_Get_HeadOfDepartment(Nullable<long> depid)
        {
            var depidParameter = depid.HasValue ?
                new ObjectParameter("depid", depid) :
                new ObjectParameter("depid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Get_HeadOfDepartment_Result>("SP_Get_HeadOfDepartment", depidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_HODTickets_Result> Sp_Get_HODTickets(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, string userid)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_HODTickets_Result>("Sp_Get_HODTickets", fromdateParameter, todateParameter, useridParameter);
        }
    
        public virtual ObjectResult<Sp_Get_ImmediateNodes_Result> Sp_Get_ImmediateNodes(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_ImmediateNodes_Result>("Sp_Get_ImmediateNodes", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Income_Statment_Result> Sp_Get_Income_Statment(Nullable<int> comp, Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Income_Statment_Result>("Sp_Get_Income_Statment", compParameter, fromParameter, toParameter);
        }
    
        public virtual ObjectResult<Sp_Get_InstallmentInfo_Result> Sp_Get_InstallmentInfo(string plotNoComplete, Nullable<long> block, string pltType, string plotnoSplitted, string sect)
        {
            var plotNoCompleteParameter = plotNoComplete != null ?
                new ObjectParameter("plotNoComplete", plotNoComplete) :
                new ObjectParameter("plotNoComplete", typeof(string));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("block", block) :
                new ObjectParameter("block", typeof(long));
    
            var pltTypeParameter = pltType != null ?
                new ObjectParameter("pltType", pltType) :
                new ObjectParameter("pltType", typeof(string));
    
            var plotnoSplittedParameter = plotnoSplitted != null ?
                new ObjectParameter("plotnoSplitted", plotnoSplitted) :
                new ObjectParameter("plotnoSplitted", typeof(string));
    
            var sectParameter = sect != null ?
                new ObjectParameter("sect", sect) :
                new ObjectParameter("sect", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_InstallmentInfo_Result>("Sp_Get_InstallmentInfo", plotNoCompleteParameter, blockParameter, pltTypeParameter, plotnoSplittedParameter, sectParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Installments_Result> Sp_Get_Installments(string fileId, string cnic)
        {
            var fileIdParameter = fileId != null ?
                new ObjectParameter("FileId", fileId) :
                new ObjectParameter("FileId", typeof(string));
    
            var cnicParameter = cnic != null ?
                new ObjectParameter("cnic", cnic) :
                new ObjectParameter("cnic", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Installments_Result>("Sp_Get_Installments", fileIdParameter, cnicParameter);
        }
    
        public virtual ObjectResult<Sp_Get_InstallmentStructure_Result> Sp_Get_InstallmentStructure(Nullable<int> planid)
        {
            var planidParameter = planid.HasValue ?
                new ObjectParameter("planid", planid) :
                new ObjectParameter("planid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_InstallmentStructure_Result>("Sp_Get_InstallmentStructure", planidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_InstallmentStructure_Current_Result> Sp_Get_InstallmentStructure_Current(Nullable<long> filid)
        {
            var filidParameter = filid.HasValue ?
                new ObjectParameter("filid", filid) :
                new ObjectParameter("filid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_InstallmentStructure_Current_Result>("Sp_Get_InstallmentStructure_Current", filidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Inventory_Result> Sp_Get_Inventory()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Inventory_Result>("Sp_Get_Inventory");
        }
    
        public virtual ObjectResult<Sp_Get_Inventory_Availability_Dep_Parameter_Result> Sp_Get_Inventory_Availability_Dep_Parameter(Nullable<long> id, string dep)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var depParameter = dep != null ?
                new ObjectParameter("dep", dep) :
                new ObjectParameter("dep", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Inventory_Availability_Dep_Parameter_Result>("Sp_Get_Inventory_Availability_Dep_Parameter", idParameter, depParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Inventory_Availability_Parameter_Result> Sp_Get_Inventory_Availability_Parameter(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Inventory_Availability_Parameter_Result>("Sp_Get_Inventory_Availability_Parameter", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Inventory_Details_Result> Sp_Get_Inventory_Details(Nullable<long> id, string issue_Note, string prjName, string mod)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var issue_NoteParameter = issue_Note != null ?
                new ObjectParameter("Issue_Note", issue_Note) :
                new ObjectParameter("Issue_Note", typeof(string));
    
            var prjNameParameter = prjName != null ?
                new ObjectParameter("prjName", prjName) :
                new ObjectParameter("prjName", typeof(string));
    
            var modParameter = mod != null ?
                new ObjectParameter("Mod", mod) :
                new ObjectParameter("Mod", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Inventory_Details_Result>("Sp_Get_Inventory_Details", idParameter, issue_NoteParameter, prjNameParameter, modParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Inventory_List_With_Departments_Result> Sp_Get_Inventory_List_With_Departments()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Inventory_List_With_Departments_Result>("Sp_Get_Inventory_List_With_Departments");
        }
    
        public virtual ObjectResult<SP_Get_Inventory_List_With_Properties_Result> SP_Get_Inventory_List_With_Properties()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Get_Inventory_List_With_Properties_Result>("SP_Get_Inventory_List_With_Properties");
        }
    
        public virtual ObjectResult<Sp_Get_Inventory_PurchaseOrder_list_Result> Sp_Get_Inventory_PurchaseOrder_list(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Inventory_PurchaseOrder_list_Result>("Sp_Get_Inventory_PurchaseOrder_list", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Inventory_Report_Result> Sp_Get_Inventory_Report(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string prj, string ven, string inv, string user, Nullable<int> in_out)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            var prjParameter = prj != null ?
                new ObjectParameter("prj", prj) :
                new ObjectParameter("prj", typeof(string));
    
            var venParameter = ven != null ?
                new ObjectParameter("ven", ven) :
                new ObjectParameter("ven", typeof(string));
    
            var invParameter = inv != null ?
                new ObjectParameter("inv", inv) :
                new ObjectParameter("inv", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            var in_outParameter = in_out.HasValue ?
                new ObjectParameter("in_out", in_out) :
                new ObjectParameter("in_out", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Inventory_Report_Result>("Sp_Get_Inventory_Report", fromParameter, toParameter, prjParameter, venParameter, invParameter, userParameter, in_outParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Inventory_TotalStock_In_Result> Sp_Get_Inventory_TotalStock_In(Nullable<long> id, string dep, Nullable<bool> isadmin)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var depParameter = dep != null ?
                new ObjectParameter("dep", dep) :
                new ObjectParameter("dep", typeof(string));
    
            var isadminParameter = isadmin.HasValue ?
                new ObjectParameter("isadmin", isadmin) :
                new ObjectParameter("isadmin", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Inventory_TotalStock_In_Result>("Sp_Get_Inventory_TotalStock_In", idParameter, depParameter, isadminParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Inventory_TotalStock_In_Warehouse_Result> Sp_Get_Inventory_TotalStock_In_Warehouse(Nullable<long> id, string dep, Nullable<bool> isadmin)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var depParameter = dep != null ?
                new ObjectParameter("dep", dep) :
                new ObjectParameter("dep", typeof(string));
    
            var isadminParameter = isadmin.HasValue ?
                new ObjectParameter("isadmin", isadmin) :
                new ObjectParameter("isadmin", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Inventory_TotalStock_In_Warehouse_Result>("Sp_Get_Inventory_TotalStock_In_Warehouse", idParameter, depParameter, isadminParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Inventory_TotalStock_Out_Result> Sp_Get_Inventory_TotalStock_Out(Nullable<long> id, string dep, Nullable<bool> isadmin)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var depParameter = dep != null ?
                new ObjectParameter("dep", dep) :
                new ObjectParameter("dep", typeof(string));
    
            var isadminParameter = isadmin.HasValue ?
                new ObjectParameter("isadmin", isadmin) :
                new ObjectParameter("isadmin", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Inventory_TotalStock_Out_Result>("Sp_Get_Inventory_TotalStock_Out", idParameter, depParameter, isadminParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Inventory_TotalStock_Out_Warehouse_Result> Sp_Get_Inventory_TotalStock_Out_Warehouse(Nullable<long> id, string dep, Nullable<bool> isadmin)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var depParameter = dep != null ?
                new ObjectParameter("dep", dep) :
                new ObjectParameter("dep", typeof(string));
    
            var isadminParameter = isadmin.HasValue ?
                new ObjectParameter("isadmin", isadmin) :
                new ObjectParameter("isadmin", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Inventory_TotalStock_Out_Warehouse_Result>("Sp_Get_Inventory_TotalStock_Out_Warehouse", idParameter, depParameter, isadminParameter);
        }
    
        public virtual ObjectResult<Sp_Get_InventoryBidding_Result> Sp_Get_InventoryBidding()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_InventoryBidding_Result>("Sp_Get_InventoryBidding");
        }
    
        public virtual ObjectResult<Sp_Get_InventoryItem_PR_PO_GRN_Report_Result> Sp_Get_InventoryItem_PR_PO_GRN_Report(string gRNno, Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var gRNnoParameter = gRNno != null ?
                new ObjectParameter("GRNno", gRNno) :
                new ObjectParameter("GRNno", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_InventoryItem_PR_PO_GRN_Report_Result>("Sp_Get_InventoryItem_PR_PO_GRN_Report", gRNnoParameter, fromParameter, toParameter);
        }
    
        public virtual ObjectResult<Sp_Get_InventoryItemLastRates_Result> Sp_Get_InventoryItemLastRates(Nullable<long> itemid)
        {
            var itemidParameter = itemid.HasValue ?
                new ObjectParameter("itemid", itemid) :
                new ObjectParameter("itemid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_InventoryItemLastRates_Result>("Sp_Get_InventoryItemLastRates", itemidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_InventoryList_Result> Sp_Get_InventoryList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_InventoryList_Result>("Sp_Get_InventoryList");
        }
    
        public virtual ObjectResult<Sp_Get_InventoryList_All_Result> Sp_Get_InventoryList_All()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_InventoryList_All_Result>("Sp_Get_InventoryList_All");
        }
    
        public virtual ObjectResult<Sp_Get_InventoryList_Dep_Result> Sp_Get_InventoryList_Dep(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_InventoryList_Dep_Result>("Sp_Get_InventoryList_Dep", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_InventoryList_Dpt_All_Result> Sp_Get_InventoryList_Dpt_All()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_InventoryList_Dpt_All_Result>("Sp_Get_InventoryList_Dpt_All");
        }
    
        public virtual ObjectResult<Nullable<decimal>> Sp_Get_IssuedQuantity_AgainstPO(string po_num, Nullable<long> item_Id)
        {
            var po_numParameter = po_num != null ?
                new ObjectParameter("po_num", po_num) :
                new ObjectParameter("po_num", typeof(string));
    
            var item_IdParameter = item_Id.HasValue ?
                new ObjectParameter("item_Id", item_Id) :
                new ObjectParameter("item_Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Sp_Get_IssuedQuantity_AgainstPO", po_numParameter, item_IdParameter);
        }
    
        public virtual ObjectResult<SP_Get_IssueNote_Items_Result> SP_Get_IssueNote_Items(string issueNoteNum)
        {
            var issueNoteNumParameter = issueNoteNum != null ?
                new ObjectParameter("issueNoteNum", issueNoteNum) :
                new ObjectParameter("issueNoteNum", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Get_IssueNote_Items_Result>("SP_Get_IssueNote_Items", issueNoteNumParameter);
        }
    
        public virtual ObjectResult<Sp_Get_JournalEntries_All_Result> Sp_Get_JournalEntries_All(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string type, string u)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var uParameter = u != null ?
                new ObjectParameter("u", u) :
                new ObjectParameter("u", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_JournalEntries_All_Result>("Sp_Get_JournalEntries_All", fromParameter, toParameter, typeParameter, uParameter);
        }
    
        public virtual ObjectResult<Sp_Get_JournalEntries_Parameter_All_Result> Sp_Get_JournalEntries_Parameter_All(Nullable<long> grop)
        {
            var gropParameter = grop.HasValue ?
                new ObjectParameter("grop", grop) :
                new ObjectParameter("grop", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_JournalEntries_Parameter_All_Result>("Sp_Get_JournalEntries_Parameter_All", gropParameter);
        }
    
        public virtual ObjectResult<Sp_Get_JournalEntries_Payable_Parameter_Result> Sp_Get_JournalEntries_Payable_Parameter(Nullable<long> grop, Nullable<long> head)
        {
            var gropParameter = grop.HasValue ?
                new ObjectParameter("grop", grop) :
                new ObjectParameter("grop", typeof(long));
    
            var headParameter = head.HasValue ?
                new ObjectParameter("head", head) :
                new ObjectParameter("head", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_JournalEntries_Payable_Parameter_Result>("Sp_Get_JournalEntries_Payable_Parameter", gropParameter, headParameter);
        }
    
        public virtual ObjectResult<Sp_Get_JournalEntriesPayable_Parameter_Result> Sp_Get_JournalEntriesPayable_Parameter(Nullable<long> grop, Nullable<long> headid)
        {
            var gropParameter = grop.HasValue ?
                new ObjectParameter("grop", grop) :
                new ObjectParameter("grop", typeof(long));
    
            var headidParameter = headid.HasValue ?
                new ObjectParameter("headid", headid) :
                new ObjectParameter("headid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_JournalEntriesPayable_Parameter_Result>("Sp_Get_JournalEntriesPayable_Parameter", gropParameter, headidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_JournalLedger_Result> Sp_Get_JournalLedger(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string head)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var headParameter = head != null ?
                new ObjectParameter("Head", head) :
                new ObjectParameter("Head", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_JournalLedger_Result>("Sp_Get_JournalLedger", fromParameter, toParameter, headParameter);
        }
    
        public virtual ObjectResult<Sp_Get_JournalLedger_New_Result> Sp_Get_JournalLedger_New(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string head, string u)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var headParameter = head != null ?
                new ObjectParameter("Head", head) :
                new ObjectParameter("Head", typeof(string));
    
            var uParameter = u != null ?
                new ObjectParameter("u", u) :
                new ObjectParameter("u", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_JournalLedger_New_Result>("Sp_Get_JournalLedger_New", fromParameter, toParameter, headParameter, uParameter);
        }
    
        public virtual ObjectResult<Sp_Get_JournalLedger_WO_Balance_Result> Sp_Get_JournalLedger_WO_Balance(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string head, string u)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var headParameter = head != null ?
                new ObjectParameter("Head", head) :
                new ObjectParameter("Head", typeof(string));
    
            var uParameter = u != null ?
                new ObjectParameter("u", u) :
                new ObjectParameter("u", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_JournalLedger_WO_Balance_Result>("Sp_Get_JournalLedger_WO_Balance", fromParameter, toParameter, headParameter, uParameter);
        }
    
        public virtual ObjectResult<Sp_Get_LandDealsDetails_Result> Sp_Get_LandDealsDetails(Nullable<long> dealid)
        {
            var dealidParameter = dealid.HasValue ?
                new ObjectParameter("dealid", dealid) :
                new ObjectParameter("dealid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_LandDealsDetails_Result>("Sp_Get_LandDealsDetails", dealidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_LandPaymentDetails_Result> Sp_Get_LandPaymentDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_LandPaymentDetails_Result>("Sp_Get_LandPaymentDetails");
        }
    
        public virtual ObjectResult<Sp_Get_LandPaymentScheduleDetails_Result> Sp_Get_LandPaymentScheduleDetails(Nullable<long> dealid)
        {
            var dealidParameter = dealid.HasValue ?
                new ObjectParameter("dealid", dealid) :
                new ObjectParameter("dealid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_LandPaymentScheduleDetails_Result>("Sp_Get_LandPaymentScheduleDetails", dealidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_LandRecordDetails_Result> Sp_Get_LandRecordDetails(Nullable<long> dealid)
        {
            var dealidParameter = dealid.HasValue ?
                new ObjectParameter("dealid", dealid) :
                new ObjectParameter("dealid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_LandRecordDetails_Result>("Sp_Get_LandRecordDetails", dealidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_LandRecords_Result> Sp_Get_LandRecords()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_LandRecords_Result>("Sp_Get_LandRecords");
        }
    
        public virtual ObjectResult<Sp_Get_Last_Month_Salary_Report_Result> Sp_Get_Last_Month_Salary_Report()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Last_Month_Salary_Report_Result>("Sp_Get_Last_Month_Salary_Report");
        }
    
        public virtual ObjectResult<Sp_Get_LastAttendance_ByCheckin_Result> Sp_Get_LastAttendance_ByCheckin(Nullable<System.DateTime> checkIn, Nullable<long> empId)
        {
            var checkInParameter = checkIn.HasValue ?
                new ObjectParameter("checkIn", checkIn) :
                new ObjectParameter("checkIn", typeof(System.DateTime));
    
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("empId", empId) :
                new ObjectParameter("empId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_LastAttendance_ByCheckin_Result>("Sp_Get_LastAttendance_ByCheckin", checkInParameter, empIdParameter);
        }
    
        public virtual ObjectResult<Sp_Get_LastOwners_File_Id_Result> Sp_Get_LastOwners_File_Id(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_LastOwners_File_Id_Result>("Sp_Get_LastOwners_File_Id", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_LateComers_Result> Sp_Get_LateComers(Nullable<System.DateTime> attDate)
        {
            var attDateParameter = attDate.HasValue ?
                new ObjectParameter("attDate", attDate) :
                new ObjectParameter("attDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_LateComers_Result>("Sp_Get_LateComers", attDateParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Lead_Result> Sp_Get_Lead(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Lead_Result>("Sp_Get_Lead", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Lead_All_Result> Sp_Get_Lead_All(string status, string source, string compnay, Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var sourceParameter = source != null ?
                new ObjectParameter("source", source) :
                new ObjectParameter("source", typeof(string));
    
            var compnayParameter = compnay != null ?
                new ObjectParameter("compnay", compnay) :
                new ObjectParameter("compnay", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Lead_All_Result>("Sp_Get_Lead_All", statusParameter, sourceParameter, compnayParameter, fromParameter, toParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Lead_Search_Comp_Result> Sp_Get_Lead_Search_Comp(Nullable<long> user, Nullable<System.DateTime> from, Nullable<System.DateTime> to, string leadstatus)
        {
            var userParameter = user.HasValue ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(long));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var leadstatusParameter = leadstatus != null ?
                new ObjectParameter("leadstatus", leadstatus) :
                new ObjectParameter("leadstatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Lead_Search_Comp_Result>("Sp_Get_Lead_Search_Comp", userParameter, fromParameter, toParameter, leadstatusParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Lead_Search_Rep_Result> Sp_Get_Lead_Search_Rep(string user, Nullable<System.DateTime> from, Nullable<System.DateTime> to, string leadstatus)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var leadstatusParameter = leadstatus != null ?
                new ObjectParameter("leadstatus", leadstatus) :
                new ObjectParameter("leadstatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Lead_Search_Rep_Result>("Sp_Get_Lead_Search_Rep", userParameter, fromParameter, toParameter, leadstatusParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Lead_User_Result> Sp_Get_Lead_User(Nullable<long> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Lead_User_Result>("Sp_Get_Lead_User", useridParameter);
        }
    
        public virtual ObjectResult<Sp_Get_LeadFollowups_Result> Sp_Get_LeadFollowups(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_LeadFollowups_Result>("Sp_Get_LeadFollowups", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_LeadInstrument_MultiParamter_Result> Sp_Get_LeadInstrument_MultiParamter(string no, string stat, string bank, Nullable<System.DateTime> date)
        {
            var noParameter = no != null ?
                new ObjectParameter("No", no) :
                new ObjectParameter("No", typeof(string));
    
            var statParameter = stat != null ?
                new ObjectParameter("stat", stat) :
                new ObjectParameter("stat", typeof(string));
    
            var bankParameter = bank != null ?
                new ObjectParameter("bank", bank) :
                new ObjectParameter("bank", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_LeadInstrument_MultiParamter_Result>("Sp_Get_LeadInstrument_MultiParamter", noParameter, statParameter, bankParameter, dateParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Leads_ChDDPODetails_Multi_Result> Sp_Get_Leads_ChDDPODetails_Multi(string chPoDdIds)
        {
            var chPoDdIdsParameter = chPoDdIds != null ?
                new ObjectParameter("ChPoDdIds", chPoDdIds) :
                new ObjectParameter("ChPoDdIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Leads_ChDDPODetails_Multi_Result>("Sp_Get_Leads_ChDDPODetails_Multi", chPoDdIdsParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Leads_NewLeads_Result> Sp_Get_Leads_NewLeads()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Leads_NewLeads_Result>("Sp_Get_Leads_NewLeads");
        }
    
        public virtual ObjectResult<Sp_Get_Leads_Recovery_Rep_Result> Sp_Get_Leads_Recovery_Rep(string user, Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Leads_Recovery_Rep_Result>("Sp_Get_Leads_Recovery_Rep", userParameter, fromParameter, toParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Leads_Search_Result> Sp_Get_Leads_Search(Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Leads_Search_Result>("Sp_Get_Leads_Search", fromParameter, toParameter);
        }
    
        public virtual ObjectResult<Sp_Get_LeadsDishonredCheques_Result> Sp_Get_LeadsDishonredCheques()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_LeadsDishonredCheques_Result>("Sp_Get_LeadsDishonredCheques");
        }
    
        public virtual ObjectResult<Sp_Get_LeaveDetails_Result> Sp_Get_LeaveDetails(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_LeaveDetails_Result>("Sp_Get_LeaveDetails", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_LeaveManagement_HR_Result> Sp_Get_LeaveManagement_HR(string hr)
        {
            var hrParameter = hr != null ?
                new ObjectParameter("hr", hr) :
                new ObjectParameter("hr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_LeaveManagement_HR_Result>("Sp_Get_LeaveManagement_HR", hrParameter);
        }
    
        public virtual ObjectResult<Sp_Get_LeaveManagement_Manager_Result> Sp_Get_LeaveManagement_Manager(Nullable<long> userid, string manager)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var managerParameter = manager != null ?
                new ObjectParameter("manager", manager) :
                new ObjectParameter("manager", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_LeaveManagement_Manager_Result>("Sp_Get_LeaveManagement_Manager", useridParameter, managerParameter);
        }
    
        public virtual ObjectResult<Sp_Get_LeaveManagement_Other_Result> Sp_Get_LeaveManagement_Other(string status)
        {
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_LeaveManagement_Other_Result>("Sp_Get_LeaveManagement_Other", statusParameter);
        }
    
        public virtual ObjectResult<Sp_Get_LeaveRequisition_Result> Sp_Get_LeaveRequisition(Nullable<long> empid)
        {
            var empidParameter = empid.HasValue ?
                new ObjectParameter("Empid", empid) :
                new ObjectParameter("Empid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_LeaveRequisition_Result>("Sp_Get_LeaveRequisition", empidParameter);
        }
    
        public virtual int Sp_Get_Ledger(Nullable<long> deal_Id)
        {
            var deal_IdParameter = deal_Id.HasValue ?
                new ObjectParameter("Deal_Id", deal_Id) :
                new ObjectParameter("Deal_Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Get_Ledger", deal_IdParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Liability_Head_Balance_Result> Sp_Get_Liability_Head_Balance(Nullable<int> head)
        {
            var headParameter = head.HasValue ?
                new ObjectParameter("head", head) :
                new ObjectParameter("head", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Liability_Head_Balance_Result>("Sp_Get_Liability_Head_Balance", headParameter);
        }
    
        public virtual ObjectResult<Sp_Get_LoanAdvanceInstallment_Result> Sp_Get_LoanAdvanceInstallment(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_LoanAdvanceInstallment_Result>("Sp_Get_LoanAdvanceInstallment", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_LoanAdvanceInstallment_Updation_Result> Sp_Get_LoanAdvanceInstallment_Updation(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_LoanAdvanceInstallment_Updation_Result>("Sp_Get_LoanAdvanceInstallment_Updation", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_LoanDetails_Result> Sp_Get_LoanDetails(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_LoanDetails_Result>("Sp_Get_LoanDetails", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_LoanInstallments_Result> Sp_Get_LoanInstallments(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_LoanInstallments_Result>("Sp_Get_LoanInstallments", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_LoanManagement_HR_Result> Sp_Get_LoanManagement_HR(string hr)
        {
            var hrParameter = hr != null ?
                new ObjectParameter("hr", hr) :
                new ObjectParameter("hr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_LoanManagement_HR_Result>("Sp_Get_LoanManagement_HR", hrParameter);
        }
    
        public virtual ObjectResult<Sp_Get_LoanManagement_Manager_Result> Sp_Get_LoanManagement_Manager(Nullable<long> userid, string manager)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var managerParameter = manager != null ?
                new ObjectParameter("manager", manager) :
                new ObjectParameter("manager", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_LoanManagement_Manager_Result>("Sp_Get_LoanManagement_Manager", useridParameter, managerParameter);
        }
    
        public virtual ObjectResult<Sp_Get_LoanManagement_Other_Result> Sp_Get_LoanManagement_Other(string status)
        {
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_LoanManagement_Other_Result>("Sp_Get_LoanManagement_Other", statusParameter);
        }
    
        public virtual ObjectResult<Sp_Get_LoanOrAdvanceList_Result> Sp_Get_LoanOrAdvanceList(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_LoanOrAdvanceList_Result>("Sp_Get_LoanOrAdvanceList", nameParameter);
        }
    
        public virtual ObjectResult<Sp_Get_LoanSummary_Result> Sp_Get_LoanSummary()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_LoanSummary_Result>("Sp_Get_LoanSummary");
        }
    
        public virtual ObjectResult<Sp_Get_LoginInformation_Result> Sp_Get_LoginInformation(string phoneNumber)
        {
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_LoginInformation_Result>("Sp_Get_LoginInformation", phoneNumberParameter);
        }
    
        public virtual ObjectResult<Sp_Get_ManagerStatus_Result> Sp_Get_ManagerStatus(Nullable<long> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_ManagerStatus_Result>("Sp_Get_ManagerStatus", useridParameter);
        }
    
        public virtual ObjectResult<Sp_Get_MarketingCancelReq_Result> Sp_Get_MarketingCancelReq(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, string userid)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_MarketingCancelReq_Result>("Sp_Get_MarketingCancelReq", fromdateParameter, todateParameter, useridParameter);
        }
    
        public virtual ObjectResult<Sp_Get_MarketingReceipt_Parameter_ById_Result> Sp_Get_MarketingReceipt_Parameter_ById(Nullable<long> id, string type)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_MarketingReceipt_Parameter_ById_Result>("Sp_Get_MarketingReceipt_Parameter_ById", idParameter, typeParameter);
        }
    
        public virtual ObjectResult<Sp_Get_MarketingReceiptRequests_Update_Result> Sp_Get_MarketingReceiptRequests_Update()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_MarketingReceiptRequests_Update_Result>("Sp_Get_MarketingReceiptRequests_Update");
        }
    
        public virtual ObjectResult<Sp_Get_MarketingReceiptRequests_Update_Details_Result> Sp_Get_MarketingReceiptRequests_Update_Details(Nullable<long> id, string type)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_MarketingReceiptRequests_Update_Details_Result>("Sp_Get_MarketingReceiptRequests_Update_Details", idParameter, typeParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Material_Receiving_Report_Result> Sp_Get_Material_Receiving_Report(Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Material_Receiving_Report_Result>("Sp_Get_Material_Receiving_Report", fromParameter, toParameter);
        }
    
        public virtual ObjectResult<Sp_Get_MaterialShift_List_Result> Sp_Get_MaterialShift_List(Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_MaterialShift_List_Result>("Sp_Get_MaterialShift_List", fromParameter, toParameter);
        }
    
        public virtual ObjectResult<SP_Get_MaterialStatement_Result> SP_Get_MaterialStatement(Nullable<long> projectId)
        {
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("ProjectId", projectId) :
                new ObjectParameter("ProjectId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Get_MaterialStatement_Result>("SP_Get_MaterialStatement", projectIdParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Member_Parameter_Result> Sp_Get_Member_Parameter(Nullable<long> proid)
        {
            var proidParameter = proid.HasValue ?
                new ObjectParameter("proid", proid) :
                new ObjectParameter("proid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Member_Parameter_Result>("Sp_Get_Member_Parameter", proidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_MembersFee_Delivery_Result> Sp_Get_MembersFee_Delivery(Nullable<long> projectid)
        {
            var projectidParameter = projectid.HasValue ?
                new ObjectParameter("projectid", projectid) :
                new ObjectParameter("projectid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_MembersFee_Delivery_Result>("Sp_Get_MembersFee_Delivery", projectidParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> Sp_Get_MembershipFee(string type, Nullable<long> id)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Sp_Get_MembershipFee", typeParameter, idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Message_Parameter_Result> Sp_Get_Message_Parameter(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Message_Parameter_Result>("Sp_Get_Message_Parameter", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Messages_Result> Sp_Get_Messages(Nullable<long> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Messages_Result>("Sp_Get_Messages", useridParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Messages_Short_Result> Sp_Get_Messages_Short(Nullable<long> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Messages_Short_Result>("Sp_Get_Messages_Short", useridParameter);
        }
    
        public virtual ObjectResult<Sp_Get_MIS_Requests_Result> Sp_Get_MIS_Requests(Nullable<long> uid, string tp)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(long));
    
            var tpParameter = tp != null ?
                new ObjectParameter("tp", tp) :
                new ObjectParameter("tp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_MIS_Requests_Result>("Sp_Get_MIS_Requests", uidParameter, tpParameter);
        }
    
        public virtual ObjectResult<Sp_Get_MSItemName_Result> Sp_Get_MSItemName(Nullable<long> prj_Id)
        {
            var prj_IdParameter = prj_Id.HasValue ?
                new ObjectParameter("Prj_Id", prj_Id) :
                new ObjectParameter("Prj_Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_MSItemName_Result>("Sp_Get_MSItemName", prj_IdParameter);
        }
    
        public virtual ObjectResult<Sp_Get_MTS_Req_Count_Result> Sp_Get_MTS_Req_Count(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_MTS_Req_Count_Result>("Sp_Get_MTS_Req_Count", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_MyActivities_List_Result> Sp_Get_MyActivities_List(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<long> uid)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_MyActivities_List_Result>("Sp_Get_MyActivities_List", fromdateParameter, todateParameter, uidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_NDCFormDetails_Result> Sp_Get_NDCFormDetails(Nullable<long> serialnum)
        {
            var serialnumParameter = serialnum.HasValue ?
                new ObjectParameter("serialnum", serialnum) :
                new ObjectParameter("serialnum", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_NDCFormDetails_Result>("Sp_Get_NDCFormDetails", serialnumParameter);
        }
    
        public virtual ObjectResult<Sp_Get_NDCFormDetails_Commercial_Result> Sp_Get_NDCFormDetails_Commercial(Nullable<long> comId)
        {
            var comIdParameter = comId.HasValue ?
                new ObjectParameter("comId", comId) :
                new ObjectParameter("comId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_NDCFormDetails_Commercial_Result>("Sp_Get_NDCFormDetails_Commercial", comIdParameter);
        }
    
        public virtual ObjectResult<Sp_Get_NDCFormDetails_Plot_Result> Sp_Get_NDCFormDetails_Plot(Nullable<long> plt)
        {
            var pltParameter = plt.HasValue ?
                new ObjectParameter("plt", plt) :
                new ObjectParameter("plt", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_NDCFormDetails_Plot_Result>("Sp_Get_NDCFormDetails_Plot", pltParameter);
        }
    
        public virtual int Sp_Get_NetIncomeAllCompanies(Nullable<System.DateTime> to, Nullable<System.DateTime> from, string id)
        {
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Get_NetIncomeAllCompanies", toParameter, fromParameter, idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_NewMeterReading_Result> Sp_Get_NewMeterReading(Nullable<long> blkid)
        {
            var blkidParameter = blkid.HasValue ?
                new ObjectParameter("blkid", blkid) :
                new ObjectParameter("blkid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_NewMeterReading_Result>("Sp_Get_NewMeterReading", blkidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_NomineeInfo_Result> Sp_Get_NomineeInfo(string fileId)
        {
            var fileIdParameter = fileId != null ?
                new ObjectParameter("FileId", fileId) :
                new ObjectParameter("FileId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_NomineeInfo_Result>("Sp_Get_NomineeInfo", fileIdParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Notifications_User_Result> Sp_Get_Notifications_User(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Notifications_User_Result>("Sp_Get_Notifications_User", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Notifications_User_Short_Result> Sp_Get_Notifications_User_Short(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Notifications_User_Short_Result>("Sp_Get_Notifications_User_Short", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Official_Leaves_Result> Sp_Get_Official_Leaves(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Official_Leaves_Result>("Sp_Get_Official_Leaves", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<Sp_Get_OfficialLeaves_Result> Sp_Get_OfficialLeaves()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_OfficialLeaves_Result>("Sp_Get_OfficialLeaves");
        }
    
        public virtual ObjectResult<Sp_Get_Online_Result> Sp_Get_Online(string status, Nullable<System.DateTime> from, Nullable<System.DateTime> to, Nullable<int> comp)
        {
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Online_Result>("Sp_Get_Online", statusParameter, fromParameter, toParameter, compParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Online_Leads_Result> Sp_Get_Online_Leads(string status, string comp)
        {
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var compParameter = comp != null ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Online_Leads_Result>("Sp_Get_Online_Leads", statusParameter, compParameter);
        }
    
        public virtual ObjectResult<Sp_Get_OtherInstallments_Result> Sp_Get_OtherInstallments(string fileId, string cnic)
        {
            var fileIdParameter = fileId != null ?
                new ObjectParameter("FileId", fileId) :
                new ObjectParameter("FileId", typeof(string));
    
            var cnicParameter = cnic != null ?
                new ObjectParameter("cnic", cnic) :
                new ObjectParameter("cnic", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_OtherInstallments_Result>("Sp_Get_OtherInstallments", fileIdParameter, cnicParameter);
        }
    
        public virtual ObjectResult<Sp_Get_OverDueAmount_Search_Result> Sp_Get_OverDueAmount_Search(Nullable<int> installments, Nullable<int> s_Inst_Range, Nullable<int> e_Inst_Range, string plot_Size, Nullable<long> dealer_Id, Nullable<decimal> s_Range, Nullable<decimal> e_Range, Nullable<decimal> g_Amt, Nullable<decimal> l_Amt)
        {
            var installmentsParameter = installments.HasValue ?
                new ObjectParameter("Installments", installments) :
                new ObjectParameter("Installments", typeof(int));
    
            var s_Inst_RangeParameter = s_Inst_Range.HasValue ?
                new ObjectParameter("S_Inst_Range", s_Inst_Range) :
                new ObjectParameter("S_Inst_Range", typeof(int));
    
            var e_Inst_RangeParameter = e_Inst_Range.HasValue ?
                new ObjectParameter("E_Inst_Range", e_Inst_Range) :
                new ObjectParameter("E_Inst_Range", typeof(int));
    
            var plot_SizeParameter = plot_Size != null ?
                new ObjectParameter("Plot_Size", plot_Size) :
                new ObjectParameter("Plot_Size", typeof(string));
    
            var dealer_IdParameter = dealer_Id.HasValue ?
                new ObjectParameter("Dealer_Id", dealer_Id) :
                new ObjectParameter("Dealer_Id", typeof(long));
    
            var s_RangeParameter = s_Range.HasValue ?
                new ObjectParameter("S_Range", s_Range) :
                new ObjectParameter("S_Range", typeof(decimal));
    
            var e_RangeParameter = e_Range.HasValue ?
                new ObjectParameter("E_Range", e_Range) :
                new ObjectParameter("E_Range", typeof(decimal));
    
            var g_AmtParameter = g_Amt.HasValue ?
                new ObjectParameter("G_Amt", g_Amt) :
                new ObjectParameter("G_Amt", typeof(decimal));
    
            var l_AmtParameter = l_Amt.HasValue ?
                new ObjectParameter("L_Amt", l_Amt) :
                new ObjectParameter("L_Amt", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_OverDueAmount_Search_Result>("Sp_Get_OverDueAmount_Search", installmentsParameter, s_Inst_RangeParameter, e_Inst_RangeParameter, plot_SizeParameter, dealer_IdParameter, s_RangeParameter, e_RangeParameter, g_AmtParameter, l_AmtParameter);
        }
    
        public virtual ObjectResult<Sp_Get_OverDueFilesReport_Result> Sp_Get_OverDueFilesReport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_OverDueFilesReport_Result>("Sp_Get_OverDueFilesReport");
        }
    
        public virtual ObjectResult<Sp_Get_OverdueQualifying_Plots_Result> Sp_Get_OverdueQualifying_Plots()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_OverdueQualifying_Plots_Result>("Sp_Get_OverdueQualifying_Plots");
        }
    
        public virtual ObjectResult<Sp_Get_OverdueQualifying_Plots_Id_Result> Sp_Get_OverdueQualifying_Plots_Id(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_OverdueQualifying_Plots_Id_Result>("Sp_Get_OverdueQualifying_Plots_Id", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_OverdueQualifying_Shop_Id_Result> Sp_Get_OverdueQualifying_Shop_Id(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_OverdueQualifying_Shop_Id_Result>("Sp_Get_OverdueQualifying_Shop_Id", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_OverdueQualifying_Shops_Result> Sp_Get_OverdueQualifying_Shops()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_OverdueQualifying_Shops_Result>("Sp_Get_OverdueQualifying_Shops");
        }
    
        public virtual ObjectResult<Sp_Get_PattyCash_EmployeeList_Result> Sp_Get_PattyCash_EmployeeList(string tp, string startQry, string endQry)
        {
            var tpParameter = tp != null ?
                new ObjectParameter("tp", tp) :
                new ObjectParameter("tp", typeof(string));
    
            var startQryParameter = startQry != null ?
                new ObjectParameter("startQry", startQry) :
                new ObjectParameter("startQry", typeof(string));
    
            var endQryParameter = endQry != null ?
                new ObjectParameter("endQry", endQry) :
                new ObjectParameter("endQry", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PattyCash_EmployeeList_Result>("Sp_Get_PattyCash_EmployeeList", tpParameter, startQryParameter, endQryParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PattyCashItems_Result> Sp_Get_PattyCashItems(Nullable<long> tranId)
        {
            var tranIdParameter = tranId.HasValue ?
                new ObjectParameter("tranId", tranId) :
                new ObjectParameter("tranId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PattyCashItems_Result>("Sp_Get_PattyCashItems", tranIdParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PattyCashItems_List_Result> Sp_Get_PattyCashItems_List(string status, string uid, Nullable<bool> adm)
        {
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var uidParameter = uid != null ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(string));
    
            var admParameter = adm.HasValue ?
                new ObjectParameter("adm", adm) :
                new ObjectParameter("adm", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PattyCashItems_List_Result>("Sp_Get_PattyCashItems_List", statusParameter, uidParameter, admParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PattyCashItems_User_Result> Sp_Get_PattyCashItems_User(Nullable<long> userid, string status)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PattyCashItems_User_Result>("Sp_Get_PattyCashItems_User", useridParameter, statusParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Payable_ArchiveOrReceivable_Result> Sp_Get_Payable_ArchiveOrReceivable(string sta)
        {
            var staParameter = sta != null ?
                new ObjectParameter("sta", sta) :
                new ObjectParameter("sta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Payable_ArchiveOrReceivable_Result>("Sp_Get_Payable_ArchiveOrReceivable", staParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PayableByGroup_Result> Sp_Get_PayableByGroup(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PayableByGroup_Result>("Sp_Get_PayableByGroup", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PayableHistory_Result> Sp_Get_PayableHistory(Nullable<long> groupid)
        {
            var groupidParameter = groupid.HasValue ?
                new ObjectParameter("groupid", groupid) :
                new ObjectParameter("groupid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PayableHistory_Result>("Sp_Get_PayableHistory", groupidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Payables_Detail_Result> Sp_Get_Payables_Detail(string type)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Payables_Detail_Result>("Sp_Get_Payables_Detail", typeParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PayableVouchers_Result> Sp_Get_PayableVouchers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PayableVouchers_Result>("Sp_Get_PayableVouchers");
        }
    
        public virtual ObjectResult<Sp_Get_PayableVouchers_Head_Result> Sp_Get_PayableVouchers_Head(Nullable<long> groupid, Nullable<long> head)
        {
            var groupidParameter = groupid.HasValue ?
                new ObjectParameter("groupid", groupid) :
                new ObjectParameter("groupid", typeof(long));
    
            var headParameter = head.HasValue ?
                new ObjectParameter("head", head) :
                new ObjectParameter("head", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PayableVouchers_Head_Result>("Sp_Get_PayableVouchers_Head", groupidParameter, headParameter);
        }
    
        public virtual ObjectResult<SP_Get_PaymentSchedule_ByMile_Result> SP_Get_PaymentSchedule_ByMile(string miles)
        {
            var milesParameter = miles != null ?
                new ObjectParameter("Miles", miles) :
                new ObjectParameter("Miles", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Get_PaymentSchedule_ByMile_Result>("SP_Get_PaymentSchedule_ByMile", milesParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PayOrder_Result> Sp_Get_PayOrder()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PayOrder_Result>("Sp_Get_PayOrder");
        }
    
        public virtual ObjectResult<Sp_Get_Payroll_Details_Result> Sp_Get_Payroll_Details(Nullable<System.DateTime> start, Nullable<System.DateTime> end, Nullable<long> depart)
        {
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("end", end) :
                new ObjectParameter("end", typeof(System.DateTime));
    
            var departParameter = depart.HasValue ?
                new ObjectParameter("depart", depart) :
                new ObjectParameter("depart", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Payroll_Details_Result>("Sp_Get_Payroll_Details", startParameter, endParameter, departParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PayrollReport_Result> Sp_Get_PayrollReport(Nullable<System.DateTime> start, Nullable<System.DateTime> end, Nullable<long> dep)
        {
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("end", end) :
                new ObjectParameter("end", typeof(System.DateTime));
    
            var depParameter = dep.HasValue ?
                new ObjectParameter("dep", dep) :
                new ObjectParameter("dep", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PayrollReport_Result>("Sp_Get_PayrollReport", startParameter, endParameter, depParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Pending_Invoice_Entries_Result> Sp_Get_Pending_Invoice_Entries()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Pending_Invoice_Entries_Result>("Sp_Get_Pending_Invoice_Entries");
        }
    
        public virtual ObjectResult<Sp_Get_Pending_Invoices_Result> Sp_Get_Pending_Invoices()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Pending_Invoices_Result>("Sp_Get_Pending_Invoices");
        }
    
        public virtual ObjectResult<Sp_Get_Pending_Payables_Result> Sp_Get_Pending_Payables(Nullable<int> compid)
        {
            var compidParameter = compid.HasValue ?
                new ObjectParameter("compid", compid) :
                new ObjectParameter("compid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Pending_Payables_Result>("Sp_Get_Pending_Payables", compidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Pending_purchaseOrder_Result> Sp_Get_Pending_purchaseOrder()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Pending_purchaseOrder_Result>("Sp_Get_Pending_purchaseOrder");
        }
    
        public virtual ObjectResult<Sp_Get_Pending_Receipt_Request_Result> Sp_Get_Pending_Receipt_Request(string project)
        {
            var projectParameter = project != null ?
                new ObjectParameter("project", project) :
                new ObjectParameter("project", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Pending_Receipt_Request_Result>("Sp_Get_Pending_Receipt_Request", projectParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Pending_SAMCashier_Report_Result> Sp_Get_Pending_SAMCashier_Report(Nullable<long> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Pending_SAMCashier_Report_Result>("Sp_Get_Pending_SAMCashier_Report", useridParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PendingPayments_Result> Sp_Get_PendingPayments()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PendingPayments_Result>("Sp_Get_PendingPayments");
        }
    
        public virtual ObjectResult<Sp_Get_PendingSAMCashierVoucherUser_Report_Result> Sp_Get_PendingSAMCashierVoucherUser_Report(Nullable<long> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PendingSAMCashierVoucherUser_Report_Result>("Sp_Get_PendingSAMCashierVoucherUser_Report", useridParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PersonalInfo_Result> Sp_Get_PersonalInfo(string fileFormId, string cnic)
        {
            var fileFormIdParameter = fileFormId != null ?
                new ObjectParameter("FileFormId", fileFormId) :
                new ObjectParameter("FileFormId", typeof(string));
    
            var cnicParameter = cnic != null ?
                new ObjectParameter("cnic", cnic) :
                new ObjectParameter("cnic", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PersonalInfo_Result>("Sp_Get_PersonalInfo", fileFormIdParameter, cnicParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PersonalInfo1_Result> Sp_Get_PersonalInfo1(string fileFormId)
        {
            var fileFormIdParameter = fileFormId != null ?
                new ObjectParameter("FileFormId", fileFormId) :
                new ObjectParameter("FileFormId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PersonalInfo1_Result>("Sp_Get_PersonalInfo1", fileFormIdParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Phase_Result> Sp_Get_Phase()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Phase_Result>("Sp_Get_Phase");
        }
    
        public virtual ObjectResult<Sp_Get_Phase_Blocks_Parameter_Result> Sp_Get_Phase_Blocks_Parameter(Nullable<long> phase_id)
        {
            var phase_idParameter = phase_id.HasValue ?
                new ObjectParameter("phase_id", phase_id) :
                new ObjectParameter("phase_id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Phase_Blocks_Parameter_Result>("Sp_Get_Phase_Blocks_Parameter", phase_idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Plot_Image_Result> Sp_Get_Plot_Image()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Plot_Image_Result>("Sp_Get_Plot_Image");
        }
    
        public virtual ObjectResult<Sp_Get_Plot_Prefrences_Result> Sp_Get_Plot_Prefrences()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Plot_Prefrences_Result>("Sp_Get_Plot_Prefrences");
        }
    
        public virtual ObjectResult<Sp_Get_Plot_Prefrences_Parameters_Result> Sp_Get_Plot_Prefrences_Parameters(Nullable<long> plotid)
        {
            var plotidParameter = plotid.HasValue ?
                new ObjectParameter("plotid", plotid) :
                new ObjectParameter("plotid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Plot_Prefrences_Parameters_Result>("Sp_Get_Plot_Prefrences_Parameters", plotidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Plot_Search_Result> Sp_Get_Plot_Search(Nullable<int> option, string text1, string text2, string text3)
        {
            var optionParameter = option.HasValue ?
                new ObjectParameter("option", option) :
                new ObjectParameter("option", typeof(int));
    
            var text1Parameter = text1 != null ?
                new ObjectParameter("text1", text1) :
                new ObjectParameter("text1", typeof(string));
    
            var text2Parameter = text2 != null ?
                new ObjectParameter("text2", text2) :
                new ObjectParameter("text2", typeof(string));
    
            var text3Parameter = text3 != null ?
                new ObjectParameter("text3", text3) :
                new ObjectParameter("text3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Plot_Search_Result>("Sp_Get_Plot_Search", optionParameter, text1Parameter, text2Parameter, text3Parameter);
        }
    
        public virtual ObjectResult<Sp_Get_PlotCancelation_Req_Result> Sp_Get_PlotCancelation_Req(string role)
        {
            var roleParameter = role != null ?
                new ObjectParameter("role", role) :
                new ObjectParameter("role", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PlotCancelation_Req_Result>("Sp_Get_PlotCancelation_Req", roleParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PlotCancelOwnerInstallments_Result> Sp_Get_PlotCancelOwnerInstallments(Nullable<long> plotid, Nullable<long> ownerId)
        {
            var plotidParameter = plotid.HasValue ?
                new ObjectParameter("Plotid", plotid) :
                new ObjectParameter("Plotid", typeof(long));
    
            var ownerIdParameter = ownerId.HasValue ?
                new ObjectParameter("ownerId", ownerId) :
                new ObjectParameter("ownerId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PlotCancelOwnerInstallments_Result>("Sp_Get_PlotCancelOwnerInstallments", plotidParameter, ownerIdParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PlotComments_Result> Sp_Get_PlotComments(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PlotComments_Result>("Sp_Get_PlotComments", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PlotData_Result> Sp_Get_PlotData(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PlotData_Result>("Sp_Get_PlotData", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PlotDcRate_Result> Sp_Get_PlotDcRate(Nullable<long> id, string module)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var moduleParameter = module != null ?
                new ObjectParameter("module", module) :
                new ObjectParameter("module", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PlotDcRate_Result>("Sp_Get_PlotDcRate", idParameter, moduleParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PlotDetailData_Result> Sp_Get_PlotDetailData(Nullable<long> plotid)
        {
            var plotidParameter = plotid.HasValue ?
                new ObjectParameter("Plotid", plotid) :
                new ObjectParameter("Plotid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PlotDetailData_Result>("Sp_Get_PlotDetailData", plotidParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Get_PlotIdsServiceCharges()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Get_PlotIdsServiceCharges");
        }
    
        public virtual ObjectResult<Sp_Get_PlotInstallments_Result> Sp_Get_PlotInstallments(Nullable<long> plotid)
        {
            var plotidParameter = plotid.HasValue ?
                new ObjectParameter("Plotid", plotid) :
                new ObjectParameter("Plotid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PlotInstallments_Result>("Sp_Get_PlotInstallments", plotidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PlotLastBill_SC_Result> Sp_Get_PlotLastBill_SC(Nullable<long> plotid)
        {
            var plotidParameter = plotid.HasValue ?
                new ObjectParameter("Plotid", plotid) :
                new ObjectParameter("Plotid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PlotLastBill_SC_Result>("Sp_Get_PlotLastBill_SC", plotidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PlotLastElectricityBills_Result> Sp_Get_PlotLastElectricityBills(string plotid)
        {
            var plotidParameter = plotid != null ?
                new ObjectParameter("plotid", plotid) :
                new ObjectParameter("plotid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PlotLastElectricityBills_Result>("Sp_Get_PlotLastElectricityBills", plotidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PlotLastOwner_Result> Sp_Get_PlotLastOwner(Nullable<long> plotid)
        {
            var plotidParameter = plotid.HasValue ?
                new ObjectParameter("Plotid", plotid) :
                new ObjectParameter("Plotid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PlotLastOwner_Result>("Sp_Get_PlotLastOwner", plotidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PlotLastServiceCharges_Result> Sp_Get_PlotLastServiceCharges(Nullable<long> plotid)
        {
            var plotidParameter = plotid.HasValue ?
                new ObjectParameter("plotid", plotid) :
                new ObjectParameter("plotid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PlotLastServiceCharges_Result>("Sp_Get_PlotLastServiceCharges", plotidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Plotlist_Block_Result> Sp_Get_Plotlist_Block(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Plotlist_Block_Result>("Sp_Get_Plotlist_Block", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PlotList_Block_Parameter_Result> Sp_Get_PlotList_Block_Parameter(string block)
        {
            var blockParameter = block != null ?
                new ObjectParameter("block", block) :
                new ObjectParameter("block", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PlotList_Block_Parameter_Result>("Sp_Get_PlotList_Block_Parameter", blockParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PlotList_Parameter_Result> Sp_Get_PlotList_Parameter(string status)
        {
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PlotList_Parameter_Result>("Sp_Get_PlotList_Parameter", statusParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PlotList_Plot_Parameter_Result> Sp_Get_PlotList_Plot_Parameter(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PlotList_Plot_Parameter_Result>("Sp_Get_PlotList_Plot_Parameter", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PlotNOC_Result> Sp_Get_PlotNOC(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PlotNOC_Result>("Sp_Get_PlotNOC", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PlotOwnerId_Result> Sp_Get_PlotOwnerId(Nullable<long> owenrid)
        {
            var owenridParameter = owenrid.HasValue ?
                new ObjectParameter("owenrid", owenrid) :
                new ObjectParameter("owenrid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PlotOwnerId_Result>("Sp_Get_PlotOwnerId", owenridParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PlotOwnerList_Result> Sp_Get_PlotOwnerList(Nullable<long> plotid)
        {
            var plotidParameter = plotid.HasValue ?
                new ObjectParameter("Plotid", plotid) :
                new ObjectParameter("Plotid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PlotOwnerList_Result>("Sp_Get_PlotOwnerList", plotidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PlotReceiptRefund_Req_Result> Sp_Get_PlotReceiptRefund_Req(string role, string mod)
        {
            var roleParameter = role != null ?
                new ObjectParameter("role", role) :
                new ObjectParameter("role", typeof(string));
    
            var modParameter = mod != null ?
                new ObjectParameter("mod", mod) :
                new ObjectParameter("mod", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PlotReceiptRefund_Req_Result>("Sp_Get_PlotReceiptRefund_Req", roleParameter, modParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PlotReceivedAmt_Result> Sp_Get_PlotReceivedAmt(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PlotReceivedAmt_Result>("Sp_Get_PlotReceivedAmt", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PlotRecord_Parameter_Result> Sp_Get_PlotRecord_Parameter(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PlotRecord_Parameter_Result>("Sp_Get_PlotRecord_Parameter", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PlotRentals_Result> Sp_Get_PlotRentals()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PlotRentals_Result>("Sp_Get_PlotRentals");
        }
    
        public virtual ObjectResult<Nullable<decimal>> Sp_Get_Plots_Size()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Sp_Get_Plots_Size");
        }
    
        public virtual ObjectResult<Sp_Get_Plots_Size_Parameters_Result> Sp_Get_Plots_Size_Parameters(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Plots_Size_Parameters_Result>("Sp_Get_Plots_Size_Parameters", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PlotsCategory_Result> Sp_Get_PlotsCategory()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PlotsCategory_Result>("Sp_Get_PlotsCategory");
        }
    
        public virtual ObjectResult<Sp_Get_PlotSecondLastOwner_Result> Sp_Get_PlotSecondLastOwner(Nullable<long> pltId)
        {
            var pltIdParameter = pltId.HasValue ?
                new ObjectParameter("pltId", pltId) :
                new ObjectParameter("pltId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PlotSecondLastOwner_Result>("Sp_Get_PlotSecondLastOwner", pltIdParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PlotsElectricCharges_ByBlock_Result> Sp_Get_PlotsElectricCharges_ByBlock(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PlotsElectricCharges_ByBlock_Result>("Sp_Get_PlotsElectricCharges_ByBlock", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PlotsElectricCharges_ByBlock_Type_Parameter_Result> Sp_Get_PlotsElectricCharges_ByBlock_Type_Parameter(string type, Nullable<long> id)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PlotsElectricCharges_ByBlock_Type_Parameter_Result>("Sp_Get_PlotsElectricCharges_ByBlock_Type_Parameter", typeParameter, idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PlotsElectricCharges_ById_Result> Sp_Get_PlotsElectricCharges_ById(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PlotsElectricCharges_ById_Result>("Sp_Get_PlotsElectricCharges_ById", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PlotsElectricCharges_ByPlot_Result> Sp_Get_PlotsElectricCharges_ByPlot(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PlotsElectricCharges_ByPlot_Result>("Sp_Get_PlotsElectricCharges_ByPlot", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PlotsElectricCharges_ByServiceChargesPlotId_Result> Sp_Get_PlotsElectricCharges_ByServiceChargesPlotId(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PlotsElectricCharges_ByServiceChargesPlotId_Result>("Sp_Get_PlotsElectricCharges_ByServiceChargesPlotId", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PlotsElectricCharges_NewMeterReadinds_Result> Sp_Get_PlotsElectricCharges_NewMeterReadinds()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PlotsElectricCharges_NewMeterReadinds_Result>("Sp_Get_PlotsElectricCharges_NewMeterReadinds");
        }
    
        public virtual ObjectResult<Sp_Get_PlotsElectricCharges_NewMeterReadinds_PlotId_Parameter_Result> Sp_Get_PlotsElectricCharges_NewMeterReadinds_PlotId_Parameter(Nullable<long> pltid)
        {
            var pltidParameter = pltid.HasValue ?
                new ObjectParameter("pltid", pltid) :
                new ObjectParameter("pltid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PlotsElectricCharges_NewMeterReadinds_PlotId_Parameter_Result>("Sp_Get_PlotsElectricCharges_NewMeterReadinds_PlotId_Parameter", pltidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PlotsElectricCharges_NewMeterReadinds_Type_Parameter_Result> Sp_Get_PlotsElectricCharges_NewMeterReadinds_Type_Parameter(string type, Nullable<long> id)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PlotsElectricCharges_NewMeterReadinds_Type_Parameter_Result>("Sp_Get_PlotsElectricCharges_NewMeterReadinds_Type_Parameter", typeParameter, idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PlotServiceChargeBills_Result> Sp_Get_PlotServiceChargeBills(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PlotServiceChargeBills_Result>("Sp_Get_PlotServiceChargeBills", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PlotServiceCharges_Result> Sp_Get_PlotServiceCharges(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PlotServiceCharges_Result>("Sp_Get_PlotServiceCharges", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PlotServiceChargesTypeList_Result> Sp_Get_PlotServiceChargesTypeList(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PlotServiceChargesTypeList_Result>("Sp_Get_PlotServiceChargesTypeList", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PlotSize_Result> Sp_Get_PlotSize(string fileNumber)
        {
            var fileNumberParameter = fileNumber != null ?
                new ObjectParameter("FileNumber", fileNumber) :
                new ObjectParameter("FileNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PlotSize_Result>("Sp_Get_PlotSize", fileNumberParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PlotsMeterDetails_Result> Sp_Get_PlotsMeterDetails(Nullable<long> block_Id)
        {
            var block_IdParameter = block_Id.HasValue ?
                new ObjectParameter("block_Id", block_Id) :
                new ObjectParameter("block_Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PlotsMeterDetails_Result>("Sp_Get_PlotsMeterDetails", block_IdParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PlotsMeterDetails_NewMeterReadings_Result> Sp_Get_PlotsMeterDetails_NewMeterReadings(Nullable<long> block_Id)
        {
            var block_IdParameter = block_Id.HasValue ?
                new ObjectParameter("block_Id", block_Id) :
                new ObjectParameter("block_Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PlotsMeterDetails_NewMeterReadings_Result>("Sp_Get_PlotsMeterDetails_NewMeterReadings", block_IdParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PlotsMeterLastReading_Result> Sp_Get_PlotsMeterLastReading()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PlotsMeterLastReading_Result>("Sp_Get_PlotsMeterLastReading");
        }
    
        public virtual ObjectResult<Sp_Get_PlotsMeterLastReading_From_MeterReading_Result> Sp_Get_PlotsMeterLastReading_From_MeterReading()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PlotsMeterLastReading_From_MeterReading_Result>("Sp_Get_PlotsMeterLastReading_From_MeterReading");
        }
    
        public virtual ObjectResult<Sp_Get_PlotsServiceCharges_ByBlock_Result> Sp_Get_PlotsServiceCharges_ByBlock(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PlotsServiceCharges_ByBlock_Result>("Sp_Get_PlotsServiceCharges_ByBlock", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PlotsServiceCharges_ById_Result> Sp_Get_PlotsServiceCharges_ById(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PlotsServiceCharges_ById_Result>("Sp_Get_PlotsServiceCharges_ById", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PlotsServiceCharges_ByPlot_Result> Sp_Get_PlotsServiceCharges_ByPlot(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PlotsServiceCharges_ByPlot_Result>("Sp_Get_PlotsServiceCharges_ByPlot", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PlotsServiceChargesList_Result> Sp_Get_PlotsServiceChargesList(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PlotsServiceChargesList_Result>("Sp_Get_PlotsServiceChargesList", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PlotsServiceChargesListRecord_Result> Sp_Get_PlotsServiceChargesListRecord()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PlotsServiceChargesListRecord_Result>("Sp_Get_PlotsServiceChargesListRecord");
        }
    
        public virtual ObjectResult<Sp_Get_PlotsShortSummary_Result> Sp_Get_PlotsShortSummary()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PlotsShortSummary_Result>("Sp_Get_PlotsShortSummary");
        }
    
        public virtual ObjectResult<Sp_Get_PlotsTransferList_Result> Sp_Get_PlotsTransferList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PlotsTransferList_Result>("Sp_Get_PlotsTransferList");
        }
    
        public virtual ObjectResult<SP_Get_PlotsVerifier_Result> SP_Get_PlotsVerifier(Nullable<long> plotId)
        {
            var plotIdParameter = plotId.HasValue ?
                new ObjectParameter("plotId", plotId) :
                new ObjectParameter("plotId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Get_PlotsVerifier_Result>("SP_Get_PlotsVerifier", plotIdParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PlotTotalAmt_Result> Sp_Get_PlotTotalAmt(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PlotTotalAmt_Result>("Sp_Get_PlotTotalAmt", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PlotTransferLetter_Id_Result> Sp_Get_PlotTransferLetter_Id(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PlotTransferLetter_Id_Result>("Sp_Get_PlotTransferLetter_Id", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PlotVerifReq_Result> Sp_Get_PlotVerifReq()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PlotVerifReq_Result>("Sp_Get_PlotVerifReq");
        }
    
        public virtual ObjectResult<Sp_Get_PO_Completed_Result> Sp_Get_PO_Completed(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string grp, Nullable<bool> flag)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var grpParameter = grp != null ?
                new ObjectParameter("grp", grp) :
                new ObjectParameter("grp", typeof(string));
    
            var flagParameter = flag.HasValue ?
                new ObjectParameter("flag", flag) :
                new ObjectParameter("flag", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PO_Completed_Result>("Sp_Get_PO_Completed", fromParameter, toParameter, grpParameter, flagParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PO_Completed_GRN_Result> Sp_Get_PO_Completed_GRN(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string grp)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var grpParameter = grp != null ?
                new ObjectParameter("grp", grp) :
                new ObjectParameter("grp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PO_Completed_GRN_Result>("Sp_Get_PO_Completed_GRN", fromParameter, toParameter, grpParameter);
        }
    
        public virtual ObjectResult<SP_Get_PO_Full_Detail_Result> SP_Get_PO_Full_Detail(string poNum)
        {
            var poNumParameter = poNum != null ?
                new ObjectParameter("poNum", poNum) :
                new ObjectParameter("poNum", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Get_PO_Full_Detail_Result>("SP_Get_PO_Full_Detail", poNumParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PossessionLetterRequests_Result> Sp_Get_PossessionLetterRequests(Nullable<int> tp)
        {
            var tpParameter = tp.HasValue ?
                new ObjectParameter("tp", tp) :
                new ObjectParameter("tp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PossessionLetterRequests_Result>("Sp_Get_PossessionLetterRequests", tpParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PR_report_Result> Sp_Get_PR_report()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PR_report_Result>("Sp_Get_PR_report");
        }
    
        public virtual ObjectResult<Sp_Get_Previous_Month_Salary_Report_Result> Sp_Get_Previous_Month_Salary_Report()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Previous_Month_Salary_Report_Result>("Sp_Get_Previous_Month_Salary_Report");
        }
    
        public virtual ObjectResult<Sp_Get_Printed_FilesFormsNumber_Result> Sp_Get_Printed_FilesFormsNumber(Nullable<long> grpid)
        {
            var grpidParameter = grpid.HasValue ?
                new ObjectParameter("grpid", grpid) :
                new ObjectParameter("grpid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Printed_FilesFormsNumber_Result>("Sp_Get_Printed_FilesFormsNumber", grpidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Prj_Costing_Result> Sp_Get_Prj_Costing(Nullable<long> prj_Id)
        {
            var prj_IdParameter = prj_Id.HasValue ?
                new ObjectParameter("Prj_Id", prj_Id) :
                new ObjectParameter("Prj_Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Prj_Costing_Result>("Sp_Get_Prj_Costing", prj_IdParameter);
        }
    
        public virtual ObjectResult<SP_Get_Prj_Milestone_Tasks_Subtasks_IDName_Modulewise_Result> SP_Get_Prj_Milestone_Tasks_Subtasks_IDName_Modulewise(string moduleName, Nullable<long> projID)
        {
            var moduleNameParameter = moduleName != null ?
                new ObjectParameter("moduleName", moduleName) :
                new ObjectParameter("moduleName", typeof(string));
    
            var projIDParameter = projID.HasValue ?
                new ObjectParameter("projID", projID) :
                new ObjectParameter("projID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Get_Prj_Milestone_Tasks_Subtasks_IDName_Modulewise_Result>("SP_Get_Prj_Milestone_Tasks_Subtasks_IDName_Modulewise", moduleNameParameter, projIDParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Prj_VouchersList_Result> Sp_Get_Prj_VouchersList(string stat, Nullable<long> prjid)
        {
            var statParameter = stat != null ?
                new ObjectParameter("stat", stat) :
                new ObjectParameter("stat", typeof(string));
    
            var prjidParameter = prjid.HasValue ?
                new ObjectParameter("prjid", prjid) :
                new ObjectParameter("prjid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Prj_VouchersList_Result>("Sp_Get_Prj_VouchersList", statParameter, prjidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Project_CommercialFloor_Parameter_Result> Sp_Get_Project_CommercialFloor_Parameter(Nullable<long> proj_id)
        {
            var proj_idParameter = proj_id.HasValue ?
                new ObjectParameter("proj_id", proj_id) :
                new ObjectParameter("proj_id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Project_CommercialFloor_Parameter_Result>("Sp_Get_Project_CommercialFloor_Parameter", proj_idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Project_Phase_Block_Parameter_Result> Sp_Get_Project_Phase_Block_Parameter(Nullable<long> project)
        {
            var projectParameter = project.HasValue ?
                new ObjectParameter("project", project) :
                new ObjectParameter("project", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Project_Phase_Block_Parameter_Result>("Sp_Get_Project_Phase_Block_Parameter", projectParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Project_Phase_Parameters_Result> Sp_Get_Project_Phase_Parameters(Nullable<long> proj_id)
        {
            var proj_idParameter = proj_id.HasValue ?
                new ObjectParameter("proj_id", proj_id) :
                new ObjectParameter("proj_id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Project_Phase_Parameters_Result>("Sp_Get_Project_Phase_Parameters", proj_idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Project_Unassigned_Leads_Result> Sp_Get_Project_Unassigned_Leads(string project, Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var projectParameter = project != null ?
                new ObjectParameter("project", project) :
                new ObjectParameter("project", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Project_Unassigned_Leads_Result>("Sp_Get_Project_Unassigned_Leads", projectParameter, fromParameter, toParameter);
        }
    
        public virtual ObjectResult<SP_Get_ProjectDemandsByItem_Result> SP_Get_ProjectDemandsByItem(Nullable<long> item, Nullable<long> prj)
        {
            var itemParameter = item.HasValue ?
                new ObjectParameter("item", item) :
                new ObjectParameter("item", typeof(long));
    
            var prjParameter = prj.HasValue ?
                new ObjectParameter("prj", prj) :
                new ObjectParameter("prj", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Get_ProjectDemandsByItem_Result>("SP_Get_ProjectDemandsByItem", itemParameter, prjParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Projects_Result> Sp_Get_Projects()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Projects_Result>("Sp_Get_Projects");
        }
    
        public virtual ObjectResult<Sp_Get_Projects_Parameter_Result> Sp_Get_Projects_Parameter(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Projects_Parameter_Result>("Sp_Get_Projects_Parameter", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Projects_with_Types_Result> Sp_Get_Projects_with_Types()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Projects_with_Types_Result>("Sp_Get_Projects_with_Types");
        }
    
        public virtual ObjectResult<Sp_Get_PropertyDeal_CommissionReq_Result> Sp_Get_PropertyDeal_CommissionReq()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PropertyDeal_CommissionReq_Result>("Sp_Get_PropertyDeal_CommissionReq");
        }
    
        public virtual ObjectResult<Sp_Get_PropertyDeal_Request_Result> Sp_Get_PropertyDeal_Request(string stat)
        {
            var statParameter = stat != null ?
                new ObjectParameter("stat", stat) :
                new ObjectParameter("stat", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PropertyDeal_Request_Result>("Sp_Get_PropertyDeal_Request", statParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PropertyDeal_Request_Deal_Result> Sp_Get_PropertyDeal_Request_Deal(Nullable<long> deal)
        {
            var dealParameter = deal.HasValue ?
                new ObjectParameter("deal", deal) :
                new ObjectParameter("deal", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PropertyDeal_Request_Deal_Result>("Sp_Get_PropertyDeal_Request_Deal", dealParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PropertyDeal_Request_Id_Result> Sp_Get_PropertyDeal_Request_Id(Nullable<long> req)
        {
            var reqParameter = req.HasValue ?
                new ObjectParameter("req", req) :
                new ObjectParameter("req", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PropertyDeal_Request_Id_Result>("Sp_Get_PropertyDeal_Request_Id", reqParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PropertyDeal_Voucher_Result> Sp_Get_PropertyDeal_Voucher(Nullable<long> id, Nullable<long> token)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var tokenParameter = token.HasValue ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PropertyDeal_Voucher_Result>("Sp_Get_PropertyDeal_Voucher", idParameter, tokenParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PropertyDealFollowups_Result> Sp_Get_PropertyDealFollowups(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PropertyDealFollowups_Result>("Sp_Get_PropertyDealFollowups", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PropertyDeals_Result> Sp_Get_PropertyDeals()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PropertyDeals_Result>("Sp_Get_PropertyDeals");
        }
    
        public virtual ObjectResult<Sp_Get_PropertyDeals_Param_Result> Sp_Get_PropertyDeals_Param(string roomno)
        {
            var roomnoParameter = roomno != null ?
                new ObjectParameter("roomno", roomno) :
                new ObjectParameter("roomno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PropertyDeals_Param_Result>("Sp_Get_PropertyDeals_Param", roomnoParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PropertyDeals_Parties_Result> Sp_Get_PropertyDeals_Parties(Nullable<long> dealid)
        {
            var dealidParameter = dealid.HasValue ?
                new ObjectParameter("dealid", dealid) :
                new ObjectParameter("dealid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PropertyDeals_Parties_Result>("Sp_Get_PropertyDeals_Parties", dealidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Purchase_Order_List_Result> Sp_Get_Purchase_Order_List(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string dep)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var depParameter = dep != null ?
                new ObjectParameter("dep", dep) :
                new ObjectParameter("dep", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Purchase_Order_List_Result>("Sp_Get_Purchase_Order_List", fromParameter, toParameter, depParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Purchase_Req_For_Quotation_Result> Sp_Get_Purchase_Req_For_Quotation(Nullable<long> grpid)
        {
            var grpidParameter = grpid.HasValue ?
                new ObjectParameter("grpid", grpid) :
                new ObjectParameter("grpid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Purchase_Req_For_Quotation_Result>("Sp_Get_Purchase_Req_For_Quotation", grpidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Purchase_Req_List_Result> Sp_Get_Purchase_Req_List(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string dep)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var depParameter = dep != null ?
                new ObjectParameter("dep", dep) :
                new ObjectParameter("dep", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Purchase_Req_List_Result>("Sp_Get_Purchase_Req_List", fromParameter, toParameter, depParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PurchaseOrder_Date_Result> Sp_Get_PurchaseOrder_Date(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PurchaseOrder_Date_Result>("Sp_Get_PurchaseOrder_Date", dateParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PurchaseOrder_Report_Result> Sp_Get_PurchaseOrder_Report(string po, Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var poParameter = po != null ?
                new ObjectParameter("po", po) :
                new ObjectParameter("po", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PurchaseOrder_Report_Result>("Sp_Get_PurchaseOrder_Report", poParameter, fromParameter, toParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PurchaseOrder_Ser_Date_Result> Sp_Get_PurchaseOrder_Ser_Date(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PurchaseOrder_Ser_Date_Result>("Sp_Get_PurchaseOrder_Ser_Date", dateParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PurchaseReq_Pndg_Report_Result> Sp_Get_PurchaseReq_Pndg_Report(string requisition_No)
        {
            var requisition_NoParameter = requisition_No != null ?
                new ObjectParameter("Requisition_No", requisition_No) :
                new ObjectParameter("Requisition_No", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PurchaseReq_Pndg_Report_Result>("Sp_Get_PurchaseReq_Pndg_Report", requisition_NoParameter);
        }
    
        public virtual ObjectResult<Sp_Get_PurchaseReq_Report_Result> Sp_Get_PurchaseReq_Report(string requisition_No, Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var requisition_NoParameter = requisition_No != null ?
                new ObjectParameter("Requisition_No", requisition_No) :
                new ObjectParameter("Requisition_No", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_PurchaseReq_Report_Result>("Sp_Get_PurchaseReq_Report", requisition_NoParameter, fromParameter, toParameter);
        }
    
        public virtual ObjectResult<Sp_Get_QrCodeInformation_Result> Sp_Get_QrCodeInformation(Nullable<long> fileformnumber)
        {
            var fileformnumberParameter = fileformnumber.HasValue ?
                new ObjectParameter("fileformnumber", fileformnumber) :
                new ObjectParameter("fileformnumber", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_QrCodeInformation_Result>("Sp_Get_QrCodeInformation", fileformnumberParameter);
        }
    
        public virtual ObjectResult<Sp_Get_QrCodeValue_Result> Sp_Get_QrCodeValue(Nullable<long> uniquecode)
        {
            var uniquecodeParameter = uniquecode.HasValue ?
                new ObjectParameter("uniquecode", uniquecode) :
                new ObjectParameter("uniquecode", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_QrCodeValue_Result>("Sp_Get_QrCodeValue", uniquecodeParameter);
        }
    
        public virtual ObjectResult<Sp_Get_RealEstateProjects_Result> Sp_Get_RealEstateProjects()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_RealEstateProjects_Result>("Sp_Get_RealEstateProjects");
        }
    
        public virtual ObjectResult<Sp_Get_Receipt_Result> Sp_Get_Receipt()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Receipt_Result>("Sp_Get_Receipt");
        }
    
        public virtual ObjectResult<Sp_Get_Receipt_Parameter_Result> Sp_Get_Receipt_Parameter(string id, Nullable<long> token)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var tokenParameter = token.HasValue ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Receipt_Parameter_Result>("Sp_Get_Receipt_Parameter", idParameter, tokenParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Receipt_Parameter_ById_Result> Sp_Get_Receipt_Parameter_ById(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Receipt_Parameter_ById_Result>("Sp_Get_Receipt_Parameter_ById", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Receipt_Pending_Result> Sp_Get_Receipt_Pending(Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Receipt_Pending_Result>("Sp_Get_Receipt_Pending", fromParameter, toParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Receipt_Result_Result> Sp_Get_Receipt_Result(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Receipt_Result_Result>("Sp_Get_Receipt_Result", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_ReceiptAdjustReqs_Details_Result> Sp_Get_ReceiptAdjustReqs_Details(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_ReceiptAdjustReqs_Details_Result>("Sp_Get_ReceiptAdjustReqs_Details", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_ReceiptAdjustReqs_Finance_Result> Sp_Get_ReceiptAdjustReqs_Finance()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_ReceiptAdjustReqs_Finance_Result>("Sp_Get_ReceiptAdjustReqs_Finance");
        }
    
        public virtual ObjectResult<Sp_Get_ReceiptAdjustReqs_Records_Result> Sp_Get_ReceiptAdjustReqs_Records()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_ReceiptAdjustReqs_Records_Result>("Sp_Get_ReceiptAdjustReqs_Records");
        }
    
        public virtual ObjectResult<string> Sp_Get_ReceiptNo(string type)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Sp_Get_ReceiptNo", typeParameter);
        }
    
        public virtual ObjectResult<Sp_Get_ReceiptRequests_Update_Result> Sp_Get_ReceiptRequests_Update()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_ReceiptRequests_Update_Result>("Sp_Get_ReceiptRequests_Update");
        }
    
        public virtual ObjectResult<Sp_Get_ReceiptRequests_Update_Details_Result> Sp_Get_ReceiptRequests_Update_Details(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_ReceiptRequests_Update_Details_Result>("Sp_Get_ReceiptRequests_Update_Details", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Receipts_Result> Sp_Get_Receipts(string fileId, string cnic)
        {
            var fileIdParameter = fileId != null ?
                new ObjectParameter("FileId", fileId) :
                new ObjectParameter("FileId", typeof(string));
    
            var cnicParameter = cnic != null ?
                new ObjectParameter("cnic", cnic) :
                new ObjectParameter("cnic", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Receipts_Result>("Sp_Get_Receipts", fileIdParameter, cnicParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Receipts_Param_Result> Sp_Get_Receipts_Param(string project, string type, string unitNo)
        {
            var projectParameter = project != null ?
                new ObjectParameter("project", project) :
                new ObjectParameter("project", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var unitNoParameter = unitNo != null ?
                new ObjectParameter("unitNo", unitNo) :
                new ObjectParameter("unitNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Receipts_Param_Result>("Sp_Get_Receipts_Param", projectParameter, typeParameter, unitNoParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Receipts_Pending_Result> Sp_Get_Receipts_Pending()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Receipts_Pending_Result>("Sp_Get_Receipts_Pending");
        }
    
        public virtual ObjectResult<Sp_Get_Receivables_Accounts_Result> Sp_Get_Receivables_Accounts(string code)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Receivables_Accounts_Result>("Sp_Get_Receivables_Accounts", codeParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Receivables_Head_Result> Sp_Get_Receivables_Head(Nullable<long> groupid, Nullable<long> head)
        {
            var groupidParameter = groupid.HasValue ?
                new ObjectParameter("groupid", groupid) :
                new ObjectParameter("groupid", typeof(long));
    
            var headParameter = head.HasValue ?
                new ObjectParameter("head", head) :
                new ObjectParameter("head", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Receivables_Head_Result>("Sp_Get_Receivables_Head", groupidParameter, headParameter);
        }
    
        public virtual ObjectResult<Sp_Get_ReceivedAmounts_Result> Sp_Get_ReceivedAmounts(Nullable<long> fileid, string mod)
        {
            var fileidParameter = fileid.HasValue ?
                new ObjectParameter("fileid", fileid) :
                new ObjectParameter("fileid", typeof(long));
    
            var modParameter = mod != null ?
                new ObjectParameter("mod", mod) :
                new ObjectParameter("mod", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_ReceivedAmounts_Result>("Sp_Get_ReceivedAmounts", fileidParameter, modParameter);
        }
    
        public virtual ObjectResult<Sp_Get_ReceivedAmountsCancelOwner_Result> Sp_Get_ReceivedAmountsCancelOwner(Nullable<long> fileid, string mod, Nullable<long> ownerid)
        {
            var fileidParameter = fileid.HasValue ?
                new ObjectParameter("fileid", fileid) :
                new ObjectParameter("fileid", typeof(long));
    
            var modParameter = mod != null ?
                new ObjectParameter("mod", mod) :
                new ObjectParameter("mod", typeof(string));
    
            var owneridParameter = ownerid.HasValue ?
                new ObjectParameter("ownerid", ownerid) :
                new ObjectParameter("ownerid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_ReceivedAmountsCancelOwner_Result>("Sp_Get_ReceivedAmountsCancelOwner", fileidParameter, modParameter, owneridParameter);
        }
    
        public virtual ObjectResult<Sp_Get_ReceivedAmtCancelledOwner_Result> Sp_Get_ReceivedAmtCancelledOwner(Nullable<long> fileid, string mod, Nullable<long> ownerid)
        {
            var fileidParameter = fileid.HasValue ?
                new ObjectParameter("fileid", fileid) :
                new ObjectParameter("fileid", typeof(long));
    
            var modParameter = mod != null ?
                new ObjectParameter("mod", mod) :
                new ObjectParameter("mod", typeof(string));
    
            var owneridParameter = ownerid.HasValue ?
                new ObjectParameter("ownerid", ownerid) :
                new ObjectParameter("ownerid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_ReceivedAmtCancelledOwner_Result>("Sp_Get_ReceivedAmtCancelledOwner", fileidParameter, modParameter, owneridParameter);
        }
    
        public virtual ObjectResult<Sp_Get_ReceivedCommercialAmount_Result> Sp_Get_ReceivedCommercialAmount(Nullable<long> fileid, string module)
        {
            var fileidParameter = fileid.HasValue ?
                new ObjectParameter("fileid", fileid) :
                new ObjectParameter("fileid", typeof(long));
    
            var moduleParameter = module != null ?
                new ObjectParameter("module", module) :
                new ObjectParameter("module", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_ReceivedCommercialAmount_Result>("Sp_Get_ReceivedCommercialAmount", fileidParameter, moduleParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SP_Get_ReceivedQuantity_AgainstPO(Nullable<long> poid)
        {
            var poidParameter = poid.HasValue ?
                new ObjectParameter("poid", poid) :
                new ObjectParameter("poid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SP_Get_ReceivedQuantity_AgainstPO", poidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_RegisterCustomerInformation_Result> Sp_Get_RegisterCustomerInformation(string phoneNumber, string cNIC)
        {
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var cNICParameter = cNIC != null ?
                new ObjectParameter("CNIC", cNIC) :
                new ObjectParameter("CNIC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_RegisterCustomerInformation_Result>("Sp_Get_RegisterCustomerInformation", phoneNumberParameter, cNICParameter);
        }
    
        public virtual ObjectResult<Sp_Get_RegisterdMembers_Result> Sp_Get_RegisterdMembers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_RegisterdMembers_Result>("Sp_Get_RegisterdMembers");
        }
    
        public virtual ObjectResult<Sp_Get_RegisterdMembers_Segregated_Result> Sp_Get_RegisterdMembers_Segregated(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_RegisterdMembers_Segregated_Result>("Sp_Get_RegisterdMembers_Segregated", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_RegisterFileDueAmount_Result> Sp_Get_RegisterFileDueAmount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_RegisterFileDueAmount_Result>("Sp_Get_RegisterFileDueAmount");
        }
    
        public virtual ObjectResult<SP_Get_RegisterMembers_Gym_Result> SP_Get_RegisterMembers_Gym(Nullable<long> memberID)
        {
            var memberIDParameter = memberID.HasValue ?
                new ObjectParameter("MemberID", memberID) :
                new ObjectParameter("MemberID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Get_RegisterMembers_Gym_Result>("SP_Get_RegisterMembers_Gym", memberIDParameter);
        }
    
        public virtual ObjectResult<string> Sp_Get_ReleaseInformation(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Sp_Get_ReleaseInformation", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Remaning_Assets_List_Result> Sp_Get_Remaning_Assets_List(string asetName)
        {
            var asetNameParameter = asetName != null ?
                new ObjectParameter("AsetName", asetName) :
                new ObjectParameter("AsetName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Remaning_Assets_List_Result>("Sp_Get_Remaning_Assets_List", asetNameParameter);
        }
    
        public virtual ObjectResult<Sp_Get_ReminderComments_Result> Sp_Get_ReminderComments(Nullable<long> remId)
        {
            var remIdParameter = remId.HasValue ?
                new ObjectParameter("remId", remId) :
                new ObjectParameter("remId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_ReminderComments_Result>("Sp_Get_ReminderComments", remIdParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Rental_Result> Sp_Get_Rental(Nullable<long> pltid)
        {
            var pltidParameter = pltid.HasValue ?
                new ObjectParameter("pltid", pltid) :
                new ObjectParameter("pltid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Rental_Result>("Sp_Get_Rental", pltidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Report_Balloting_Est_Result> Sp_Get_Report_Balloting_Est()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Report_Balloting_Est_Result>("Sp_Get_Report_Balloting_Est");
        }
    
        public virtual ObjectResult<Sp_Get_Report_ElectricityCharges_Result> Sp_Get_Report_ElectricityCharges(Nullable<System.DateTime> month, Nullable<System.DateTime> year, Nullable<long> block)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(System.DateTime));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(System.DateTime));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("block", block) :
                new ObjectParameter("block", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Report_ElectricityCharges_Result>("Sp_Get_Report_ElectricityCharges", monthParameter, yearParameter, blockParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Report_MonthRecoveryReport_Result> Sp_Get_Report_MonthRecoveryReport(Nullable<System.DateTime> month)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Report_MonthRecoveryReport_Result>("Sp_Get_Report_MonthRecoveryReport", monthParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Report_OverDue_Result> Sp_Get_Report_OverDue()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Report_OverDue_Result>("Sp_Get_Report_OverDue");
        }
    
        public virtual ObjectResult<Sp_Get_Report_OverDue_Plots_Result> Sp_Get_Report_OverDue_Plots()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Report_OverDue_Plots_Result>("Sp_Get_Report_OverDue_Plots");
        }
    
        public virtual ObjectResult<Sp_Get_Report_ServiceCharges_Result> Sp_Get_Report_ServiceCharges(Nullable<System.DateTime> month, Nullable<System.DateTime> year, Nullable<long> block)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(System.DateTime));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(System.DateTime));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("block", block) :
                new ObjectParameter("block", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Report_ServiceCharges_Result>("Sp_Get_Report_ServiceCharges", monthParameter, yearParameter, blockParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Reporting_Employees_Result> Sp_Get_Reporting_Employees(Nullable<long> emp)
        {
            var empParameter = emp.HasValue ?
                new ObjectParameter("emp", emp) :
                new ObjectParameter("emp", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Reporting_Employees_Result>("Sp_Get_Reporting_Employees", empParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Reporting_HeadOfDepartment_Result> Sp_Get_Reporting_HeadOfDepartment(Nullable<long> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Reporting_HeadOfDepartment_Result>("Sp_Get_Reporting_HeadOfDepartment", useridParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Reports_BlockOutstanding_Result> Sp_Get_Reports_BlockOutstanding(Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Reports_BlockOutstanding_Result>("Sp_Get_Reports_BlockOutstanding", fromParameter, toParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Reports_FilesInstallment_Year_Result> Sp_Get_Reports_FilesInstallment_Year(Nullable<long> block, string type)
        {
            var blockParameter = block.HasValue ?
                new ObjectParameter("block", block) :
                new ObjectParameter("block", typeof(long));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Reports_FilesInstallment_Year_Result>("Sp_Get_Reports_FilesInstallment_Year", blockParameter, typeParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Reports_Of_All_Salary_Parameter_Result> Sp_Get_Reports_Of_All_Salary_Parameter(Nullable<int> mon, Nullable<int> yr)
        {
            var monParameter = mon.HasValue ?
                new ObjectParameter("mon", mon) :
                new ObjectParameter("mon", typeof(int));
    
            var yrParameter = yr.HasValue ?
                new ObjectParameter("yr", yr) :
                new ObjectParameter("yr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Reports_Of_All_Salary_Parameter_Result>("Sp_Get_Reports_Of_All_Salary_Parameter", monParameter, yrParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Reports_PlotOutstandingBy_Plot_Result> Sp_Get_Reports_PlotOutstandingBy_Plot(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Reports_PlotOutstandingBy_Plot_Result>("Sp_Get_Reports_PlotOutstandingBy_Plot", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Reports_PlotOutstandingByBlock_Result> Sp_Get_Reports_PlotOutstandingByBlock(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Reports_PlotOutstandingByBlock_Result>("Sp_Get_Reports_PlotOutstandingByBlock", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Requested_Verification_Building_Result> Sp_Get_Requested_Verification_Building(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Requested_Verification_Building_Result>("Sp_Get_Requested_Verification_Building", idParameter);
        }
    
        public virtual int Sp_Get_Responsibilities()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Get_Responsibilities");
        }
    
        public virtual int Sp_Get_Responsibilities_Parameters(Nullable<long> roleid)
        {
            var roleidParameter = roleid.HasValue ?
                new ObjectParameter("roleid", roleid) :
                new ObjectParameter("roleid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Get_Responsibilities_Parameters", roleidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Roles_Result> Sp_Get_Roles()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Roles_Result>("Sp_Get_Roles");
        }
    
        public virtual ObjectResult<Sp_Get_Salaries_By_Id_Result> Sp_Get_Salaries_By_Id(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Salaries_By_Id_Result>("Sp_Get_Salaries_By_Id", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Salaries_Delivery_Result> Sp_Get_Salaries_Delivery(Nullable<int> mon, Nullable<int> yr)
        {
            var monParameter = mon.HasValue ?
                new ObjectParameter("mon", mon) :
                new ObjectParameter("mon", typeof(int));
    
            var yrParameter = yr.HasValue ?
                new ObjectParameter("yr", yr) :
                new ObjectParameter("yr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Salaries_Delivery_Result>("Sp_Get_Salaries_Delivery", monParameter, yrParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Salaries_Gazetted_Result> Sp_Get_Salaries_Gazetted(string status)
        {
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Salaries_Gazetted_Result>("Sp_Get_Salaries_Gazetted", statusParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Salaries_Non_Gazetted_Result> Sp_Get_Salaries_Non_Gazetted(string status)
        {
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Salaries_Non_Gazetted_Result>("Sp_Get_Salaries_Non_Gazetted", statusParameter);
        }
    
        public virtual ObjectResult<Sp_Get_SalariesList_Result> Sp_Get_SalariesList(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string status, Nullable<int> depid)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var depidParameter = depid.HasValue ?
                new ObjectParameter("depid", depid) :
                new ObjectParameter("depid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_SalariesList_Result>("Sp_Get_SalariesList", fromParameter, toParameter, statusParameter, depidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Salary_Result> Sp_Get_Salary(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Salary_Result>("Sp_Get_Salary", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Salary_Details_Result> Sp_Get_Salary_Details(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Salary_Details_Result>("Sp_Get_Salary_Details", idParameter);
        }
    
        public virtual int Sp_Get_SalaryAllownces(Nullable<long> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Get_SalaryAllownces", useridParameter);
        }
    
        public virtual ObjectResult<Sp_Get_SalaryComparativeReport_Result> Sp_Get_SalaryComparativeReport(Nullable<System.DateTime> start, Nullable<System.DateTime> end, string tp, string ids)
        {
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("end", end) :
                new ObjectParameter("end", typeof(System.DateTime));
    
            var tpParameter = tp != null ?
                new ObjectParameter("tp", tp) :
                new ObjectParameter("tp", typeof(string));
    
            var idsParameter = ids != null ?
                new ObjectParameter("ids", ids) :
                new ObjectParameter("ids", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_SalaryComparativeReport_Result>("Sp_Get_SalaryComparativeReport", startParameter, endParameter, tpParameter, idsParameter);
        }
    
        public virtual ObjectResult<Sp_Get_SalaryReport_Result> Sp_Get_SalaryReport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_SalaryReport_Result>("Sp_Get_SalaryReport");
        }
    
        public virtual ObjectResult<Sp_Get_SalesReport_Result> Sp_Get_SalesReport(string block, string type, Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var blockParameter = block != null ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_SalesReport_Result>("Sp_Get_SalesReport", blockParameter, typeParameter, fromParameter, toParameter);
        }
    
        public virtual ObjectResult<Sp_Get_SAM_Invenetory_Result> Sp_Get_SAM_Invenetory(string type)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_SAM_Invenetory_Result>("Sp_Get_SAM_Invenetory", typeParameter);
        }
    
        public virtual ObjectResult<Sp_Get_SAM_Voucher_Req_Result> Sp_Get_SAM_Voucher_Req()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_SAM_Voucher_Req_Result>("Sp_Get_SAM_Voucher_Req");
        }
    
        public virtual ObjectResult<Sp_Get_SAM_Voucher_Req_Id_Result> Sp_Get_SAM_Voucher_Req_Id(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_SAM_Voucher_Req_Id_Result>("Sp_Get_SAM_Voucher_Req_Id", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Search_CNIC_Result> Sp_Get_Search_CNIC(string cNIC)
        {
            var cNICParameter = cNIC != null ?
                new ObjectParameter("CNIC", cNIC) :
                new ObjectParameter("CNIC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Search_CNIC_Result>("Sp_Get_Search_CNIC", cNICParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Search_FileNumber_Result> Sp_Get_Search_FileNumber(Nullable<long> fileformid)
        {
            var fileformidParameter = fileformid.HasValue ?
                new ObjectParameter("fileformid", fileformid) :
                new ObjectParameter("fileformid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Search_FileNumber_Result>("Sp_Get_Search_FileNumber", fileformidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Search_Name_Result> Sp_Get_Search_Name(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Search_Name_Result>("Sp_Get_Search_Name", nameParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Search_NomineeCNIC_Result> Sp_Get_Search_NomineeCNIC(string cNIC)
        {
            var cNICParameter = cNIC != null ?
                new ObjectParameter("CNIC", cNIC) :
                new ObjectParameter("CNIC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Search_NomineeCNIC_Result>("Sp_Get_Search_NomineeCNIC", cNICParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Search_Receipt_Result> Sp_Get_Search_Receipt(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Search_Receipt_Result>("Sp_Get_Search_Receipt", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_SearchRecovery_Report_Result> Sp_Get_SearchRecovery_Report(Nullable<System.DateTime> from, Nullable<System.DateTime> to, Nullable<System.DateTime> date, string status, string recoveryType, string users)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var recoveryTypeParameter = recoveryType != null ?
                new ObjectParameter("recoveryType", recoveryType) :
                new ObjectParameter("recoveryType", typeof(string));
    
            var usersParameter = users != null ?
                new ObjectParameter("users", users) :
                new ObjectParameter("users", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_SearchRecovery_Report_Result>("Sp_Get_SearchRecovery_Report", fromParameter, toParameter, dateParameter, statusParameter, recoveryTypeParameter, usersParameter);
        }
    
        public virtual ObjectResult<Sp_Get_SecWarning_File_Result> Sp_Get_SecWarning_File(Nullable<int> installments, Nullable<int> s_Inst_Range, Nullable<int> e_Inst_Range, string plot_Size, Nullable<long> dealer_Id, Nullable<decimal> s_Range, Nullable<decimal> e_Range, Nullable<decimal> g_Amt, Nullable<decimal> l_Amt)
        {
            var installmentsParameter = installments.HasValue ?
                new ObjectParameter("Installments", installments) :
                new ObjectParameter("Installments", typeof(int));
    
            var s_Inst_RangeParameter = s_Inst_Range.HasValue ?
                new ObjectParameter("S_Inst_Range", s_Inst_Range) :
                new ObjectParameter("S_Inst_Range", typeof(int));
    
            var e_Inst_RangeParameter = e_Inst_Range.HasValue ?
                new ObjectParameter("E_Inst_Range", e_Inst_Range) :
                new ObjectParameter("E_Inst_Range", typeof(int));
    
            var plot_SizeParameter = plot_Size != null ?
                new ObjectParameter("Plot_Size", plot_Size) :
                new ObjectParameter("Plot_Size", typeof(string));
    
            var dealer_IdParameter = dealer_Id.HasValue ?
                new ObjectParameter("Dealer_Id", dealer_Id) :
                new ObjectParameter("Dealer_Id", typeof(long));
    
            var s_RangeParameter = s_Range.HasValue ?
                new ObjectParameter("S_Range", s_Range) :
                new ObjectParameter("S_Range", typeof(decimal));
    
            var e_RangeParameter = e_Range.HasValue ?
                new ObjectParameter("E_Range", e_Range) :
                new ObjectParameter("E_Range", typeof(decimal));
    
            var g_AmtParameter = g_Amt.HasValue ?
                new ObjectParameter("G_Amt", g_Amt) :
                new ObjectParameter("G_Amt", typeof(decimal));
    
            var l_AmtParameter = l_Amt.HasValue ?
                new ObjectParameter("L_Amt", l_Amt) :
                new ObjectParameter("L_Amt", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_SecWarning_File_Result>("Sp_Get_SecWarning_File", installmentsParameter, s_Inst_RangeParameter, e_Inst_RangeParameter, plot_SizeParameter, dealer_IdParameter, s_RangeParameter, e_RangeParameter, g_AmtParameter, l_AmtParameter);
        }
    
        public virtual ObjectResult<Sp_Get_SecWarning_Plot_Result> Sp_Get_SecWarning_Plot()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_SecWarning_Plot_Result>("Sp_Get_SecWarning_Plot");
        }
    
        public virtual ObjectResult<Sp_Get_SecWarning_Shop_Result> Sp_Get_SecWarning_Shop()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_SecWarning_Shop_Result>("Sp_Get_SecWarning_Shop");
        }
    
        public virtual ObjectResult<Sp_Get_Service_In_Userid_Result> Sp_Get_Service_In_Userid(Nullable<long> userid, Nullable<System.DateTime> from, Nullable<System.DateTime> to, Nullable<bool> hod, string stat)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var hodParameter = hod.HasValue ?
                new ObjectParameter("Hod", hod) :
                new ObjectParameter("Hod", typeof(bool));
    
            var statParameter = stat != null ?
                new ObjectParameter("stat", stat) :
                new ObjectParameter("stat", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Service_In_Userid_Result>("Sp_Get_Service_In_Userid", useridParameter, fromParameter, toParameter, hodParameter, statParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Service_In_Userid_SC_Result> Sp_Get_Service_In_Userid_SC(Nullable<long> userid, Nullable<System.DateTime> from, Nullable<System.DateTime> to, Nullable<bool> hod, string stat)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var hodParameter = hod.HasValue ?
                new ObjectParameter("Hod", hod) :
                new ObjectParameter("Hod", typeof(bool));
    
            var statParameter = stat != null ?
                new ObjectParameter("stat", stat) :
                new ObjectParameter("stat", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Service_In_Userid_SC_Result>("Sp_Get_Service_In_Userid_SC", useridParameter, fromParameter, toParameter, hodParameter, statParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Service_Order_List_Result> Sp_Get_Service_Order_List(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string dep)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var depParameter = dep != null ?
                new ObjectParameter("dep", dep) :
                new ObjectParameter("dep", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Service_Order_List_Result>("Sp_Get_Service_Order_List", fromParameter, toParameter, depParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Service_Req_List_Result> Sp_Get_Service_Req_List(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string dep)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var depParameter = dep != null ?
                new ObjectParameter("dep", dep) :
                new ObjectParameter("dep", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Service_Req_List_Result>("Sp_Get_Service_Req_List", fromParameter, toParameter, depParameter);
        }
    
        public virtual ObjectResult<Sp_Get_ServiceCharge_Bill_ById_Result> Sp_Get_ServiceCharge_Bill_ById(string billId)
        {
            var billIdParameter = billId != null ?
                new ObjectParameter("billId", billId) :
                new ObjectParameter("billId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_ServiceCharge_Bill_ById_Result>("Sp_Get_ServiceCharge_Bill_ById", billIdParameter);
        }
    
        public virtual ObjectResult<SP_GET_ServiceCharges_SubscribedPlots_BlockWise_Result> SP_GET_ServiceCharges_SubscribedPlots_BlockWise(Nullable<long> block)
        {
            var blockParameter = block.HasValue ?
                new ObjectParameter("block", block) :
                new ObjectParameter("block", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_ServiceCharges_SubscribedPlots_BlockWise_Result>("SP_GET_ServiceCharges_SubscribedPlots_BlockWise", blockParameter);
        }
    
        public virtual ObjectResult<Sp_Get_ServiceCharges_Type_Parameter_Result> Sp_Get_ServiceCharges_Type_Parameter(string type, Nullable<long> id)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_ServiceCharges_Type_Parameter_Result>("Sp_Get_ServiceCharges_Type_Parameter", typeParameter, idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_ServiceChargesTypeList_Result> Sp_Get_ServiceChargesTypeList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_ServiceChargesTypeList_Result>("Sp_Get_ServiceChargesTypeList");
        }
    
        public virtual ObjectResult<Sp_Get_SherAfghan_Balance_Amount_Result> Sp_Get_SherAfghan_Balance_Amount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_SherAfghan_Balance_Amount_Result>("Sp_Get_SherAfghan_Balance_Amount");
        }
    
        public virtual ObjectResult<Sp_Get_SpecialPrefPlot_list_Result> Sp_Get_SpecialPrefPlot_list(Nullable<System.DateTime> due, string status)
        {
            var dueParameter = due.HasValue ?
                new ObjectParameter("due", due) :
                new ObjectParameter("due", typeof(System.DateTime));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_SpecialPrefPlot_list_Result>("Sp_Get_SpecialPrefPlot_list", dueParameter, statusParameter);
        }
    
        public virtual ObjectResult<Sp_Get_SpecialPurchaseRequestions_Result> Sp_Get_SpecialPurchaseRequestions(Nullable<long> userid, Nullable<bool> hod, string stat)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var hodParameter = hod.HasValue ?
                new ObjectParameter("Hod", hod) :
                new ObjectParameter("Hod", typeof(bool));
    
            var statParameter = stat != null ?
                new ObjectParameter("stat", stat) :
                new ObjectParameter("stat", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_SpecialPurchaseRequestions_Result>("Sp_Get_SpecialPurchaseRequestions", useridParameter, hodParameter, statParameter);
        }
    
        public virtual ObjectResult<Sp_Get_SpeedFest_Result> Sp_Get_SpeedFest()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_SpeedFest_Result>("Sp_Get_SpeedFest");
        }
    
        public virtual ObjectResult<Sp_Get_SpeedFest_User_Result> Sp_Get_SpeedFest_User(Nullable<long> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_SpeedFest_User_Result>("Sp_Get_SpeedFest_User", useridParameter);
        }
    
        public virtual ObjectResult<Sp_Get_SpeedFest_User_Short_Result> Sp_Get_SpeedFest_User_Short(Nullable<long> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_SpeedFest_User_Short_Result>("Sp_Get_SpeedFest_User_Short", useridParameter);
        }
    
        public virtual ObjectResult<Sp_Get_StipendsList_Result> Sp_Get_StipendsList(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string status, Nullable<int> depid)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var depidParameter = depid.HasValue ?
                new ObjectParameter("depid", depid) :
                new ObjectParameter("depid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_StipendsList_Result>("Sp_Get_StipendsList", fromParameter, toParameter, statusParameter, depidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Stock_In_Userid_Result> Sp_Get_Stock_In_Userid(Nullable<long> userid, Nullable<System.DateTime> from, Nullable<System.DateTime> to, Nullable<bool> hod, string stat)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var hodParameter = hod.HasValue ?
                new ObjectParameter("Hod", hod) :
                new ObjectParameter("Hod", typeof(bool));
    
            var statParameter = stat != null ?
                new ObjectParameter("stat", stat) :
                new ObjectParameter("stat", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Stock_In_Userid_Result>("Sp_Get_Stock_In_Userid", useridParameter, fromParameter, toParameter, hodParameter, statParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Stock_Out_Userid_Result> Sp_Get_Stock_Out_Userid(Nullable<long> id, Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Stock_Out_Userid_Result>("Sp_Get_Stock_Out_Userid", idParameter, fromParameter, toParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Stock_SKU_Null_Result> Sp_Get_Stock_SKU_Null()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Stock_SKU_Null_Result>("Sp_Get_Stock_SKU_Null");
        }
    
        public virtual ObjectResult<Sp_Get_Stockout_Details_Result> Sp_Get_Stockout_Details(Nullable<long> groupid)
        {
            var groupidParameter = groupid.HasValue ?
                new ObjectParameter("Groupid", groupid) :
                new ObjectParameter("Groupid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Stockout_Details_Result>("Sp_Get_Stockout_Details", groupidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Stockout_Prj_Result> Sp_Get_Stockout_Prj(Nullable<long> prj_Id)
        {
            var prj_IdParameter = prj_Id.HasValue ?
                new ObjectParameter("Prj_Id", prj_Id) :
                new ObjectParameter("Prj_Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Stockout_Prj_Result>("Sp_Get_Stockout_Prj", prj_IdParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Stockout_Req_Prj_Result> Sp_Get_Stockout_Req_Prj(Nullable<long> prjid)
        {
            var prjidParameter = prjid.HasValue ?
                new ObjectParameter("prjid", prjid) :
                new ObjectParameter("prjid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Stockout_Req_Prj_Result>("Sp_Get_Stockout_Req_Prj", prjidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_StockoutList_Result> Sp_Get_StockoutList(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string type, string userid)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_StockoutList_Result>("Sp_Get_StockoutList", fromParameter, toParameter, typeParameter, useridParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Subsidiary_Companies_Result> Sp_Get_Subsidiary_Companies()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Subsidiary_Companies_Result>("Sp_Get_Subsidiary_Companies");
        }
    
        public virtual ObjectResult<Sp_Get_TaxReceipt_Parameter_Result> Sp_Get_TaxReceipt_Parameter(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_TaxReceipt_Parameter_Result>("Sp_Get_TaxReceipt_Parameter", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_TaxReceipts_Report_Result> Sp_Get_TaxReceipts_Report(Nullable<System.DateTime> s, Nullable<System.DateTime> e)
        {
            var sParameter = s.HasValue ?
                new ObjectParameter("s", s) :
                new ObjectParameter("s", typeof(System.DateTime));
    
            var eParameter = e.HasValue ?
                new ObjectParameter("e", e) :
                new ObjectParameter("e", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_TaxReceipts_Report_Result>("Sp_Get_TaxReceipts_Report", sParameter, eParameter);
        }
    
        public virtual ObjectResult<Sp_Get_TaxReport_Result> Sp_Get_TaxReport(Nullable<System.DateTime> start, Nullable<System.DateTime> end, Nullable<long> user)
        {
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("end", end) :
                new ObjectParameter("end", typeof(System.DateTime));
    
            var userParameter = user.HasValue ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_TaxReport_Result>("Sp_Get_TaxReport", startParameter, endParameter, userParameter);
        }
    
        public virtual ObjectResult<Sp_Get_TeamAttendanceToday_Result> Sp_Get_TeamAttendanceToday(Nullable<long> empId)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("empId", empId) :
                new ObjectParameter("empId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_TeamAttendanceToday_Result>("Sp_Get_TeamAttendanceToday", empIdParameter);
        }
    
        public virtual ObjectResult<Sp_Get_TeamList_Result> Sp_Get_TeamList(Nullable<long> empId)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("empId", empId) :
                new ObjectParameter("empId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_TeamList_Result>("Sp_Get_TeamList", empIdParameter);
        }
    
        public virtual ObjectResult<Sp_Get_TempAccount_Result> Sp_Get_TempAccount(string code)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_TempAccount_Result>("Sp_Get_TempAccount", codeParameter);
        }
    
        public virtual ObjectResult<Sp_Get_TempCancel_File_Result> Sp_Get_TempCancel_File(Nullable<int> installments, Nullable<int> s_Inst_Range, Nullable<int> e_Inst_Range, string plot_Size, Nullable<long> dealer_Id, Nullable<decimal> s_Range, Nullable<decimal> e_Range, Nullable<decimal> g_Amt, Nullable<decimal> l_Amt)
        {
            var installmentsParameter = installments.HasValue ?
                new ObjectParameter("Installments", installments) :
                new ObjectParameter("Installments", typeof(int));
    
            var s_Inst_RangeParameter = s_Inst_Range.HasValue ?
                new ObjectParameter("S_Inst_Range", s_Inst_Range) :
                new ObjectParameter("S_Inst_Range", typeof(int));
    
            var e_Inst_RangeParameter = e_Inst_Range.HasValue ?
                new ObjectParameter("E_Inst_Range", e_Inst_Range) :
                new ObjectParameter("E_Inst_Range", typeof(int));
    
            var plot_SizeParameter = plot_Size != null ?
                new ObjectParameter("Plot_Size", plot_Size) :
                new ObjectParameter("Plot_Size", typeof(string));
    
            var dealer_IdParameter = dealer_Id.HasValue ?
                new ObjectParameter("Dealer_Id", dealer_Id) :
                new ObjectParameter("Dealer_Id", typeof(long));
    
            var s_RangeParameter = s_Range.HasValue ?
                new ObjectParameter("S_Range", s_Range) :
                new ObjectParameter("S_Range", typeof(decimal));
    
            var e_RangeParameter = e_Range.HasValue ?
                new ObjectParameter("E_Range", e_Range) :
                new ObjectParameter("E_Range", typeof(decimal));
    
            var g_AmtParameter = g_Amt.HasValue ?
                new ObjectParameter("G_Amt", g_Amt) :
                new ObjectParameter("G_Amt", typeof(decimal));
    
            var l_AmtParameter = l_Amt.HasValue ?
                new ObjectParameter("L_Amt", l_Amt) :
                new ObjectParameter("L_Amt", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_TempCancel_File_Result>("Sp_Get_TempCancel_File", installmentsParameter, s_Inst_RangeParameter, e_Inst_RangeParameter, plot_SizeParameter, dealer_IdParameter, s_RangeParameter, e_RangeParameter, g_AmtParameter, l_AmtParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Ticket_Comments_Result> Sp_Get_Ticket_Comments(Nullable<long> ticket_Id)
        {
            var ticket_IdParameter = ticket_Id.HasValue ?
                new ObjectParameter("ticket_Id", ticket_Id) :
                new ObjectParameter("ticket_Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Ticket_Comments_Result>("Sp_Get_Ticket_Comments", ticket_IdParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Ticket_Parameter_Result> Sp_Get_Ticket_Parameter(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Ticket_Parameter_Result>("Sp_Get_Ticket_Parameter", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Ticket_Type_Result> Sp_Get_Ticket_Type()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Ticket_Type_Result>("Sp_Get_Ticket_Type");
        }
    
        public virtual ObjectResult<Sp_Get_TicketAttendee_Result> Sp_Get_TicketAttendee(Nullable<long> ticketid)
        {
            var ticketidParameter = ticketid.HasValue ?
                new ObjectParameter("ticketid", ticketid) :
                new ObjectParameter("ticketid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_TicketAttendee_Result>("Sp_Get_TicketAttendee", ticketidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Tickets_Result> Sp_Get_Tickets(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, string userid)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Tickets_Result>("Sp_Get_Tickets", fromdateParameter, todateParameter, useridParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Tickets_Assigned_Result> Sp_Get_Tickets_Assigned(Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, Nullable<long> userid)
        {
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Tickets_Assigned_Result>("Sp_Get_Tickets_Assigned", startdateParameter, enddateParameter, useridParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Tickets_CreatedMe_Result> Sp_Get_Tickets_CreatedMe(Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, Nullable<long> userid)
        {
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Tickets_CreatedMe_Result>("Sp_Get_Tickets_CreatedMe", startdateParameter, enddateParameter, useridParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Tickets_Customer_Result> Sp_Get_Tickets_Customer(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, string stat)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var statParameter = stat != null ?
                new ObjectParameter("stat", stat) :
                new ObjectParameter("stat", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Tickets_Customer_Result>("Sp_Get_Tickets_Customer", fromdateParameter, todateParameter, statParameter);
        }
    
        public virtual ObjectResult<Sp_Get_TicketType_Dep_Result> Sp_Get_TicketType_Dep(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_TicketType_Dep_Result>("Sp_Get_TicketType_Dep", idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Sp_Get_TimeAdjust_Manager(Nullable<long> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Sp_Get_TimeAdjust_Manager", useridParameter);
        }
    
        public virtual ObjectResult<Sp_Get_TranferRequests_Result> Sp_Get_TranferRequests(Nullable<long> comId)
        {
            var comIdParameter = comId.HasValue ?
                new ObjectParameter("ComId", comId) :
                new ObjectParameter("ComId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_TranferRequests_Result>("Sp_Get_TranferRequests", comIdParameter);
        }
    
        public virtual ObjectResult<Sp_Get_TransferList_Plot_Result> Sp_Get_TransferList_Plot()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_TransferList_Plot_Result>("Sp_Get_TransferList_Plot");
        }
    
        public virtual ObjectResult<Sp_Get_TransferRequestDetails_Result> Sp_Get_TransferRequestDetails(Nullable<long> fileformid)
        {
            var fileformidParameter = fileformid.HasValue ?
                new ObjectParameter("fileformid", fileformid) :
                new ObjectParameter("fileformid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_TransferRequestDetails_Result>("Sp_Get_TransferRequestDetails", fileformidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_TransferRequestDetails_ComId_Result> Sp_Get_TransferRequestDetails_ComId(Nullable<long> comid)
        {
            var comidParameter = comid.HasValue ?
                new ObjectParameter("Comid", comid) :
                new ObjectParameter("Comid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_TransferRequestDetails_ComId_Result>("Sp_Get_TransferRequestDetails_ComId", comidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_TransferRequestDetails_Commercial_Result> Sp_Get_TransferRequestDetails_Commercial(Nullable<long> comid)
        {
            var comidParameter = comid.HasValue ?
                new ObjectParameter("Comid", comid) :
                new ObjectParameter("Comid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_TransferRequestDetails_Commercial_Result>("Sp_Get_TransferRequestDetails_Commercial", comidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_TransferRequestDetails_File_Result> Sp_Get_TransferRequestDetails_File(Nullable<long> fileformid)
        {
            var fileformidParameter = fileformid.HasValue ?
                new ObjectParameter("fileformid", fileformid) :
                new ObjectParameter("fileformid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_TransferRequestDetails_File_Result>("Sp_Get_TransferRequestDetails_File", fileformidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_TransferRequestDetails_Plot_Result> Sp_Get_TransferRequestDetails_Plot(Nullable<long> plotid)
        {
            var plotidParameter = plotid.HasValue ?
                new ObjectParameter("Plotid", plotid) :
                new ObjectParameter("Plotid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_TransferRequestDetails_Plot_Result>("Sp_Get_TransferRequestDetails_Plot", plotidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_TransferRequestDetails_PlotId_Result> Sp_Get_TransferRequestDetails_PlotId(Nullable<long> plotid)
        {
            var plotidParameter = plotid.HasValue ?
                new ObjectParameter("Plotid", plotid) :
                new ObjectParameter("Plotid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_TransferRequestDetails_PlotId_Result>("Sp_Get_TransferRequestDetails_PlotId", plotidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_TransferRequestList_Result> Sp_Get_TransferRequestList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_TransferRequestList_Result>("Sp_Get_TransferRequestList");
        }
    
        public virtual ObjectResult<Sp_Get_TransferRequestList_Commercial_Result> Sp_Get_TransferRequestList_Commercial()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_TransferRequestList_Commercial_Result>("Sp_Get_TransferRequestList_Commercial");
        }
    
        public virtual ObjectResult<Sp_Get_TransferRequestList_Plot_Result> Sp_Get_TransferRequestList_Plot()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_TransferRequestList_Plot_Result>("Sp_Get_TransferRequestList_Plot");
        }
    
        public virtual ObjectResult<Sp_Get_Trial_Balance_Children_Result> Sp_Get_Trial_Balance_Children(string code, Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Trial_Balance_Children_Result>("Sp_Get_Trial_Balance_Children", codeParameter, fromParameter, toParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Trial_Balance_New_Result> Sp_Get_Trial_Balance_New(Nullable<System.DateTime> from, Nullable<System.DateTime> to, Nullable<int> comp)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Trial_Balance_New_Result>("Sp_Get_Trial_Balance_New", fromParameter, toParameter, compParameter);
        }
    
        public virtual ObjectResult<Sp_Get_UnitDetails_Electricity_Result> Sp_Get_UnitDetails_Electricity()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_UnitDetails_Electricity_Result>("Sp_Get_UnitDetails_Electricity");
        }
    
        public virtual ObjectResult<Sp_Get_User_Login_Info_Result> Sp_Get_User_Login_Info(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_User_Login_Info_Result>("Sp_Get_User_Login_Info", emailParameter);
        }
    
        public virtual int Sp_Get_User_Login_Token(string email, Nullable<long> rand)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var randParameter = rand.HasValue ?
                new ObjectParameter("rand", rand) :
                new ObjectParameter("rand", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Get_User_Login_Token", emailParameter, randParameter);
        }
    
        public virtual ObjectResult<Sp_Get_User_Parameter_Result> Sp_Get_User_Parameter(Nullable<long> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_User_Parameter_Result>("Sp_Get_User_Parameter", useridParameter);
        }
    
        public virtual ObjectResult<Sp_Get_UserAllCompany_Result> Sp_Get_UserAllCompany(Nullable<long> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_UserAllCompany_Result>("Sp_Get_UserAllCompany", userIdParameter);
        }
    
        public virtual ObjectResult<Sp_Get_UserAllRoles_Result> Sp_Get_UserAllRoles(Nullable<long> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_UserAllRoles_Result>("Sp_Get_UserAllRoles", userIdParameter);
        }
    
        public virtual ObjectResult<Sp_Get_UserCompany_Result> Sp_Get_UserCompany(Nullable<long> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_UserCompany_Result>("Sp_Get_UserCompany", useridParameter);
        }
    
        public virtual ObjectResult<Sp_Get_UserCurrMonth_Attendance_Result> Sp_Get_UserCurrMonth_Attendance(Nullable<long> uid, Nullable<bool> isEmpId)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(long));
    
            var isEmpIdParameter = isEmpId.HasValue ?
                new ObjectParameter("isEmpId", isEmpId) :
                new ObjectParameter("isEmpId", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_UserCurrMonth_Attendance_Result>("Sp_Get_UserCurrMonth_Attendance", uidParameter, isEmpIdParameter);
        }
    
        public virtual ObjectResult<Sp_Get_UserDetails_Short_Result> Sp_Get_UserDetails_Short(Nullable<long> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_UserDetails_Short_Result>("Sp_Get_UserDetails_Short", useridParameter);
        }
    
        public virtual ObjectResult<string> Sp_Get_UserGroup(Nullable<long> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Sp_Get_UserGroup", useridParameter);
        }
    
        public virtual ObjectResult<Sp_Get_UserIdEmail_Result> Sp_Get_UserIdEmail(string userids)
        {
            var useridsParameter = userids != null ?
                new ObjectParameter("userids", userids) :
                new ObjectParameter("userids", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_UserIdEmail_Result>("Sp_Get_UserIdEmail", useridsParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Sp_Get_UserRoleConfirmation(string role, Nullable<long> user)
        {
            var roleParameter = role != null ?
                new ObjectParameter("role", role) :
                new ObjectParameter("role", typeof(string));
    
            var userParameter = user.HasValue ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Sp_Get_UserRoleConfirmation", roleParameter, userParameter);
        }
    
        public virtual ObjectResult<string> Sp_Get_UserRoleGroup(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Sp_Get_UserRoleGroup", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Users_Result> Sp_Get_Users()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Users_Result>("Sp_Get_Users");
        }
    
        public virtual ObjectResult<Sp_Get_UsersByRole_Result> Sp_Get_UsersByRole(string role)
        {
            var roleParameter = role != null ?
                new ObjectParameter("role", role) :
                new ObjectParameter("role", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_UsersByRole_Result>("Sp_Get_UsersByRole", roleParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Vendor_Result> Sp_Get_Vendor()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Vendor_Result>("Sp_Get_Vendor");
        }
    
        public virtual ObjectResult<Sp_Get_Vendor_Status_Result> Sp_Get_Vendor_Status(Nullable<long> stat)
        {
            var statParameter = stat.HasValue ?
                new ObjectParameter("stat", stat) :
                new ObjectParameter("stat", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Vendor_Status_Result>("Sp_Get_Vendor_Status", statParameter);
        }
    
        public virtual ObjectResult<Sp_Get_VendorDetail_Result> Sp_Get_VendorDetail(Nullable<long> venid)
        {
            var venidParameter = venid.HasValue ?
                new ObjectParameter("venid", venid) :
                new ObjectParameter("venid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_VendorDetail_Result>("Sp_Get_VendorDetail", venidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_VendorHeadId_Result> Sp_Get_VendorHeadId(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_VendorHeadId_Result>("Sp_Get_VendorHeadId", idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_VerifiedforAllotmentLetters_Result> Sp_Get_VerifiedforAllotmentLetters()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_VerifiedforAllotmentLetters_Result>("Sp_Get_VerifiedforAllotmentLetters");
        }
    
        public virtual ObjectResult<Sp_Get_Version_Result> Sp_Get_Version(Nullable<long> dealid)
        {
            var dealidParameter = dealid.HasValue ?
                new ObjectParameter("dealid", dealid) :
                new ObjectParameter("dealid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Version_Result>("Sp_Get_Version", dealidParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Voucher_Result> Sp_Get_Voucher(Nullable<long> id, Nullable<long> token)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var tokenParameter = token.HasValue ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Voucher_Result>("Sp_Get_Voucher", idParameter, tokenParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Waringletter_Details_Result> Sp_Get_Waringletter_Details(string letterType, Nullable<long> empId)
        {
            var letterTypeParameter = letterType != null ?
                new ObjectParameter("LetterType", letterType) :
                new ObjectParameter("LetterType", typeof(string));
    
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Waringletter_Details_Result>("Sp_Get_Waringletter_Details", letterTypeParameter, empIdParameter);
        }
    
        public virtual ObjectResult<Sp_Get_WarningSms_Result> Sp_Get_WarningSms()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_WarningSms_Result>("Sp_Get_WarningSms");
        }
    
        public virtual ObjectResult<Sp_Get_wbd_Resource_Result> Sp_Get_wbd_Resource(Nullable<long> proj_id)
        {
            var proj_idParameter = proj_id.HasValue ?
                new ObjectParameter("Proj_id", proj_id) :
                new ObjectParameter("Proj_id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_wbd_Resource_Result>("Sp_Get_wbd_Resource", proj_idParameter);
        }
    
        public virtual ObjectResult<Sp_Get_WbdResources_Equipment_Result> Sp_Get_WbdResources_Equipment(Nullable<long> proj_id, string type)
        {
            var proj_idParameter = proj_id.HasValue ?
                new ObjectParameter("Proj_id", proj_id) :
                new ObjectParameter("Proj_id", typeof(long));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_WbdResources_Equipment_Result>("Sp_Get_WbdResources_Equipment", proj_idParameter, typeParameter);
        }
    
        public virtual ObjectResult<Sp_Get_WbdResources_Labour_Result> Sp_Get_WbdResources_Labour(Nullable<long> proj_id, string type)
        {
            var proj_idParameter = proj_id.HasValue ?
                new ObjectParameter("Proj_id", proj_id) :
                new ObjectParameter("Proj_id", typeof(long));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_WbdResources_Labour_Result>("Sp_Get_WbdResources_Labour", proj_idParameter, typeParameter);
        }
    
        public virtual ObjectResult<Sp_Get_WbdResources_Material_Result> Sp_Get_WbdResources_Material(Nullable<long> proj_id, string type)
        {
            var proj_idParameter = proj_id.HasValue ?
                new ObjectParameter("Proj_id", proj_id) :
                new ObjectParameter("Proj_id", typeof(long));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_WbdResources_Material_Result>("Sp_Get_WbdResources_Material", proj_idParameter, typeParameter);
        }
    
        public virtual ObjectResult<Sp_GetEmpCompleteDesigs_Result> Sp_GetEmpCompleteDesigs(Nullable<long> empId)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("empId", empId) :
                new ObjectParameter("empId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetEmpCompleteDesigs_Result>("Sp_GetEmpCompleteDesigs", empIdParameter);
        }
    
        public virtual ObjectResult<Sp_GetTimeAdjustments_ByDep_Result> Sp_GetTimeAdjustments_ByDep(Nullable<bool> cat, Nullable<int> userType)
        {
            var catParameter = cat.HasValue ?
                new ObjectParameter("cat", cat) :
                new ObjectParameter("cat", typeof(bool));
    
            var userTypeParameter = userType.HasValue ?
                new ObjectParameter("userType", userType) :
                new ObjectParameter("userType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetTimeAdjustments_ByDep_Result>("Sp_GetTimeAdjustments_ByDep", catParameter, userTypeParameter);
        }
    
        public virtual ObjectResult<Sp_GetTimeAdjustments_ByEmp_Result> Sp_GetTimeAdjustments_ByEmp(Nullable<long> emp)
        {
            var empParameter = emp.HasValue ?
                new ObjectParameter("emp", emp) :
                new ObjectParameter("emp", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetTimeAdjustments_ByEmp_Result>("Sp_GetTimeAdjustments_ByEmp", empParameter);
        }
    
        public virtual ObjectResult<Sp_HF_Chrone_CancellationSMS_Result> Sp_HF_Chrone_CancellationSMS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_HF_Chrone_CancellationSMS_Result>("Sp_HF_Chrone_CancellationSMS");
        }
    
        public virtual int SP_ManualMeterReading_Request_Status(Nullable<long> id, Nullable<bool> stat, Nullable<long> usr, string rem)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var statParameter = stat.HasValue ?
                new ObjectParameter("stat", stat) :
                new ObjectParameter("stat", typeof(bool));
    
            var usrParameter = usr.HasValue ?
                new ObjectParameter("usr", usr) :
                new ObjectParameter("usr", typeof(long));
    
            var remParameter = rem != null ?
                new ObjectParameter("rem", rem) :
                new ObjectParameter("rem", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ManualMeterReading_Request_Status", idParameter, statParameter, usrParameter, remParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Migrate_File_To_Plot(Nullable<long> ballotPlot, Nullable<long> plotCategory)
        {
            var ballotPlotParameter = ballotPlot.HasValue ?
                new ObjectParameter("ballotPlot", ballotPlot) :
                new ObjectParameter("ballotPlot", typeof(long));
    
            var plotCategoryParameter = plotCategory.HasValue ?
                new ObjectParameter("plotCategory", plotCategory) :
                new ObjectParameter("plotCategory", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Migrate_File_To_Plot", ballotPlotParameter, plotCategoryParameter);
        }
    
        public virtual ObjectResult<Sp_Migrate_FileComments_To_PlotComments_Result> Sp_Migrate_FileComments_To_PlotComments(Nullable<long> fileId, Nullable<long> pltId)
        {
            var fileIdParameter = fileId.HasValue ?
                new ObjectParameter("fileId", fileId) :
                new ObjectParameter("fileId", typeof(long));
    
            var pltIdParameter = pltId.HasValue ?
                new ObjectParameter("pltId", pltId) :
                new ObjectParameter("pltId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Migrate_FileComments_To_PlotComments_Result>("Sp_Migrate_FileComments_To_PlotComments", fileIdParameter, pltIdParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Migrate_FileOwners(Nullable<long> fileId, string fileFormNum, Nullable<long> fileOwnerId, Nullable<long> groupId, Nullable<long> plotIden, string plotName)
        {
            var fileIdParameter = fileId.HasValue ?
                new ObjectParameter("fileId", fileId) :
                new ObjectParameter("fileId", typeof(long));
    
            var fileFormNumParameter = fileFormNum != null ?
                new ObjectParameter("fileFormNum", fileFormNum) :
                new ObjectParameter("fileFormNum", typeof(string));
    
            var fileOwnerIdParameter = fileOwnerId.HasValue ?
                new ObjectParameter("FileOwnerId", fileOwnerId) :
                new ObjectParameter("FileOwnerId", typeof(long));
    
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("GroupId", groupId) :
                new ObjectParameter("GroupId", typeof(long));
    
            var plotIdenParameter = plotIden.HasValue ?
                new ObjectParameter("PlotIden", plotIden) :
                new ObjectParameter("PlotIden", typeof(long));
    
            var plotNameParameter = plotName != null ?
                new ObjectParameter("PlotName", plotName) :
                new ObjectParameter("PlotName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Migrate_FileOwners", fileIdParameter, fileFormNumParameter, fileOwnerIdParameter, groupIdParameter, plotIdenParameter, plotNameParameter);
        }
    
        public virtual ObjectResult<Sp_Migrate_PlotComments_To_FileComments_Result> Sp_Migrate_PlotComments_To_FileComments(Nullable<long> plotId, Nullable<long> fileId)
        {
            var plotIdParameter = plotId.HasValue ?
                new ObjectParameter("PlotId", plotId) :
                new ObjectParameter("PlotId", typeof(long));
    
            var fileIdParameter = fileId.HasValue ?
                new ObjectParameter("fileId", fileId) :
                new ObjectParameter("fileId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Migrate_PlotComments_To_FileComments_Result>("Sp_Migrate_PlotComments_To_FileComments", plotIdParameter, fileIdParameter);
        }
    
        public virtual ObjectResult<Sp_Report_CommercialReceivable_Result> Sp_Report_CommercialReceivable(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Report_CommercialReceivable_Result>("Sp_Report_CommercialReceivable", idParameter);
        }
    
        public virtual ObjectResult<Sp_Report_TransferAllotmentStatus_Result> Sp_Report_TransferAllotmentStatus()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Report_TransferAllotmentStatus_Result>("Sp_Report_TransferAllotmentStatus");
        }
    
        public virtual ObjectResult<SP_Reports_BANK_MIS_Result> SP_Reports_BANK_MIS(Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, string val)
        {
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var valParameter = val != null ?
                new ObjectParameter("val", val) :
                new ObjectParameter("val", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Reports_BANK_MIS_Result>("SP_Reports_BANK_MIS", startdateParameter, enddateParameter, valParameter);
        }
    
        public virtual ObjectResult<SP_Reports_DIB_MIS_Result> SP_Reports_DIB_MIS(Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate)
        {
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Reports_DIB_MIS_Result>("SP_Reports_DIB_MIS", startdateParameter, enddateParameter);
        }
    
        public virtual ObjectResult<Sp_Reports_FilesPaymentStatus_Result> Sp_Reports_FilesPaymentStatus()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Reports_FilesPaymentStatus_Result>("Sp_Reports_FilesPaymentStatus");
        }
    
        public virtual ObjectResult<Sp_Reports_FilesStatus_Result> Sp_Reports_FilesStatus()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Reports_FilesStatus_Result>("Sp_Reports_FilesStatus");
        }
    
        public virtual ObjectResult<Sp_Reports_FileTransfer_Result> Sp_Reports_FileTransfer(Nullable<System.DateTime> datetime1, Nullable<System.DateTime> datetime2)
        {
            var datetime1Parameter = datetime1.HasValue ?
                new ObjectParameter("datetime1", datetime1) :
                new ObjectParameter("datetime1", typeof(System.DateTime));
    
            var datetime2Parameter = datetime2.HasValue ?
                new ObjectParameter("datetime2", datetime2) :
                new ObjectParameter("datetime2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Reports_FileTransfer_Result>("Sp_Reports_FileTransfer", datetime1Parameter, datetime2Parameter);
        }
    
        public virtual ObjectResult<Sp_Reports_FileTransfer_List_Result> Sp_Reports_FileTransfer_List(Nullable<System.DateTime> datetime1, Nullable<System.DateTime> datetime2)
        {
            var datetime1Parameter = datetime1.HasValue ?
                new ObjectParameter("datetime1", datetime1) :
                new ObjectParameter("datetime1", typeof(System.DateTime));
    
            var datetime2Parameter = datetime2.HasValue ?
                new ObjectParameter("datetime2", datetime2) :
                new ObjectParameter("datetime2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Reports_FileTransfer_List_Result>("Sp_Reports_FileTransfer_List", datetime1Parameter, datetime2Parameter);
        }
    
        public virtual ObjectResult<SP_Reports_HODTicket_Result> SP_Reports_HODTicket(Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, string depid)
        {
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var depidParameter = depid != null ?
                new ObjectParameter("depid", depid) :
                new ObjectParameter("depid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Reports_HODTicket_Result>("SP_Reports_HODTicket", startdateParameter, enddateParameter, depidParameter);
        }
    
        public virtual ObjectResult<SP_Reports_Leads_Status_Result> SP_Reports_Leads_Status(Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate)
        {
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Reports_Leads_Status_Result>("SP_Reports_Leads_Status", startdateParameter, enddateParameter);
        }
    
        public virtual ObjectResult<SP_Reports_Leads_User_Result> SP_Reports_Leads_User(Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate)
        {
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Reports_Leads_User_Result>("SP_Reports_Leads_User", startdateParameter, enddateParameter);
        }
    
        public virtual ObjectResult<Sp_Reports_LeadsPlotsSize_Result> Sp_Reports_LeadsPlotsSize(string user, Nullable<System.DateTime> from, Nullable<System.DateTime> to, string leadstatus)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var leadstatusParameter = leadstatus != null ?
                new ObjectParameter("leadstatus", leadstatus) :
                new ObjectParameter("leadstatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Reports_LeadsPlotsSize_Result>("Sp_Reports_LeadsPlotsSize", userParameter, fromParameter, toParameter, leadstatusParameter);
        }
    
        public virtual ObjectResult<Sp_Reports_Monthly_InflowOutFlow_Result> Sp_Reports_Monthly_InflowOutFlow(Nullable<System.DateTime> month)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Reports_Monthly_InflowOutFlow_Result>("Sp_Reports_Monthly_InflowOutFlow", monthParameter);
        }
    
        public virtual ObjectResult<Sp_Reports_Monthly_InflowOutFlow_FT_Result> Sp_Reports_Monthly_InflowOutFlow_FT(Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Reports_Monthly_InflowOutFlow_FT_Result>("Sp_Reports_Monthly_InflowOutFlow_FT", fromParameter, toParameter);
        }
    
        public virtual ObjectResult<Sp_Reports_MonthlyExpectedInstallment_Result> Sp_Reports_MonthlyExpectedInstallment(Nullable<System.DateTime> from, Nullable<System.DateTime> to, Nullable<int> block, string type)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Reports_MonthlyExpectedInstallment_Result>("Sp_Reports_MonthlyExpectedInstallment", fromParameter, toParameter, blockParameter, typeParameter);
        }
    
        public virtual ObjectResult<Sp_Reports_MonthlyInstallmentReceived_Result> Sp_Reports_MonthlyInstallmentReceived(Nullable<System.DateTime> from, Nullable<System.DateTime> to, Nullable<int> block, string type)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Reports_MonthlyInstallmentReceived_Result>("Sp_Reports_MonthlyInstallmentReceived", fromParameter, toParameter, blockParameter, typeParameter);
        }
    
        public virtual ObjectResult<Sp_Reports_MonthlyOverdue_Result> Sp_Reports_MonthlyOverdue(Nullable<int> month, Nullable<int> year)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Reports_MonthlyOverdue_Result>("Sp_Reports_MonthlyOverdue", monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<Sp_Reports_MonthlyRecovery_Result> Sp_Reports_MonthlyRecovery(Nullable<System.DateTime> month, Nullable<int> block, string type)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(System.DateTime));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Reports_MonthlyRecovery_Result>("Sp_Reports_MonthlyRecovery", monthParameter, blockParameter, typeParameter);
        }
    
        public virtual ObjectResult<SP_Reports_MyTicket_Result> SP_Reports_MyTicket(Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, Nullable<long> userid)
        {
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Reports_MyTicket_Result>("SP_Reports_MyTicket", startdateParameter, enddateParameter, useridParameter);
        }
    
        public virtual ObjectResult<Sp_Reports_OverDue_Result> Sp_Reports_OverDue(Nullable<int> status)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Reports_OverDue_Result>("Sp_Reports_OverDue", statusParameter);
        }
    
        public virtual ObjectResult<Sp_Reports_Payable_Result> Sp_Reports_Payable(Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Reports_Payable_Result>("Sp_Reports_Payable", fromParameter, toParameter);
        }
    
        public virtual ObjectResult<Sp_Reports_Payments_Result> Sp_Reports_Payments(Nullable<System.DateTime> date, Nullable<System.DateTime> date2)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var date2Parameter = date2.HasValue ?
                new ObjectParameter("date2", date2) :
                new ObjectParameter("date2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Reports_Payments_Result>("Sp_Reports_Payments", dateParameter, date2Parameter);
        }
    
        public virtual ObjectResult<Sp_Reports_PropertyDealPlotsSize_NewLead_Result> Sp_Reports_PropertyDealPlotsSize_NewLead(string user, Nullable<System.DateTime> from, Nullable<System.DateTime> to, string leadstatus, string type)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var leadstatusParameter = leadstatus != null ?
                new ObjectParameter("leadstatus", leadstatus) :
                new ObjectParameter("leadstatus", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Reports_PropertyDealPlotsSize_NewLead_Result>("Sp_Reports_PropertyDealPlotsSize_NewLead", userParameter, fromParameter, toParameter, leadstatusParameter, typeParameter);
        }
    
        public virtual ObjectResult<Sp_Reports_PurchaseOrder_Result> Sp_Reports_PurchaseOrder(Nullable<System.DateTime> datetime1, Nullable<System.DateTime> datetime2)
        {
            var datetime1Parameter = datetime1.HasValue ?
                new ObjectParameter("datetime1", datetime1) :
                new ObjectParameter("datetime1", typeof(System.DateTime));
    
            var datetime2Parameter = datetime2.HasValue ?
                new ObjectParameter("datetime2", datetime2) :
                new ObjectParameter("datetime2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Reports_PurchaseOrder_Result>("Sp_Reports_PurchaseOrder", datetime1Parameter, datetime2Parameter);
        }
    
        public virtual ObjectResult<SP_Reports_RegisterPlots_Result> SP_Reports_RegisterPlots(Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate)
        {
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Reports_RegisterPlots_Result>("SP_Reports_RegisterPlots", startdateParameter, enddateParameter);
        }
    
        public virtual ObjectResult<SP_Reports_RegisterPlots_List_Result> SP_Reports_RegisterPlots_List(Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate)
        {
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Reports_RegisterPlots_List_Result>("SP_Reports_RegisterPlots_List", startdateParameter, enddateParameter);
        }
    
        public virtual ObjectResult<Sp_Reports_Revenue_Result> Sp_Reports_Revenue(Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Reports_Revenue_Result>("Sp_Reports_Revenue", fromParameter, toParameter);
        }
    
        public virtual ObjectResult<SP_Reports_Ticket_Result> SP_Reports_Ticket(Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, string depid)
        {
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var depidParameter = depid != null ?
                new ObjectParameter("depid", depid) :
                new ObjectParameter("depid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Reports_Ticket_Result>("SP_Reports_Ticket", startdateParameter, enddateParameter, depidParameter);
        }
    
        public virtual int Sp_Reset_Attendance(string attDets)
        {
            var attDetsParameter = attDets != null ?
                new ObjectParameter("attDets", attDets) :
                new ObjectParameter("attDets", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Reset_Attendance", attDetsParameter);
        }
    
        public virtual int Sp_Swap_Plot(Nullable<long> id, string plot_Number, Nullable<long> block_Id, Nullable<long> phase_Id, string sector, string plot_Size, Nullable<int> plot_Category, string develop_Status, string plot_Location, string type, string road_Type, string status, Nullable<bool> verified, Nullable<int> allotmentReq, Nullable<System.DateTime> allotmentReq_Date, string old_PlotNumber, string reg, Nullable<bool> isForApproval, Nullable<bool> verification_Req, Nullable<System.DateTime> verification_Date, string remarks, Nullable<bool> registry, string block_Name, Nullable<bool> mortgage, string mortgage_by, Nullable<System.DateTime> verificationReqDate, Nullable<System.DateTime> verifiedDate, Nullable<bool> hold, Nullable<int> possessionReq, Nullable<System.DateTime> possessionReq_Date, Nullable<decimal> north, Nullable<decimal> south, Nullable<decimal> east, Nullable<decimal> west, Nullable<decimal> north_East, Nullable<decimal> north_West, Nullable<decimal> south_West, string front, string phase_Name, Nullable<decimal> south_East, Nullable<bool> rental, string application_FileNo, Nullable<long> application_FileId, Nullable<bool> development_Charges, Nullable<long> dealership_Id, string dealership_Name, Nullable<long> installment_Plan_Id, Nullable<decimal> area)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var plot_NumberParameter = plot_Number != null ?
                new ObjectParameter("Plot_Number", plot_Number) :
                new ObjectParameter("Plot_Number", typeof(string));
    
            var block_IdParameter = block_Id.HasValue ?
                new ObjectParameter("Block_Id", block_Id) :
                new ObjectParameter("Block_Id", typeof(long));
    
            var phase_IdParameter = phase_Id.HasValue ?
                new ObjectParameter("Phase_Id", phase_Id) :
                new ObjectParameter("Phase_Id", typeof(long));
    
            var sectorParameter = sector != null ?
                new ObjectParameter("Sector", sector) :
                new ObjectParameter("Sector", typeof(string));
    
            var plot_SizeParameter = plot_Size != null ?
                new ObjectParameter("Plot_Size", plot_Size) :
                new ObjectParameter("Plot_Size", typeof(string));
    
            var plot_CategoryParameter = plot_Category.HasValue ?
                new ObjectParameter("Plot_Category", plot_Category) :
                new ObjectParameter("Plot_Category", typeof(int));
    
            var develop_StatusParameter = develop_Status != null ?
                new ObjectParameter("Develop_Status", develop_Status) :
                new ObjectParameter("Develop_Status", typeof(string));
    
            var plot_LocationParameter = plot_Location != null ?
                new ObjectParameter("Plot_Location", plot_Location) :
                new ObjectParameter("Plot_Location", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var road_TypeParameter = road_Type != null ?
                new ObjectParameter("Road_Type", road_Type) :
                new ObjectParameter("Road_Type", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var verifiedParameter = verified.HasValue ?
                new ObjectParameter("Verified", verified) :
                new ObjectParameter("Verified", typeof(bool));
    
            var allotmentReqParameter = allotmentReq.HasValue ?
                new ObjectParameter("AllotmentReq", allotmentReq) :
                new ObjectParameter("AllotmentReq", typeof(int));
    
            var allotmentReq_DateParameter = allotmentReq_Date.HasValue ?
                new ObjectParameter("AllotmentReq_Date", allotmentReq_Date) :
                new ObjectParameter("AllotmentReq_Date", typeof(System.DateTime));
    
            var old_PlotNumberParameter = old_PlotNumber != null ?
                new ObjectParameter("Old_PlotNumber", old_PlotNumber) :
                new ObjectParameter("Old_PlotNumber", typeof(string));
    
            var regParameter = reg != null ?
                new ObjectParameter("reg", reg) :
                new ObjectParameter("reg", typeof(string));
    
            var isForApprovalParameter = isForApproval.HasValue ?
                new ObjectParameter("IsForApproval", isForApproval) :
                new ObjectParameter("IsForApproval", typeof(bool));
    
            var verification_ReqParameter = verification_Req.HasValue ?
                new ObjectParameter("Verification_Req", verification_Req) :
                new ObjectParameter("Verification_Req", typeof(bool));
    
            var verification_DateParameter = verification_Date.HasValue ?
                new ObjectParameter("Verification_Date", verification_Date) :
                new ObjectParameter("Verification_Date", typeof(System.DateTime));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var registryParameter = registry.HasValue ?
                new ObjectParameter("Registry", registry) :
                new ObjectParameter("Registry", typeof(bool));
    
            var block_NameParameter = block_Name != null ?
                new ObjectParameter("Block_Name", block_Name) :
                new ObjectParameter("Block_Name", typeof(string));
    
            var mortgageParameter = mortgage.HasValue ?
                new ObjectParameter("Mortgage", mortgage) :
                new ObjectParameter("Mortgage", typeof(bool));
    
            var mortgage_byParameter = mortgage_by != null ?
                new ObjectParameter("Mortgage_by", mortgage_by) :
                new ObjectParameter("Mortgage_by", typeof(string));
    
            var verificationReqDateParameter = verificationReqDate.HasValue ?
                new ObjectParameter("VerificationReqDate", verificationReqDate) :
                new ObjectParameter("VerificationReqDate", typeof(System.DateTime));
    
            var verifiedDateParameter = verifiedDate.HasValue ?
                new ObjectParameter("VerifiedDate", verifiedDate) :
                new ObjectParameter("VerifiedDate", typeof(System.DateTime));
    
            var holdParameter = hold.HasValue ?
                new ObjectParameter("Hold", hold) :
                new ObjectParameter("Hold", typeof(bool));
    
            var possessionReqParameter = possessionReq.HasValue ?
                new ObjectParameter("PossessionReq", possessionReq) :
                new ObjectParameter("PossessionReq", typeof(int));
    
            var possessionReq_DateParameter = possessionReq_Date.HasValue ?
                new ObjectParameter("PossessionReq_Date", possessionReq_Date) :
                new ObjectParameter("PossessionReq_Date", typeof(System.DateTime));
    
            var northParameter = north.HasValue ?
                new ObjectParameter("North", north) :
                new ObjectParameter("North", typeof(decimal));
    
            var southParameter = south.HasValue ?
                new ObjectParameter("South", south) :
                new ObjectParameter("South", typeof(decimal));
    
            var eastParameter = east.HasValue ?
                new ObjectParameter("East", east) :
                new ObjectParameter("East", typeof(decimal));
    
            var westParameter = west.HasValue ?
                new ObjectParameter("West", west) :
                new ObjectParameter("West", typeof(decimal));
    
            var north_EastParameter = north_East.HasValue ?
                new ObjectParameter("North_East", north_East) :
                new ObjectParameter("North_East", typeof(decimal));
    
            var north_WestParameter = north_West.HasValue ?
                new ObjectParameter("North_West", north_West) :
                new ObjectParameter("North_West", typeof(decimal));
    
            var south_WestParameter = south_West.HasValue ?
                new ObjectParameter("South_West", south_West) :
                new ObjectParameter("South_West", typeof(decimal));
    
            var frontParameter = front != null ?
                new ObjectParameter("Front", front) :
                new ObjectParameter("Front", typeof(string));
    
            var phase_NameParameter = phase_Name != null ?
                new ObjectParameter("Phase_Name", phase_Name) :
                new ObjectParameter("Phase_Name", typeof(string));
    
            var south_EastParameter = south_East.HasValue ?
                new ObjectParameter("South_East", south_East) :
                new ObjectParameter("South_East", typeof(decimal));
    
            var rentalParameter = rental.HasValue ?
                new ObjectParameter("Rental", rental) :
                new ObjectParameter("Rental", typeof(bool));
    
            var application_FileNoParameter = application_FileNo != null ?
                new ObjectParameter("Application_FileNo", application_FileNo) :
                new ObjectParameter("Application_FileNo", typeof(string));
    
            var application_FileIdParameter = application_FileId.HasValue ?
                new ObjectParameter("Application_FileId", application_FileId) :
                new ObjectParameter("Application_FileId", typeof(long));
    
            var development_ChargesParameter = development_Charges.HasValue ?
                new ObjectParameter("Development_Charges", development_Charges) :
                new ObjectParameter("Development_Charges", typeof(bool));
    
            var dealership_IdParameter = dealership_Id.HasValue ?
                new ObjectParameter("Dealership_Id", dealership_Id) :
                new ObjectParameter("Dealership_Id", typeof(long));
    
            var dealership_NameParameter = dealership_Name != null ?
                new ObjectParameter("Dealership_Name", dealership_Name) :
                new ObjectParameter("Dealership_Name", typeof(string));
    
            var installment_Plan_IdParameter = installment_Plan_Id.HasValue ?
                new ObjectParameter("Installment_Plan_Id", installment_Plan_Id) :
                new ObjectParameter("Installment_Plan_Id", typeof(long));
    
            var areaParameter = area.HasValue ?
                new ObjectParameter("Area", area) :
                new ObjectParameter("Area", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Swap_Plot", idParameter, plot_NumberParameter, block_IdParameter, phase_IdParameter, sectorParameter, plot_SizeParameter, plot_CategoryParameter, develop_StatusParameter, plot_LocationParameter, typeParameter, road_TypeParameter, statusParameter, verifiedParameter, allotmentReqParameter, allotmentReq_DateParameter, old_PlotNumberParameter, regParameter, isForApprovalParameter, verification_ReqParameter, verification_DateParameter, remarksParameter, registryParameter, block_NameParameter, mortgageParameter, mortgage_byParameter, verificationReqDateParameter, verifiedDateParameter, holdParameter, possessionReqParameter, possessionReq_DateParameter, northParameter, southParameter, eastParameter, westParameter, north_EastParameter, north_WestParameter, south_WestParameter, frontParameter, phase_NameParameter, south_EastParameter, rentalParameter, application_FileNoParameter, application_FileIdParameter, development_ChargesParameter, dealership_IdParameter, dealership_NameParameter, installment_Plan_IdParameter, areaParameter);
        }
    
        public virtual int SP_System_Log(string info, string iP_Address, Nullable<long> userid)
        {
            var infoParameter = info != null ?
                new ObjectParameter("info", info) :
                new ObjectParameter("info", typeof(string));
    
            var iP_AddressParameter = iP_Address != null ?
                new ObjectParameter("IP_Address", iP_Address) :
                new ObjectParameter("IP_Address", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_System_Log", infoParameter, iP_AddressParameter, useridParameter);
        }
    
        public virtual int Sp_Update_Absentee(Nullable<long> id, Nullable<int> absen)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var absenParameter = absen.HasValue ?
                new ObjectParameter("Absen", absen) :
                new ObjectParameter("Absen", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Absentee", idParameter, absenParameter);
        }
    
        public virtual int Sp_Update_Absentee_Details(Nullable<long> id, Nullable<decimal> amount)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Absentee_Details", idParameter, amountParameter);
        }
    
        public virtual int Sp_Update_AdvancePayment(Nullable<long> fileformid)
        {
            var fileformidParameter = fileformid.HasValue ?
                new ObjectParameter("fileformid", fileformid) :
                new ObjectParameter("fileformid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_AdvancePayment", fileformidParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Sp_Update_AllotmentImages(Nullable<long> imageId, Nullable<long> id)
        {
            var imageIdParameter = imageId.HasValue ?
                new ObjectParameter("imageId", imageId) :
                new ObjectParameter("imageId", typeof(long));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Sp_Update_AllotmentImages", imageIdParameter, idParameter);
        }
    
        public virtual int Sp_Update_AllotmentLetter(Nullable<long> plotownid)
        {
            var plotownidParameter = plotownid.HasValue ?
                new ObjectParameter("plotownid", plotownid) :
                new ObjectParameter("plotownid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_AllotmentLetter", plotownidParameter);
        }
    
        public virtual int Sp_Update_AllotmentLetterDelivery(Nullable<long> id, Nullable<System.DateTime> datetime)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var datetimeParameter = datetime.HasValue ?
                new ObjectParameter("datetime", datetime) :
                new ObjectParameter("datetime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_AllotmentLetterDelivery", idParameter, datetimeParameter);
        }
    
        public virtual int Sp_Update_AllotmentLetterDeliveryPre(Nullable<long> id, Nullable<System.DateTime> datetime)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var datetimeParameter = datetime.HasValue ?
                new ObjectParameter("datetime", datetime) :
                new ObjectParameter("datetime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_AllotmentLetterDeliveryPre", idParameter, datetimeParameter);
        }
    
        public virtual int Sp_Update_AllotmentLetterInfo(Nullable<long> id, string name, string fName, string address, string size, string dim, string area, string img1, string img2, string img3, string img4, string img5, string img6, string witness1, string witness2)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var fNameParameter = fName != null ?
                new ObjectParameter("fName", fName) :
                new ObjectParameter("fName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var sizeParameter = size != null ?
                new ObjectParameter("size", size) :
                new ObjectParameter("size", typeof(string));
    
            var dimParameter = dim != null ?
                new ObjectParameter("dim", dim) :
                new ObjectParameter("dim", typeof(string));
    
            var areaParameter = area != null ?
                new ObjectParameter("area", area) :
                new ObjectParameter("area", typeof(string));
    
            var img1Parameter = img1 != null ?
                new ObjectParameter("img1", img1) :
                new ObjectParameter("img1", typeof(string));
    
            var img2Parameter = img2 != null ?
                new ObjectParameter("img2", img2) :
                new ObjectParameter("img2", typeof(string));
    
            var img3Parameter = img3 != null ?
                new ObjectParameter("img3", img3) :
                new ObjectParameter("img3", typeof(string));
    
            var img4Parameter = img4 != null ?
                new ObjectParameter("img4", img4) :
                new ObjectParameter("img4", typeof(string));
    
            var img5Parameter = img5 != null ?
                new ObjectParameter("img5", img5) :
                new ObjectParameter("img5", typeof(string));
    
            var img6Parameter = img6 != null ?
                new ObjectParameter("img6", img6) :
                new ObjectParameter("img6", typeof(string));
    
            var witness1Parameter = witness1 != null ?
                new ObjectParameter("Witness1", witness1) :
                new ObjectParameter("Witness1", typeof(string));
    
            var witness2Parameter = witness2 != null ?
                new ObjectParameter("Witness2", witness2) :
                new ObjectParameter("Witness2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_AllotmentLetterInfo", idParameter, nameParameter, fNameParameter, addressParameter, sizeParameter, dimParameter, areaParameter, img1Parameter, img2Parameter, img3Parameter, img4Parameter, img5Parameter, img6Parameter, witness1Parameter, witness2Parameter);
        }
    
        public virtual int Sp_Update_AllotmentLetterRequestStatus(Nullable<long> plotownid, Nullable<int> status)
        {
            var plotownidParameter = plotownid.HasValue ?
                new ObjectParameter("Plotownid", plotownid) :
                new ObjectParameter("Plotownid", typeof(long));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_AllotmentLetterRequestStatus", plotownidParameter, statusParameter);
        }
    
        public virtual int Sp_Update_AllPayments(Nullable<long> fileformid)
        {
            var fileformidParameter = fileformid.HasValue ?
                new ObjectParameter("fileformid", fileformid) :
                new ObjectParameter("fileformid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_AllPayments", fileformidParameter);
        }
    
        public virtual int Sp_Update_ALSign(Nullable<long> id, Nullable<bool> sin_un)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var sin_unParameter = sin_un.HasValue ?
                new ObjectParameter("sin_un", sin_un) :
                new ObjectParameter("sin_un", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_ALSign", idParameter, sin_unParameter);
        }
    
        public virtual int Sp_Update_Arrears_Amount(Nullable<long> id, Nullable<decimal> amount)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Arrears_Amount", idParameter, amountParameter);
        }
    
        public virtual int Sp_Update_Arrears_Description(Nullable<long> id, string remarks)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Arrears_Description", idParameter, remarksParameter);
        }
    
        public virtual int Sp_Update_ArrearsStatus(string status)
        {
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_ArrearsStatus", statusParameter);
        }
    
        public virtual int Sp_Update_ArrearsStatus_Parameter(string status, Nullable<long> id)
        {
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_ArrearsStatus_Parameter", statusParameter, idParameter);
        }
    
        public virtual int Sp_Update_AssignBallotPlot(Nullable<long> bpId, string fileNo, Nullable<System.DateTime> ballotedAt, Nullable<long> ownerId, string ownerName, Nullable<long> flId)
        {
            var bpIdParameter = bpId.HasValue ?
                new ObjectParameter("bpId", bpId) :
                new ObjectParameter("bpId", typeof(long));
    
            var fileNoParameter = fileNo != null ?
                new ObjectParameter("fileNo", fileNo) :
                new ObjectParameter("fileNo", typeof(string));
    
            var ballotedAtParameter = ballotedAt.HasValue ?
                new ObjectParameter("ballotedAt", ballotedAt) :
                new ObjectParameter("ballotedAt", typeof(System.DateTime));
    
            var ownerIdParameter = ownerId.HasValue ?
                new ObjectParameter("OwnerId", ownerId) :
                new ObjectParameter("OwnerId", typeof(long));
    
            var ownerNameParameter = ownerName != null ?
                new ObjectParameter("OwnerName", ownerName) :
                new ObjectParameter("OwnerName", typeof(string));
    
            var flIdParameter = flId.HasValue ?
                new ObjectParameter("flId", flId) :
                new ObjectParameter("flId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_AssignBallotPlot", bpIdParameter, fileNoParameter, ballotedAtParameter, ownerIdParameter, ownerNameParameter, flIdParameter);
        }
    
        public virtual int Sp_Update_Attendance_After_TimeAdjust(Nullable<bool> tp, Nullable<System.DateTime> val, Nullable<long> id)
        {
            var tpParameter = tp.HasValue ?
                new ObjectParameter("tp", tp) :
                new ObjectParameter("tp", typeof(bool));
    
            var valParameter = val.HasValue ?
                new ObjectParameter("val", val) :
                new ObjectParameter("val", typeof(System.DateTime));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Attendance_After_TimeAdjust", tpParameter, valParameter, idParameter);
        }
    
        public virtual int Sp_Update_Attendance_Eexemption(Nullable<long> uid, Nullable<System.DateTime> dt)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(long));
    
            var dtParameter = dt.HasValue ?
                new ObjectParameter("dt", dt) :
                new ObjectParameter("dt", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Attendance_Eexemption", uidParameter, dtParameter);
        }
    
        public virtual int Sp_Update_AttenExempt(Nullable<long> empId, string dets)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("empId", empId) :
                new ObjectParameter("empId", typeof(long));
    
            var detsParameter = dets != null ?
                new ObjectParameter("dets", dets) :
                new ObjectParameter("dets", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_AttenExempt", empIdParameter, detsParameter);
        }
    
        public virtual int SP_Update_bids(string mats, Nullable<long> usrId, string reqStat)
        {
            var matsParameter = mats != null ?
                new ObjectParameter("Mats", mats) :
                new ObjectParameter("Mats", typeof(string));
    
            var usrIdParameter = usrId.HasValue ?
                new ObjectParameter("usrId", usrId) :
                new ObjectParameter("usrId", typeof(long));
    
            var reqStatParameter = reqStat != null ?
                new ObjectParameter("reqStat", reqStat) :
                new ObjectParameter("reqStat", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Update_bids", matsParameter, usrIdParameter, reqStatParameter);
        }
    
        public virtual int SP_Update_BuildingVerificationToNull(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Update_BuildingVerificationToNull", idParameter);
        }
    
        public virtual int Sp_Update_CA_Head(Nullable<int> id, string head)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var headParameter = head != null ?
                new ObjectParameter("head", head) :
                new ObjectParameter("head", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_CA_Head", idParameter, headParameter);
        }
    
        public virtual int Sp_Update_CA_Head_OpeningBalance(Nullable<int> id, Nullable<decimal> amt)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var amtParameter = amt.HasValue ?
                new ObjectParameter("amt", amt) :
                new ObjectParameter("amt", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_CA_Head_OpeningBalance", idParameter, amtParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Sp_Update_CA_Hierarchy(Nullable<int> newid, Nullable<int> nodeid)
        {
            var newidParameter = newid.HasValue ?
                new ObjectParameter("newid", newid) :
                new ObjectParameter("newid", typeof(int));
    
            var nodeidParameter = nodeid.HasValue ?
                new ObjectParameter("nodeid", nodeid) :
                new ObjectParameter("nodeid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Sp_Update_CA_Hierarchy", newidParameter, nodeidParameter);
        }
    
        public virtual ObjectResult<Sp_Update_Cheque_BankDraft_PayOrder_Result> Sp_Update_Cheque_BankDraft_PayOrder(Nullable<long> id, string status, string bank, string acc_Number, string module, string type, Nullable<long> refId, Nullable<System.DateTime> cleardate, Nullable<long> modid, Nullable<System.DateTime> posteddate, string reason)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var bankParameter = bank != null ?
                new ObjectParameter("Bank", bank) :
                new ObjectParameter("Bank", typeof(string));
    
            var acc_NumberParameter = acc_Number != null ?
                new ObjectParameter("Acc_Number", acc_Number) :
                new ObjectParameter("Acc_Number", typeof(string));
    
            var moduleParameter = module != null ?
                new ObjectParameter("module", module) :
                new ObjectParameter("module", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var refIdParameter = refId.HasValue ?
                new ObjectParameter("refId", refId) :
                new ObjectParameter("refId", typeof(long));
    
            var cleardateParameter = cleardate.HasValue ?
                new ObjectParameter("cleardate", cleardate) :
                new ObjectParameter("cleardate", typeof(System.DateTime));
    
            var modidParameter = modid.HasValue ?
                new ObjectParameter("modid", modid) :
                new ObjectParameter("modid", typeof(long));
    
            var posteddateParameter = posteddate.HasValue ?
                new ObjectParameter("posteddate", posteddate) :
                new ObjectParameter("posteddate", typeof(System.DateTime));
    
            var reasonParameter = reason != null ?
                new ObjectParameter("reason", reason) :
                new ObjectParameter("reason", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Update_Cheque_BankDraft_PayOrder_Result>("Sp_Update_Cheque_BankDraft_PayOrder", idParameter, statusParameter, bankParameter, acc_NumberParameter, moduleParameter, typeParameter, refIdParameter, cleardateParameter, modidParameter, posteddateParameter, reasonParameter);
        }
    
        public virtual int Sp_Update_ChequePrcess(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_ChequePrcess", idParameter);
        }
    
        public virtual int Sp_Update_COLA_On_Employees(Nullable<int> per, Nullable<long> id)
        {
            var perParameter = per.HasValue ?
                new ObjectParameter("per", per) :
                new ObjectParameter("per", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_COLA_On_Employees", perParameter, idParameter);
        }
    
        public virtual int Sp_Update_Commercial_Installments_Status_Pndg(Nullable<long> com_Id)
        {
            var com_IdParameter = com_Id.HasValue ?
                new ObjectParameter("Com_Id", com_Id) :
                new ObjectParameter("Com_Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Commercial_Installments_Status_Pndg", com_IdParameter);
        }
    
        public virtual int Sp_Update_CommercialCancelation_Req(Nullable<long> id, Nullable<long> plotid, string remark, Nullable<bool> stat, string role, Nullable<long> userid)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var plotidParameter = plotid.HasValue ?
                new ObjectParameter("plotid", plotid) :
                new ObjectParameter("plotid", typeof(long));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("remark", remark) :
                new ObjectParameter("remark", typeof(string));
    
            var statParameter = stat.HasValue ?
                new ObjectParameter("stat", stat) :
                new ObjectParameter("stat", typeof(bool));
    
            var roleParameter = role != null ?
                new ObjectParameter("role", role) :
                new ObjectParameter("role", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_CommercialCancelation_Req", idParameter, plotidParameter, remarkParameter, statParameter, roleParameter, useridParameter);
        }
    
        public virtual int Sp_Update_CommercialDimension(Nullable<decimal> area, Nullable<int> dime, Nullable<long> id)
        {
            var areaParameter = area.HasValue ?
                new ObjectParameter("Area", area) :
                new ObjectParameter("Area", typeof(decimal));
    
            var dimeParameter = dime.HasValue ?
                new ObjectParameter("dime", dime) :
                new ObjectParameter("dime", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_CommercialDimension", areaParameter, dimeParameter, idParameter);
        }
    
        public virtual int Sp_Update_CommercialInstallmentPlan(Nullable<long> comid, Nullable<long> id)
        {
            var comidParameter = comid.HasValue ?
                new ObjectParameter("comid", comid) :
                new ObjectParameter("comid", typeof(long));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_CommercialInstallmentPlan", comidParameter, idParameter);
        }
    
        public virtual int Sp_Update_CommercialInstallments(Nullable<long> shop_Id, Nullable<decimal> total, Nullable<decimal> discount, Nullable<long> userid, string inst)
        {
            var shop_IdParameter = shop_Id.HasValue ?
                new ObjectParameter("Shop_Id", shop_Id) :
                new ObjectParameter("Shop_Id", typeof(long));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(decimal));
    
            var discountParameter = discount.HasValue ?
                new ObjectParameter("discount", discount) :
                new ObjectParameter("discount", typeof(decimal));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(long));
    
            var instParameter = inst != null ?
                new ObjectParameter("inst", inst) :
                new ObjectParameter("inst", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_CommercialInstallments", shop_IdParameter, totalParameter, discountParameter, useridParameter, instParameter);
        }
    
        public virtual ObjectResult<Sp_Update_CommercialOwnerData_Result> Sp_Update_CommercialOwnerData(string name, string father_Husband, string postal_Address, string residential_Address, string phone_Office, string residential, string mobile_1, string mobile_2, string email, string occupation, string nationality, string date_Of_Birth, string cNIC_NICOP, string nominee_Name, string nominee_Relation, string nominee_Address, string nominee_CNIC_NICOP, Nullable<long> comRom_Id, string city, Nullable<bool> delivery, Nullable<System.DateTime> datetime, Nullable<long> userid, Nullable<long> comOfId, string status)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var father_HusbandParameter = father_Husband != null ?
                new ObjectParameter("Father_Husband", father_Husband) :
                new ObjectParameter("Father_Husband", typeof(string));
    
            var postal_AddressParameter = postal_Address != null ?
                new ObjectParameter("Postal_Address", postal_Address) :
                new ObjectParameter("Postal_Address", typeof(string));
    
            var residential_AddressParameter = residential_Address != null ?
                new ObjectParameter("Residential_Address", residential_Address) :
                new ObjectParameter("Residential_Address", typeof(string));
    
            var phone_OfficeParameter = phone_Office != null ?
                new ObjectParameter("Phone_Office", phone_Office) :
                new ObjectParameter("Phone_Office", typeof(string));
    
            var residentialParameter = residential != null ?
                new ObjectParameter("Residential", residential) :
                new ObjectParameter("Residential", typeof(string));
    
            var mobile_1Parameter = mobile_1 != null ?
                new ObjectParameter("Mobile_1", mobile_1) :
                new ObjectParameter("Mobile_1", typeof(string));
    
            var mobile_2Parameter = mobile_2 != null ?
                new ObjectParameter("Mobile_2", mobile_2) :
                new ObjectParameter("Mobile_2", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var occupationParameter = occupation != null ?
                new ObjectParameter("Occupation", occupation) :
                new ObjectParameter("Occupation", typeof(string));
    
            var nationalityParameter = nationality != null ?
                new ObjectParameter("Nationality", nationality) :
                new ObjectParameter("Nationality", typeof(string));
    
            var date_Of_BirthParameter = date_Of_Birth != null ?
                new ObjectParameter("Date_Of_Birth", date_Of_Birth) :
                new ObjectParameter("Date_Of_Birth", typeof(string));
    
            var cNIC_NICOPParameter = cNIC_NICOP != null ?
                new ObjectParameter("CNIC_NICOP", cNIC_NICOP) :
                new ObjectParameter("CNIC_NICOP", typeof(string));
    
            var nominee_NameParameter = nominee_Name != null ?
                new ObjectParameter("Nominee_Name", nominee_Name) :
                new ObjectParameter("Nominee_Name", typeof(string));
    
            var nominee_RelationParameter = nominee_Relation != null ?
                new ObjectParameter("Nominee_Relation", nominee_Relation) :
                new ObjectParameter("Nominee_Relation", typeof(string));
    
            var nominee_AddressParameter = nominee_Address != null ?
                new ObjectParameter("Nominee_Address", nominee_Address) :
                new ObjectParameter("Nominee_Address", typeof(string));
    
            var nominee_CNIC_NICOPParameter = nominee_CNIC_NICOP != null ?
                new ObjectParameter("Nominee_CNIC_NICOP", nominee_CNIC_NICOP) :
                new ObjectParameter("Nominee_CNIC_NICOP", typeof(string));
    
            var comRom_IdParameter = comRom_Id.HasValue ?
                new ObjectParameter("ComRom_Id", comRom_Id) :
                new ObjectParameter("ComRom_Id", typeof(long));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var deliveryParameter = delivery.HasValue ?
                new ObjectParameter("Delivery", delivery) :
                new ObjectParameter("Delivery", typeof(bool));
    
            var datetimeParameter = datetime.HasValue ?
                new ObjectParameter("datetime", datetime) :
                new ObjectParameter("datetime", typeof(System.DateTime));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var comOfIdParameter = comOfId.HasValue ?
                new ObjectParameter("ComOfId", comOfId) :
                new ObjectParameter("ComOfId", typeof(long));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Update_CommercialOwnerData_Result>("Sp_Update_CommercialOwnerData", nameParameter, father_HusbandParameter, postal_AddressParameter, residential_AddressParameter, phone_OfficeParameter, residentialParameter, mobile_1Parameter, mobile_2Parameter, emailParameter, occupationParameter, nationalityParameter, date_Of_BirthParameter, cNIC_NICOPParameter, nominee_NameParameter, nominee_RelationParameter, nominee_AddressParameter, nominee_CNIC_NICOPParameter, comRom_IdParameter, cityParameter, deliveryParameter, datetimeParameter, useridParameter, comOfIdParameter, statusParameter);
        }
    
        public virtual int Sp_Update_CommercialPossessionDate(Nullable<long> posId)
        {
            var posIdParameter = posId.HasValue ?
                new ObjectParameter("posId", posId) :
                new ObjectParameter("posId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_CommercialPossessionDate", posIdParameter);
        }
    
        public virtual int Sp_Update_CommercialPossessionRequest(Nullable<long> com_rom)
        {
            var com_romParameter = com_rom.HasValue ?
                new ObjectParameter("com_rom", com_rom) :
                new ObjectParameter("com_rom", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_CommercialPossessionRequest", com_romParameter);
        }
    
        public virtual int Sp_Update_CommercialPossessLtrRqstStatus(Nullable<long> ownid, Nullable<int> status, string matAltdPlt)
        {
            var ownidParameter = ownid.HasValue ?
                new ObjectParameter("ownid", ownid) :
                new ObjectParameter("ownid", typeof(long));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var matAltdPltParameter = matAltdPlt != null ?
                new ObjectParameter("matAltdPlt", matAltdPlt) :
                new ObjectParameter("matAltdPlt", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_CommercialPossessLtrRqstStatus", ownidParameter, statusParameter, matAltdPltParameter);
        }
    
        public virtual int Sp_Update_CommercialRate(Nullable<long> fileid, Nullable<decimal> rate, Nullable<decimal> total, Nullable<decimal> grandtotal)
        {
            var fileidParameter = fileid.HasValue ?
                new ObjectParameter("fileid", fileid) :
                new ObjectParameter("fileid", typeof(long));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("rate", rate) :
                new ObjectParameter("rate", typeof(decimal));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("total", total) :
                new ObjectParameter("total", typeof(decimal));
    
            var grandtotalParameter = grandtotal.HasValue ?
                new ObjectParameter("grandtotal", grandtotal) :
                new ObjectParameter("grandtotal", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_CommercialRate", fileidParameter, rateParameter, totalParameter, grandtotalParameter);
        }
    
        public virtual int Sp_Update_CommercialReceipts(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_CommercialReceipts", idParameter);
        }
    
        public virtual int Sp_Update_CommercialStatus(string status, Nullable<long> id)
        {
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_CommercialStatus", statusParameter, idParameter);
        }
    
        public virtual int Sp_Update_CommercialVerifiedforAllotment(Nullable<long> comId, Nullable<long> comownid)
        {
            var comIdParameter = comId.HasValue ?
                new ObjectParameter("ComId", comId) :
                new ObjectParameter("ComId", typeof(long));
    
            var comownidParameter = comownid.HasValue ?
                new ObjectParameter("Comownid", comownid) :
                new ObjectParameter("Comownid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_CommercialVerifiedforAllotment", comIdParameter, comownidParameter);
        }
    
        public virtual int Sp_Update_CommerRoomPositions(Nullable<long> id, Nullable<decimal> n, Nullable<decimal> s, Nullable<decimal> e, Nullable<decimal> w, Nullable<decimal> nE, Nullable<decimal> nW, Nullable<decimal> sW, Nullable<decimal> sE, string front)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var nParameter = n.HasValue ?
                new ObjectParameter("N", n) :
                new ObjectParameter("N", typeof(decimal));
    
            var sParameter = s.HasValue ?
                new ObjectParameter("S", s) :
                new ObjectParameter("S", typeof(decimal));
    
            var eParameter = e.HasValue ?
                new ObjectParameter("E", e) :
                new ObjectParameter("E", typeof(decimal));
    
            var wParameter = w.HasValue ?
                new ObjectParameter("W", w) :
                new ObjectParameter("W", typeof(decimal));
    
            var nEParameter = nE.HasValue ?
                new ObjectParameter("NE", nE) :
                new ObjectParameter("NE", typeof(decimal));
    
            var nWParameter = nW.HasValue ?
                new ObjectParameter("NW", nW) :
                new ObjectParameter("NW", typeof(decimal));
    
            var sWParameter = sW.HasValue ?
                new ObjectParameter("SW", sW) :
                new ObjectParameter("SW", typeof(decimal));
    
            var sEParameter = sE.HasValue ?
                new ObjectParameter("SE", sE) :
                new ObjectParameter("SE", typeof(decimal));
    
            var frontParameter = front != null ?
                new ObjectParameter("front", front) :
                new ObjectParameter("front", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_CommerRoomPositions", idParameter, nParameter, sParameter, eParameter, wParameter, nEParameter, nWParameter, sWParameter, sEParameter, frontParameter);
        }
    
        public virtual int Sp_Update_CurrentOwner(Nullable<long> plotid)
        {
            var plotidParameter = plotid.HasValue ?
                new ObjectParameter("plotid", plotid) :
                new ObjectParameter("plotid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_CurrentOwner", plotidParameter);
        }
    
        public virtual int Sp_Update_CurrentOwner_File(Nullable<long> fileid)
        {
            var fileidParameter = fileid.HasValue ?
                new ObjectParameter("fileid", fileid) :
                new ObjectParameter("fileid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_CurrentOwner_File", fileidParameter);
        }
    
        public virtual int Sp_Update_CustomerFileRequest(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_CustomerFileRequest", idParameter);
        }
    
        public virtual int Sp_Update_CustomerOtp(string otp, string email, string phone)
        {
            var otpParameter = otp != null ?
                new ObjectParameter("otp", otp) :
                new ObjectParameter("otp", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_CustomerOtp", otpParameter, emailParameter, phoneParameter);
        }
    
        public virtual int Sp_Update_CustomerPassword(string password, string email, string phone)
        {
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_CustomerPassword", passwordParameter, emailParameter, phoneParameter);
        }
    
        public virtual int Sp_Update_Deal_File(Nullable<long> id, Nullable<int> remaing)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var remaingParameter = remaing.HasValue ?
                new ObjectParameter("remaing", remaing) :
                new ObjectParameter("remaing", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Deal_File", idParameter, remaingParameter);
        }
    
        public virtual int Sp_Update_Deal_Receipt(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Deal_Receipt", idParameter);
        }
    
        public virtual int Sp_Update_DealerCommession(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_DealerCommession", idParameter);
        }
    
        public virtual int Sp_Update_Dealers(string name, string fnam, string cnic, string mob1, string mob2, string addre, Nullable<long> id, string img, string city, Nullable<System.DateTime> datebirth)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var fnamParameter = fnam != null ?
                new ObjectParameter("fnam", fnam) :
                new ObjectParameter("fnam", typeof(string));
    
            var cnicParameter = cnic != null ?
                new ObjectParameter("cnic", cnic) :
                new ObjectParameter("cnic", typeof(string));
    
            var mob1Parameter = mob1 != null ?
                new ObjectParameter("mob1", mob1) :
                new ObjectParameter("mob1", typeof(string));
    
            var mob2Parameter = mob2 != null ?
                new ObjectParameter("mob2", mob2) :
                new ObjectParameter("mob2", typeof(string));
    
            var addreParameter = addre != null ?
                new ObjectParameter("addre", addre) :
                new ObjectParameter("addre", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var imgParameter = img != null ?
                new ObjectParameter("img", img) :
                new ObjectParameter("img", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var datebirthParameter = datebirth.HasValue ?
                new ObjectParameter("datebirth", datebirth) :
                new ObjectParameter("datebirth", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Dealers", nameParameter, fnamParameter, cnicParameter, mob1Parameter, mob2Parameter, addreParameter, idParameter, imgParameter, cityParameter, datebirthParameter);
        }
    
        public virtual int Sp_Update_Dealers_Deal(Nullable<long> id, Nullable<decimal> amount, Nullable<decimal> advance, Nullable<decimal> rebate)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            var advanceParameter = advance.HasValue ?
                new ObjectParameter("advance", advance) :
                new ObjectParameter("advance", typeof(decimal));
    
            var rebateParameter = rebate.HasValue ?
                new ObjectParameter("rebate", rebate) :
                new ObjectParameter("rebate", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Dealers_Deal", idParameter, amountParameter, advanceParameter, rebateParameter);
        }
    
        public virtual int Sp_Update_Dealership(Nullable<long> id, string name, Nullable<System.DateTime> date, string status)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Dealership", idParameter, nameParameter, dateParameter, statusParameter);
        }
    
        public virtual int Sp_Update_DealParty_Information(Nullable<long> id, string name, string mob, string add, Nullable<decimal> off_rate, Nullable<decimal> rate, Nullable<decimal> com, string status, string com_type)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var mobParameter = mob != null ?
                new ObjectParameter("mob", mob) :
                new ObjectParameter("mob", typeof(string));
    
            var addParameter = add != null ?
                new ObjectParameter("add", add) :
                new ObjectParameter("add", typeof(string));
    
            var off_rateParameter = off_rate.HasValue ?
                new ObjectParameter("off_rate", off_rate) :
                new ObjectParameter("off_rate", typeof(decimal));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("rate", rate) :
                new ObjectParameter("rate", typeof(decimal));
    
            var comParameter = com.HasValue ?
                new ObjectParameter("com", com) :
                new ObjectParameter("com", typeof(decimal));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var com_typeParameter = com_type != null ?
                new ObjectParameter("com_type", com_type) :
                new ObjectParameter("com_type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_DealParty_Information", idParameter, nameParameter, mobParameter, addParameter, off_rateParameter, rateParameter, comParameter, statusParameter, com_typeParameter);
        }
    
        public virtual int Sp_Update_Deduction_Other(Nullable<decimal> dedother, Nullable<long> id)
        {
            var dedotherParameter = dedother.HasValue ?
                new ObjectParameter("dedother", dedother) :
                new ObjectParameter("dedother", typeof(decimal));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Deduction_Other", dedotherParameter, idParameter);
        }
    
        public virtual int Sp_Update_DemandReq_Approval(Nullable<long> ap, Nullable<long> grop)
        {
            var apParameter = ap.HasValue ?
                new ObjectParameter("ap", ap) :
                new ObjectParameter("ap", typeof(long));
    
            var gropParameter = grop.HasValue ?
                new ObjectParameter("Grop", grop) :
                new ObjectParameter("Grop", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_DemandReq_Approval", apParameter, gropParameter);
        }
    
        public virtual int Sp_Update_DemandReq_Completion(Nullable<long> grpId)
        {
            var grpIdParameter = grpId.HasValue ?
                new ObjectParameter("grpId", grpId) :
                new ObjectParameter("grpId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_DemandReq_Completion", grpIdParameter);
        }
    
        public virtual int Sp_Update_DevelopmentCharges(Nullable<long> id, Nullable<bool> dev, string mod)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var devParameter = dev.HasValue ?
                new ObjectParameter("dev", dev) :
                new ObjectParameter("dev", typeof(bool));
    
            var modParameter = mod != null ?
                new ObjectParameter("mod", mod) :
                new ObjectParameter("mod", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_DevelopmentCharges", idParameter, devParameter, modParameter);
        }
    
        public virtual int Sp_Update_Draft(Nullable<long> group_Tag, Nullable<long> old_gptg, Nullable<long> line, string msg_Text, string msg_Data, Nullable<long> added_by, Nullable<System.DateTime> dateTime)
        {
            var group_TagParameter = group_Tag.HasValue ?
                new ObjectParameter("Group_Tag", group_Tag) :
                new ObjectParameter("Group_Tag", typeof(long));
    
            var old_gptgParameter = old_gptg.HasValue ?
                new ObjectParameter("old_gptg", old_gptg) :
                new ObjectParameter("old_gptg", typeof(long));
    
            var lineParameter = line.HasValue ?
                new ObjectParameter("Line", line) :
                new ObjectParameter("Line", typeof(long));
    
            var msg_TextParameter = msg_Text != null ?
                new ObjectParameter("Msg_Text", msg_Text) :
                new ObjectParameter("Msg_Text", typeof(string));
    
            var msg_DataParameter = msg_Data != null ?
                new ObjectParameter("Msg_Data", msg_Data) :
                new ObjectParameter("Msg_Data", typeof(string));
    
            var added_byParameter = added_by.HasValue ?
                new ObjectParameter("Added_by", added_by) :
                new ObjectParameter("Added_by", typeof(long));
    
            var dateTimeParameter = dateTime.HasValue ?
                new ObjectParameter("DateTime", dateTime) :
                new ObjectParameter("DateTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Draft", group_TagParameter, old_gptgParameter, lineParameter, msg_TextParameter, msg_DataParameter, added_byParameter, dateTimeParameter);
        }
    
        public virtual int Sp_Update_Duplicate_Check(Nullable<long> id, string mod, string type)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var modParameter = mod != null ?
                new ObjectParameter("mod", mod) :
                new ObjectParameter("mod", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Duplicate_Check", idParameter, modParameter, typeParameter);
        }
    
        public virtual int Sp_Update_DuplicateAllotmentLetterCheck(Nullable<long> owner_id)
        {
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_DuplicateAllotmentLetterCheck", owner_idParameter);
        }
    
        public virtual int Sp_Update_ElectMeterReading(Nullable<long> id, Nullable<long> reading)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var readingParameter = reading.HasValue ?
                new ObjectParameter("Reading", reading) :
                new ObjectParameter("Reading", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_ElectMeterReading", idParameter, readingParameter);
        }
    
        public virtual int Sp_Update_ElectricityBill(Nullable<long> id, Nullable<decimal> amount, Nullable<decimal> arrears, string remarks, Nullable<int> fine_Percentage, Nullable<decimal> fine_Amount, Nullable<decimal> due_Date_Amount, Nullable<decimal> net_Total, Nullable<int> cur, Nullable<int> pre, Nullable<int> uni)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var arrearsParameter = arrears.HasValue ?
                new ObjectParameter("arrears", arrears) :
                new ObjectParameter("arrears", typeof(decimal));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            var fine_PercentageParameter = fine_Percentage.HasValue ?
                new ObjectParameter("Fine_Percentage", fine_Percentage) :
                new ObjectParameter("Fine_Percentage", typeof(int));
    
            var fine_AmountParameter = fine_Amount.HasValue ?
                new ObjectParameter("Fine_Amount", fine_Amount) :
                new ObjectParameter("Fine_Amount", typeof(decimal));
    
            var due_Date_AmountParameter = due_Date_Amount.HasValue ?
                new ObjectParameter("Due_Date_Amount", due_Date_Amount) :
                new ObjectParameter("Due_Date_Amount", typeof(decimal));
    
            var net_TotalParameter = net_Total.HasValue ?
                new ObjectParameter("Net_Total", net_Total) :
                new ObjectParameter("Net_Total", typeof(decimal));
    
            var curParameter = cur.HasValue ?
                new ObjectParameter("cur", cur) :
                new ObjectParameter("cur", typeof(int));
    
            var preParameter = pre.HasValue ?
                new ObjectParameter("pre", pre) :
                new ObjectParameter("pre", typeof(int));
    
            var uniParameter = uni.HasValue ?
                new ObjectParameter("uni", uni) :
                new ObjectParameter("uni", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_ElectricityBill", idParameter, amountParameter, arrearsParameter, remarksParameter, fine_PercentageParameter, fine_AmountParameter, due_Date_AmountParameter, net_TotalParameter, curParameter, preParameter, uniParameter);
        }
    
        public virtual int Sp_Update_ElectricUnitRate(Nullable<int> id, Nullable<int> start, Nullable<int> end, Nullable<decimal> rate)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("end", end) :
                new ObjectParameter("end", typeof(int));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("rate", rate) :
                new ObjectParameter("rate", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_ElectricUnitRate", idParameter, startParameter, endParameter, rateParameter);
        }
    
        public virtual int Sp_Update_Employee_Acheivements(string description, Nullable<System.DateTime> date, Nullable<long> id)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Employee_Acheivements", descriptionParameter, dateParameter, idParameter);
        }
    
        public virtual int Sp_Update_Employee_Award(string description, Nullable<System.DateTime> date, Nullable<long> id)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Employee_Award", descriptionParameter, dateParameter, idParameter);
        }
    
        public virtual int Sp_Update_Employee_Bank_Account(Nullable<long> empId)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Employee_Bank_Account", empIdParameter);
        }
    
        public virtual int Sp_Update_Employee_BankDetails(Nullable<long> empId, string bankName, Nullable<int> bankId)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("empId", empId) :
                new ObjectParameter("empId", typeof(long));
    
            var bankNameParameter = bankName != null ?
                new ObjectParameter("bankName", bankName) :
                new ObjectParameter("bankName", typeof(string));
    
            var bankIdParameter = bankId.HasValue ?
                new ObjectParameter("bankId", bankId) :
                new ObjectParameter("bankId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Employee_BankDetails", empIdParameter, bankNameParameter, bankIdParameter);
        }
    
        public virtual int Sp_Update_Employee_BasicSalary_COLA(Nullable<long> id, Nullable<decimal> amt)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var amtParameter = amt.HasValue ?
                new ObjectParameter("amt", amt) :
                new ObjectParameter("amt", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Employee_BasicSalary_COLA", idParameter, amtParameter);
        }
    
        public virtual int Sp_Update_Employee_Reward(string description, Nullable<System.DateTime> date, Nullable<long> id)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Employee_Reward", descriptionParameter, dateParameter, idParameter);
        }
    
        public virtual int Sp_Update_Employee_Training(string description, Nullable<System.DateTime> date, Nullable<long> id)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Employee_Training", descriptionParameter, dateParameter, idParameter);
        }
    
        public virtual int Sp_Update_Employee_Wages(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Employee_Wages", idParameter);
        }
    
        public virtual int Sp_Update_EmployeeCode(Nullable<long> id, string code)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_EmployeeCode", idParameter, codeParameter);
        }
    
        public virtual int Sp_Update_EmployeeData(string name, string father_Name, string cNIC, Nullable<System.DateTime> date_Of_Birth, string email, string address, string city, string mobile_1, string mobile_2, string company_Email, string marital_Status, string emergency_Contact, string relationship, string blood_Group, string image, string religion, Nullable<long> id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var father_NameParameter = father_Name != null ?
                new ObjectParameter("Father_Name", father_Name) :
                new ObjectParameter("Father_Name", typeof(string));
    
            var cNICParameter = cNIC != null ?
                new ObjectParameter("CNIC", cNIC) :
                new ObjectParameter("CNIC", typeof(string));
    
            var date_Of_BirthParameter = date_Of_Birth.HasValue ?
                new ObjectParameter("Date_Of_Birth", date_Of_Birth) :
                new ObjectParameter("Date_Of_Birth", typeof(System.DateTime));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var mobile_1Parameter = mobile_1 != null ?
                new ObjectParameter("Mobile_1", mobile_1) :
                new ObjectParameter("Mobile_1", typeof(string));
    
            var mobile_2Parameter = mobile_2 != null ?
                new ObjectParameter("Mobile_2", mobile_2) :
                new ObjectParameter("Mobile_2", typeof(string));
    
            var company_EmailParameter = company_Email != null ?
                new ObjectParameter("Company_Email", company_Email) :
                new ObjectParameter("Company_Email", typeof(string));
    
            var marital_StatusParameter = marital_Status != null ?
                new ObjectParameter("Marital_Status", marital_Status) :
                new ObjectParameter("Marital_Status", typeof(string));
    
            var emergency_ContactParameter = emergency_Contact != null ?
                new ObjectParameter("Emergency_Contact", emergency_Contact) :
                new ObjectParameter("Emergency_Contact", typeof(string));
    
            var relationshipParameter = relationship != null ?
                new ObjectParameter("Relationship", relationship) :
                new ObjectParameter("Relationship", typeof(string));
    
            var blood_GroupParameter = blood_Group != null ?
                new ObjectParameter("Blood_Group", blood_Group) :
                new ObjectParameter("Blood_Group", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var religionParameter = religion != null ?
                new ObjectParameter("Religion", religion) :
                new ObjectParameter("Religion", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_EmployeeData", nameParameter, father_NameParameter, cNICParameter, date_Of_BirthParameter, emailParameter, addressParameter, cityParameter, mobile_1Parameter, mobile_2Parameter, company_EmailParameter, marital_StatusParameter, emergency_ContactParameter, relationshipParameter, blood_GroupParameter, imageParameter, religionParameter, idParameter);
        }
    
        public virtual int Sp_Update_EmployeeLeave(Nullable<long> empid, string lT, Nullable<int> spent)
        {
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(long));
    
            var lTParameter = lT != null ?
                new ObjectParameter("LT", lT) :
                new ObjectParameter("LT", typeof(string));
    
            var spentParameter = spent.HasValue ?
                new ObjectParameter("spent", spent) :
                new ObjectParameter("spent", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_EmployeeLeave", empidParameter, lTParameter, spentParameter);
        }
    
        public virtual int Sp_update_EmployeeSalary(Nullable<decimal> bS, Nullable<long> emp_id)
        {
            var bSParameter = bS.HasValue ?
                new ObjectParameter("BS", bS) :
                new ObjectParameter("BS", typeof(decimal));
    
            var emp_idParameter = emp_id.HasValue ?
                new ObjectParameter("emp_id", emp_id) :
                new ObjectParameter("emp_id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_update_EmployeeSalary", bSParameter, emp_idParameter);
        }
    
        public virtual int Sp_Update_EmployeeUser(Nullable<long> userid, Nullable<long> empid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_EmployeeUser", useridParameter, empidParameter);
        }
    
        public virtual int Sp_Update_Employment_Data(Nullable<System.DateTime> date_Of_Joining, string jobDescription, Nullable<long> reporting_To, Nullable<long> reporting_To_2, Nullable<decimal> basic_Salary, Nullable<decimal> stipend, string status, Nullable<long> id, Nullable<int> active, string otherDets)
        {
            var date_Of_JoiningParameter = date_Of_Joining.HasValue ?
                new ObjectParameter("Date_Of_Joining", date_Of_Joining) :
                new ObjectParameter("Date_Of_Joining", typeof(System.DateTime));
    
            var jobDescriptionParameter = jobDescription != null ?
                new ObjectParameter("JobDescription", jobDescription) :
                new ObjectParameter("JobDescription", typeof(string));
    
            var reporting_ToParameter = reporting_To.HasValue ?
                new ObjectParameter("Reporting_To", reporting_To) :
                new ObjectParameter("Reporting_To", typeof(long));
    
            var reporting_To_2Parameter = reporting_To_2.HasValue ?
                new ObjectParameter("Reporting_To_2", reporting_To_2) :
                new ObjectParameter("Reporting_To_2", typeof(long));
    
            var basic_SalaryParameter = basic_Salary.HasValue ?
                new ObjectParameter("Basic_Salary", basic_Salary) :
                new ObjectParameter("Basic_Salary", typeof(decimal));
    
            var stipendParameter = stipend.HasValue ?
                new ObjectParameter("Stipend", stipend) :
                new ObjectParameter("Stipend", typeof(decimal));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("active", active) :
                new ObjectParameter("active", typeof(int));
    
            var otherDetsParameter = otherDets != null ?
                new ObjectParameter("otherDets", otherDets) :
                new ObjectParameter("otherDets", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Employment_Data", date_Of_JoiningParameter, jobDescriptionParameter, reporting_ToParameter, reporting_To_2Parameter, basic_SalaryParameter, stipendParameter, statusParameter, idParameter, activeParameter, otherDetsParameter);
        }
    
        public virtual int Sp_Update_Extra_Fuel_Salary(Nullable<long> id, Nullable<int> extraFuel, Nullable<decimal> extraFuelCharges)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var extraFuelParameter = extraFuel.HasValue ?
                new ObjectParameter("ExtraFuel", extraFuel) :
                new ObjectParameter("ExtraFuel", typeof(int));
    
            var extraFuelChargesParameter = extraFuelCharges.HasValue ?
                new ObjectParameter("ExtraFuelCharges", extraFuelCharges) :
                new ObjectParameter("ExtraFuelCharges", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Extra_Fuel_Salary", idParameter, extraFuelParameter, extraFuelChargesParameter);
        }
    
        public virtual int Sp_Update_Fee_Status(Nullable<long> userdi, Nullable<long> id)
        {
            var userdiParameter = userdi.HasValue ?
                new ObjectParameter("userdi", userdi) :
                new ObjectParameter("userdi", typeof(long));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Fee_Status", userdiParameter, idParameter);
        }
    
        public virtual int Sp_Update_File_Print_Flag(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_File_Print_Flag", idParameter);
        }
    
        public virtual int Sp_Update_FileCancelation_Req(Nullable<long> id, Nullable<long> fileid, string filenum, string remark, Nullable<bool> stat, string role, Nullable<long> userid)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var fileidParameter = fileid.HasValue ?
                new ObjectParameter("fileid", fileid) :
                new ObjectParameter("fileid", typeof(long));
    
            var filenumParameter = filenum != null ?
                new ObjectParameter("filenum", filenum) :
                new ObjectParameter("filenum", typeof(string));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("remark", remark) :
                new ObjectParameter("remark", typeof(string));
    
            var statParameter = stat.HasValue ?
                new ObjectParameter("stat", stat) :
                new ObjectParameter("stat", typeof(bool));
    
            var roleParameter = role != null ?
                new ObjectParameter("role", role) :
                new ObjectParameter("role", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_FileCancelation_Req", idParameter, fileidParameter, filenumParameter, remarkParameter, statParameter, roleParameter, useridParameter);
        }
    
        public virtual int Sp_Update_FileDelivery(Nullable<long> fileid)
        {
            var fileidParameter = fileid.HasValue ?
                new ObjectParameter("fileid", fileid) :
                new ObjectParameter("fileid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_FileDelivery", fileidParameter);
        }
    
        public virtual int Sp_Update_FileForm_dealerId(Nullable<long> id, Nullable<long> delerId, string type, string dealerName)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var delerIdParameter = delerId.HasValue ?
                new ObjectParameter("DelerId", delerId) :
                new ObjectParameter("DelerId", typeof(long));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var dealerNameParameter = dealerName != null ?
                new ObjectParameter("DealerName", dealerName) :
                new ObjectParameter("DealerName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_FileForm_dealerId", idParameter, delerIdParameter, typeParameter, dealerNameParameter);
        }
    
        public virtual int Sp_Update_FileForm_QR(Nullable<long> qRCode, Nullable<long> fileId)
        {
            var qRCodeParameter = qRCode.HasValue ?
                new ObjectParameter("QRCode", qRCode) :
                new ObjectParameter("QRCode", typeof(long));
    
            var fileIdParameter = fileId.HasValue ?
                new ObjectParameter("FileId", fileId) :
                new ObjectParameter("FileId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_FileForm_QR", qRCodeParameter, fileIdParameter);
        }
    
        public virtual int Sp_Update_FileGroup(Nullable<long> id, Nullable<long> grp)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var grpParameter = grp.HasValue ?
                new ObjectParameter("grp", grp) :
                new ObjectParameter("grp", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_FileGroup", idParameter, grpParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Sp_Update_FileImages(Nullable<long> imageId, Nullable<long> fileid)
        {
            var imageIdParameter = imageId.HasValue ?
                new ObjectParameter("imageId", imageId) :
                new ObjectParameter("imageId", typeof(long));
    
            var fileidParameter = fileid.HasValue ?
                new ObjectParameter("fileid", fileid) :
                new ObjectParameter("fileid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Sp_Update_FileImages", imageIdParameter, fileidParameter);
        }
    
        public virtual int Sp_Update_FileInstallment_Parameter(Nullable<decimal> amount, Nullable<System.DateTime> due_date, Nullable<long> id)
        {
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            var due_dateParameter = due_date.HasValue ?
                new ObjectParameter("due_date", due_date) :
                new ObjectParameter("due_date", typeof(System.DateTime));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_FileInstallment_Parameter", amountParameter, due_dateParameter, idParameter);
        }
    
        public virtual int Sp_Update_FileInstallment_Plan(Nullable<long> fileId, string inst)
        {
            var fileIdParameter = fileId.HasValue ?
                new ObjectParameter("FileId", fileId) :
                new ObjectParameter("FileId", typeof(long));
    
            var instParameter = inst != null ?
                new ObjectParameter("inst", inst) :
                new ObjectParameter("inst", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_FileInstallment_Plan", fileIdParameter, instParameter);
        }
    
        public virtual int Sp_Update_FileOwnerData(string name, string father_Husband, string postal_Address, string residential_Address, string city, string date_Of_Birth, string cNIC_NICOP, string nationality, string email, string phone_Office, string residential, string mobile_1, string mobile_2, string nominee_Name, string nominee_CNIC_NICOP, string nominee_Relation, string nominee_Address, string occupation, Nullable<System.DateTime> owner, Nullable<long> fileid, string ownership_Stat, Nullable<long> ownId)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var father_HusbandParameter = father_Husband != null ?
                new ObjectParameter("Father_Husband", father_Husband) :
                new ObjectParameter("Father_Husband", typeof(string));
    
            var postal_AddressParameter = postal_Address != null ?
                new ObjectParameter("Postal_Address", postal_Address) :
                new ObjectParameter("Postal_Address", typeof(string));
    
            var residential_AddressParameter = residential_Address != null ?
                new ObjectParameter("Residential_Address", residential_Address) :
                new ObjectParameter("Residential_Address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var date_Of_BirthParameter = date_Of_Birth != null ?
                new ObjectParameter("Date_Of_Birth", date_Of_Birth) :
                new ObjectParameter("Date_Of_Birth", typeof(string));
    
            var cNIC_NICOPParameter = cNIC_NICOP != null ?
                new ObjectParameter("CNIC_NICOP", cNIC_NICOP) :
                new ObjectParameter("CNIC_NICOP", typeof(string));
    
            var nationalityParameter = nationality != null ?
                new ObjectParameter("Nationality", nationality) :
                new ObjectParameter("Nationality", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phone_OfficeParameter = phone_Office != null ?
                new ObjectParameter("Phone_Office", phone_Office) :
                new ObjectParameter("Phone_Office", typeof(string));
    
            var residentialParameter = residential != null ?
                new ObjectParameter("Residential", residential) :
                new ObjectParameter("Residential", typeof(string));
    
            var mobile_1Parameter = mobile_1 != null ?
                new ObjectParameter("Mobile_1", mobile_1) :
                new ObjectParameter("Mobile_1", typeof(string));
    
            var mobile_2Parameter = mobile_2 != null ?
                new ObjectParameter("Mobile_2", mobile_2) :
                new ObjectParameter("Mobile_2", typeof(string));
    
            var nominee_NameParameter = nominee_Name != null ?
                new ObjectParameter("Nominee_Name", nominee_Name) :
                new ObjectParameter("Nominee_Name", typeof(string));
    
            var nominee_CNIC_NICOPParameter = nominee_CNIC_NICOP != null ?
                new ObjectParameter("Nominee_CNIC_NICOP", nominee_CNIC_NICOP) :
                new ObjectParameter("Nominee_CNIC_NICOP", typeof(string));
    
            var nominee_RelationParameter = nominee_Relation != null ?
                new ObjectParameter("Nominee_Relation", nominee_Relation) :
                new ObjectParameter("Nominee_Relation", typeof(string));
    
            var nominee_AddressParameter = nominee_Address != null ?
                new ObjectParameter("Nominee_Address", nominee_Address) :
                new ObjectParameter("Nominee_Address", typeof(string));
    
            var occupationParameter = occupation != null ?
                new ObjectParameter("Occupation", occupation) :
                new ObjectParameter("Occupation", typeof(string));
    
            var ownerParameter = owner.HasValue ?
                new ObjectParameter("owner", owner) :
                new ObjectParameter("owner", typeof(System.DateTime));
    
            var fileidParameter = fileid.HasValue ?
                new ObjectParameter("fileid", fileid) :
                new ObjectParameter("fileid", typeof(long));
    
            var ownership_StatParameter = ownership_Stat != null ?
                new ObjectParameter("Ownership_Stat", ownership_Stat) :
                new ObjectParameter("Ownership_Stat", typeof(string));
    
            var ownIdParameter = ownId.HasValue ?
                new ObjectParameter("ownId", ownId) :
                new ObjectParameter("ownId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_FileOwnerData", nameParameter, father_HusbandParameter, postal_AddressParameter, residential_AddressParameter, cityParameter, date_Of_BirthParameter, cNIC_NICOPParameter, nationalityParameter, emailParameter, phone_OfficeParameter, residentialParameter, mobile_1Parameter, mobile_2Parameter, nominee_NameParameter, nominee_CNIC_NICOPParameter, nominee_RelationParameter, nominee_AddressParameter, occupationParameter, ownerParameter, fileidParameter, ownership_StatParameter, ownIdParameter);
        }
    
        public virtual int Sp_Update_FileOwnershipStatus(Nullable<long> fileid, string status)
        {
            var fileidParameter = fileid.HasValue ?
                new ObjectParameter("fileid", fileid) :
                new ObjectParameter("fileid", typeof(long));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_FileOwnershipStatus", fileidParameter, statusParameter);
        }
    
        public virtual int Sp_Update_FileOwnerStatus(Nullable<long> id, Nullable<long> ownerid, Nullable<long> status, string ownstatus)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var owneridParameter = ownerid.HasValue ?
                new ObjectParameter("ownerid", ownerid) :
                new ObjectParameter("ownerid", typeof(long));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(long));
    
            var ownstatusParameter = ownstatus != null ?
                new ObjectParameter("ownstatus", ownstatus) :
                new ObjectParameter("ownstatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_FileOwnerStatus", idParameter, owneridParameter, statusParameter, ownstatusParameter);
        }
    
        public virtual int Sp_Update_FilePlotnmbr_Pending_Reciept(string name, string father, string mobile, string block, string size, string filetype, string type, Nullable<long> id, string number, string rcp_Id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var fatherParameter = father != null ?
                new ObjectParameter("father", father) :
                new ObjectParameter("father", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var blockParameter = block != null ?
                new ObjectParameter("block", block) :
                new ObjectParameter("block", typeof(string));
    
            var sizeParameter = size != null ?
                new ObjectParameter("size", size) :
                new ObjectParameter("size", typeof(string));
    
            var filetypeParameter = filetype != null ?
                new ObjectParameter("filetype", filetype) :
                new ObjectParameter("filetype", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var numberParameter = number != null ?
                new ObjectParameter("number", number) :
                new ObjectParameter("number", typeof(string));
    
            var rcp_IdParameter = rcp_Id != null ?
                new ObjectParameter("rcp_Id", rcp_Id) :
                new ObjectParameter("rcp_Id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_FilePlotnmbr_Pending_Reciept", nameParameter, fatherParameter, mobileParameter, blockParameter, sizeParameter, filetypeParameter, typeParameter, idParameter, numberParameter, rcp_IdParameter);
        }
    
        public virtual int Sp_Update_FileRate(Nullable<long> fileid, Nullable<decimal> rate, Nullable<decimal> total, Nullable<decimal> grandtotal)
        {
            var fileidParameter = fileid.HasValue ?
                new ObjectParameter("fileid", fileid) :
                new ObjectParameter("fileid", typeof(long));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("rate", rate) :
                new ObjectParameter("rate", typeof(decimal));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("total", total) :
                new ObjectParameter("total", typeof(decimal));
    
            var grandtotalParameter = grandtotal.HasValue ?
                new ObjectParameter("grandtotal", grandtotal) :
                new ObjectParameter("grandtotal", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_FileRate", fileidParameter, rateParameter, totalParameter, grandtotalParameter);
        }
    
        public virtual int Sp_Update_FilesDealers(string qry, Nullable<long> dealid, Nullable<decimal> commission)
        {
            var qryParameter = qry != null ?
                new ObjectParameter("qry", qry) :
                new ObjectParameter("qry", typeof(string));
    
            var dealidParameter = dealid.HasValue ?
                new ObjectParameter("dealid", dealid) :
                new ObjectParameter("dealid", typeof(long));
    
            var commissionParameter = commission.HasValue ?
                new ObjectParameter("commission", commission) :
                new ObjectParameter("commission", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_FilesDealers", qryParameter, dealidParameter, commissionParameter);
        }
    
        public virtual int Sp_Update_FileStatus(Nullable<long> id, string status)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_FileStatus", idParameter, statusParameter);
        }
    
        public virtual int Sp_Update_FilesTransferEmail(string email, string mobile, string cnic_Nicop)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var cnic_NicopParameter = cnic_Nicop != null ?
                new ObjectParameter("Cnic_Nicop", cnic_Nicop) :
                new ObjectParameter("Cnic_Nicop", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_FilesTransferEmail", emailParameter, mobileParameter, cnic_NicopParameter);
        }
    
        public virtual int Sp_Update_FileVerificationToNull(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_FileVerificationToNull", idParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Sp_Update_FinanceReceiptAdjustment(Nullable<long> id, Nullable<long> userid)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Sp_Update_FinanceReceiptAdjustment", idParameter, useridParameter);
        }
    
        public virtual int Sp_Update_Fuel_Consumption(Nullable<long> id, Nullable<decimal> consump, Nullable<decimal> allow, Nullable<decimal> rate)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var consumpParameter = consump.HasValue ?
                new ObjectParameter("Consump", consump) :
                new ObjectParameter("Consump", typeof(decimal));
    
            var allowParameter = allow.HasValue ?
                new ObjectParameter("allow", allow) :
                new ObjectParameter("allow", typeof(decimal));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("rate", rate) :
                new ObjectParameter("rate", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Fuel_Consumption", idParameter, consumpParameter, allowParameter, rateParameter);
        }
    
        public virtual int Sp_Update_Fuel_Rate(Nullable<long> id, Nullable<decimal> rate, Nullable<System.DateTime> date)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("rate", rate) :
                new ObjectParameter("rate", typeof(decimal));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Fuel_Rate", idParameter, rateParameter, dateParameter);
        }
    
        public virtual int Sp_Update_FuelConsumption(Nullable<long> id, Nullable<decimal> consump)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var consumpParameter = consump.HasValue ?
                new ObjectParameter("Consump", consump) :
                new ObjectParameter("Consump", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_FuelConsumption", idParameter, consumpParameter);
        }
    
        public virtual int Sp_Update_GeneralEntries_Paid(Nullable<long> id, Nullable<decimal> paidAmt)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var paidAmtParameter = paidAmt.HasValue ?
                new ObjectParameter("paidAmt", paidAmt) :
                new ObjectParameter("paidAmt", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_GeneralEntries_Paid", idParameter, paidAmtParameter);
        }
    
        public virtual int Sp_Update_GeneralEntries_Revert(Nullable<long> id, string status)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_GeneralEntries_Revert", idParameter, statusParameter);
        }
    
        public virtual int Sp_Update_GeneralEntries_Sup(Nullable<long> sup_By, Nullable<long> id)
        {
            var sup_ByParameter = sup_By.HasValue ?
                new ObjectParameter("sup_By", sup_By) :
                new ObjectParameter("sup_By", typeof(long));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_GeneralEntries_Sup", sup_ByParameter, idParameter);
        }
    
        public virtual int Sp_Update_GeneralEntry_Reversal(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_GeneralEntry_Reversal", idParameter);
        }
    
        public virtual int Sp_Update_GeneralEntry_VoucherNo(Nullable<long> id, string vouc)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var voucParameter = vouc != null ?
                new ObjectParameter("vouc", vouc) :
                new ObjectParameter("vouc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_GeneralEntry_VoucherNo", idParameter, voucParameter);
        }
    
        public virtual int Sp_Update_GenVerifyStatus(Nullable<long> id, Nullable<bool> status, string mod)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(bool));
    
            var modParameter = mod != null ?
                new ObjectParameter("mod", mod) :
                new ObjectParameter("mod", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_GenVerifyStatus", idParameter, statusParameter, modParameter);
        }
    
        public virtual int Sp_Update_GRNReversal(string grn)
        {
            var grnParameter = grn != null ?
                new ObjectParameter("grn", grn) :
                new ObjectParameter("grn", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_GRNReversal", grnParameter);
        }
    
        public virtual int Sp_Update_HD_Spent_Leaves(Nullable<long> iD, Nullable<double> spent)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(long));
    
            var spentParameter = spent.HasValue ?
                new ObjectParameter("spent", spent) :
                new ObjectParameter("spent", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_HD_Spent_Leaves", iDParameter, spentParameter);
        }
    
        public virtual int Sp_Update_Installment_File_Plot_Comm(Nullable<long> comid, string mod, string installmentData)
        {
            var comidParameter = comid.HasValue ?
                new ObjectParameter("comid", comid) :
                new ObjectParameter("comid", typeof(long));
    
            var modParameter = mod != null ?
                new ObjectParameter("mod", mod) :
                new ObjectParameter("mod", typeof(string));
    
            var installmentDataParameter = installmentData != null ?
                new ObjectParameter("InstallmentData", installmentData) :
                new ObjectParameter("InstallmentData", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Installment_File_Plot_Comm", comidParameter, modParameter, installmentDataParameter);
        }
    
        public virtual int Sp_Update_Installment_Parameter(Nullable<decimal> amount, Nullable<System.DateTime> due_date, Nullable<long> id, string mod, string type)
        {
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            var due_dateParameter = due_date.HasValue ?
                new ObjectParameter("due_date", due_date) :
                new ObjectParameter("due_date", typeof(System.DateTime));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var modParameter = mod != null ?
                new ObjectParameter("mod", mod) :
                new ObjectParameter("mod", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Installment_Parameter", amountParameter, due_dateParameter, idParameter, modParameter, typeParameter);
        }
    
        public virtual int SP_Update_Installment_Status(Nullable<long> billId, Nullable<long> instId, Nullable<long> uid, string stat, string rems)
        {
            var billIdParameter = billId.HasValue ?
                new ObjectParameter("billId", billId) :
                new ObjectParameter("billId", typeof(long));
    
            var instIdParameter = instId.HasValue ?
                new ObjectParameter("instId", instId) :
                new ObjectParameter("instId", typeof(long));
    
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(long));
    
            var statParameter = stat != null ?
                new ObjectParameter("stat", stat) :
                new ObjectParameter("stat", typeof(string));
    
            var remsParameter = rems != null ?
                new ObjectParameter("rems", rems) :
                new ObjectParameter("rems", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Update_Installment_Status", billIdParameter, instIdParameter, uidParameter, statParameter, remsParameter);
        }
    
        public virtual ObjectResult<Sp_Update_Installments_Cash_Status_Result> Sp_Update_Installments_Cash_Status(string ids, Nullable<decimal> amount)
        {
            var idsParameter = ids != null ?
                new ObjectParameter("ids", ids) :
                new ObjectParameter("ids", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Update_Installments_Cash_Status_Result>("Sp_Update_Installments_Cash_Status", idsParameter, amountParameter);
        }
    
        public virtual int Sp_Update_Instrument_Status(Nullable<long> id, string stat)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var statParameter = stat != null ?
                new ObjectParameter("stat", stat) :
                new ObjectParameter("stat", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Instrument_Status", idParameter, statParameter);
        }
    
        public virtual int Sp_Update_InstrumentsApproval(Nullable<long> grp, string status)
        {
            var grpParameter = grp.HasValue ?
                new ObjectParameter("grp", grp) :
                new ObjectParameter("grp", typeof(long));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_InstrumentsApproval", grpParameter, statusParameter);
        }
    
        public virtual int Sp_Update_Inventory(Nullable<long> id, Nullable<long> cat, string comp, string name, string uom, Nullable<decimal> quantity, Nullable<decimal> len, string l_uom, Nullable<decimal> wid, string w_uom, Nullable<decimal> hei, string h_uom, Nullable<decimal> dia, string d_uom, string siz, string s_uom, string desc, Nullable<bool> per, Nullable<decimal> pking, Nullable<bool> hide, string code)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var catParameter = cat.HasValue ?
                new ObjectParameter("Cat", cat) :
                new ObjectParameter("Cat", typeof(long));
    
            var compParameter = comp != null ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var uomParameter = uom != null ?
                new ObjectParameter("uom", uom) :
                new ObjectParameter("uom", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(decimal));
    
            var lenParameter = len.HasValue ?
                new ObjectParameter("len", len) :
                new ObjectParameter("len", typeof(decimal));
    
            var l_uomParameter = l_uom != null ?
                new ObjectParameter("l_uom", l_uom) :
                new ObjectParameter("l_uom", typeof(string));
    
            var widParameter = wid.HasValue ?
                new ObjectParameter("wid", wid) :
                new ObjectParameter("wid", typeof(decimal));
    
            var w_uomParameter = w_uom != null ?
                new ObjectParameter("w_uom", w_uom) :
                new ObjectParameter("w_uom", typeof(string));
    
            var heiParameter = hei.HasValue ?
                new ObjectParameter("hei", hei) :
                new ObjectParameter("hei", typeof(decimal));
    
            var h_uomParameter = h_uom != null ?
                new ObjectParameter("h_uom", h_uom) :
                new ObjectParameter("h_uom", typeof(string));
    
            var diaParameter = dia.HasValue ?
                new ObjectParameter("dia", dia) :
                new ObjectParameter("dia", typeof(decimal));
    
            var d_uomParameter = d_uom != null ?
                new ObjectParameter("d_uom", d_uom) :
                new ObjectParameter("d_uom", typeof(string));
    
            var sizParameter = siz != null ?
                new ObjectParameter("siz", siz) :
                new ObjectParameter("siz", typeof(string));
    
            var s_uomParameter = s_uom != null ?
                new ObjectParameter("s_uom", s_uom) :
                new ObjectParameter("s_uom", typeof(string));
    
            var descParameter = desc != null ?
                new ObjectParameter("desc", desc) :
                new ObjectParameter("desc", typeof(string));
    
            var perParameter = per.HasValue ?
                new ObjectParameter("per", per) :
                new ObjectParameter("per", typeof(bool));
    
            var pkingParameter = pking.HasValue ?
                new ObjectParameter("pking", pking) :
                new ObjectParameter("pking", typeof(decimal));
    
            var hideParameter = hide.HasValue ?
                new ObjectParameter("hide", hide) :
                new ObjectParameter("hide", typeof(bool));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Inventory", idParameter, catParameter, compParameter, nameParameter, uomParameter, quantityParameter, lenParameter, l_uomParameter, widParameter, w_uomParameter, heiParameter, h_uomParameter, diaParameter, d_uomParameter, sizParameter, s_uomParameter, descParameter, perParameter, pkingParameter, hideParameter, codeParameter);
        }
    
        public virtual int Sp_Update_Inventory_PO_Delivery(Nullable<long> vend, Nullable<long> grp, Nullable<long> item)
        {
            var vendParameter = vend.HasValue ?
                new ObjectParameter("vend", vend) :
                new ObjectParameter("vend", typeof(long));
    
            var grpParameter = grp.HasValue ?
                new ObjectParameter("grp", grp) :
                new ObjectParameter("grp", typeof(long));
    
            var itemParameter = item.HasValue ?
                new ObjectParameter("item", item) :
                new ObjectParameter("item", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Inventory_PO_Delivery", vendParameter, grpParameter, itemParameter);
        }
    
        public virtual int Sp_Update_ItemCodes(Nullable<long> pritem, Nullable<long> item)
        {
            var pritemParameter = pritem.HasValue ?
                new ObjectParameter("pritem", pritem) :
                new ObjectParameter("pritem", typeof(long));
    
            var itemParameter = item.HasValue ?
                new ObjectParameter("item", item) :
                new ObjectParameter("item", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_ItemCodes", pritemParameter, itemParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Sp_Update_Journal_Entry_Sup(Nullable<long> groupid, Nullable<long> supby)
        {
            var groupidParameter = groupid.HasValue ?
                new ObjectParameter("groupid", groupid) :
                new ObjectParameter("groupid", typeof(long));
    
            var supbyParameter = supby.HasValue ?
                new ObjectParameter("Supby", supby) :
                new ObjectParameter("Supby", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Sp_Update_Journal_Entry_Sup", groupidParameter, supbyParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Sp_Update_Journal_Entry_Sup_VoucherNo(Nullable<long> groupid, Nullable<long> supby)
        {
            var groupidParameter = groupid.HasValue ?
                new ObjectParameter("groupid", groupid) :
                new ObjectParameter("groupid", typeof(long));
    
            var supbyParameter = supby.HasValue ?
                new ObjectParameter("Supby", supby) :
                new ObjectParameter("Supby", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Sp_Update_Journal_Entry_Sup_VoucherNo", groupidParameter, supbyParameter);
        }
    
        public virtual int Sp_Update_JournalEntry_VoucherNo(Nullable<long> id, string vouc)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var voucParameter = vouc != null ?
                new ObjectParameter("vouc", vouc) :
                new ObjectParameter("vouc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_JournalEntry_VoucherNo", idParameter, voucParameter);
        }
    
        public virtual int Sp_Update_JVStatus(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_JVStatus", idParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Sp_Update_Land_Record(Nullable<long> deal_id, string landRecordData, string landPaymentSchedule, string dealNumber, string dealDesc, Nullable<decimal> dealTotAmt, Nullable<decimal> pricePerAcre, string partyName, Nullable<long> partyId)
        {
            var deal_idParameter = deal_id.HasValue ?
                new ObjectParameter("deal_id", deal_id) :
                new ObjectParameter("deal_id", typeof(long));
    
            var landRecordDataParameter = landRecordData != null ?
                new ObjectParameter("LandRecordData", landRecordData) :
                new ObjectParameter("LandRecordData", typeof(string));
    
            var landPaymentScheduleParameter = landPaymentSchedule != null ?
                new ObjectParameter("LandPaymentSchedule", landPaymentSchedule) :
                new ObjectParameter("LandPaymentSchedule", typeof(string));
    
            var dealNumberParameter = dealNumber != null ?
                new ObjectParameter("DealNumber", dealNumber) :
                new ObjectParameter("DealNumber", typeof(string));
    
            var dealDescParameter = dealDesc != null ?
                new ObjectParameter("DealDesc", dealDesc) :
                new ObjectParameter("DealDesc", typeof(string));
    
            var dealTotAmtParameter = dealTotAmt.HasValue ?
                new ObjectParameter("DealTotAmt", dealTotAmt) :
                new ObjectParameter("DealTotAmt", typeof(decimal));
    
            var pricePerAcreParameter = pricePerAcre.HasValue ?
                new ObjectParameter("PricePerAcre", pricePerAcre) :
                new ObjectParameter("PricePerAcre", typeof(decimal));
    
            var partyNameParameter = partyName != null ?
                new ObjectParameter("PartyName", partyName) :
                new ObjectParameter("PartyName", typeof(string));
    
            var partyIdParameter = partyId.HasValue ?
                new ObjectParameter("PartyId", partyId) :
                new ObjectParameter("PartyId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Sp_Update_Land_Record", deal_idParameter, landRecordDataParameter, landPaymentScheduleParameter, dealNumberParameter, dealDescParameter, dealTotAmtParameter, pricePerAcreParameter, partyNameParameter, partyIdParameter);
        }
    
        public virtual int Sp_Update_Lead(Nullable<long> id, string name, string f_name, string mob, string address, Nullable<decimal> offpric, string leadstat, string blk, string plt)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var f_nameParameter = f_name != null ?
                new ObjectParameter("f_name", f_name) :
                new ObjectParameter("f_name", typeof(string));
    
            var mobParameter = mob != null ?
                new ObjectParameter("mob", mob) :
                new ObjectParameter("mob", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var offpricParameter = offpric.HasValue ?
                new ObjectParameter("offpric", offpric) :
                new ObjectParameter("offpric", typeof(decimal));
    
            var leadstatParameter = leadstat != null ?
                new ObjectParameter("leadstat", leadstat) :
                new ObjectParameter("leadstat", typeof(string));
    
            var blkParameter = blk != null ?
                new ObjectParameter("blk", blk) :
                new ObjectParameter("blk", typeof(string));
    
            var pltParameter = plt != null ?
                new ObjectParameter("plt", plt) :
                new ObjectParameter("plt", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Lead", idParameter, nameParameter, f_nameParameter, mobParameter, addressParameter, offpricParameter, leadstatParameter, blkParameter, pltParameter);
        }
    
        public virtual int Sp_Update_Lead_Status(Nullable<long> id, string status)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Lead_Status", idParameter, statusParameter);
        }
    
        public virtual int Sp_Update_LeadReceiptCancel(Nullable<long> id, string remarks)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_LeadReceiptCancel", idParameter, remarksParameter);
        }
    
        public virtual int Sp_Update_Leads_Assign(string project, Nullable<long> salesId, Nullable<int> leadCount)
        {
            var projectParameter = project != null ?
                new ObjectParameter("project", project) :
                new ObjectParameter("project", typeof(string));
    
            var salesIdParameter = salesId.HasValue ?
                new ObjectParameter("salesId", salesId) :
                new ObjectParameter("salesId", typeof(long));
    
            var leadCountParameter = leadCount.HasValue ?
                new ObjectParameter("leadCount", leadCount) :
                new ObjectParameter("leadCount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Leads_Assign", projectParameter, salesIdParameter, leadCountParameter);
        }
    
        public virtual int Sp_Update_LeadsInstrument(Nullable<long> id, string status, string bank, string acc_Number, string module, string type, Nullable<long> refId, Nullable<System.DateTime> cleardate, Nullable<long> modid, Nullable<System.DateTime> posteddate, string reason)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var bankParameter = bank != null ?
                new ObjectParameter("Bank", bank) :
                new ObjectParameter("Bank", typeof(string));
    
            var acc_NumberParameter = acc_Number != null ?
                new ObjectParameter("Acc_Number", acc_Number) :
                new ObjectParameter("Acc_Number", typeof(string));
    
            var moduleParameter = module != null ?
                new ObjectParameter("module", module) :
                new ObjectParameter("module", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var refIdParameter = refId.HasValue ?
                new ObjectParameter("refId", refId) :
                new ObjectParameter("refId", typeof(long));
    
            var cleardateParameter = cleardate.HasValue ?
                new ObjectParameter("cleardate", cleardate) :
                new ObjectParameter("cleardate", typeof(System.DateTime));
    
            var modidParameter = modid.HasValue ?
                new ObjectParameter("modid", modid) :
                new ObjectParameter("modid", typeof(long));
    
            var posteddateParameter = posteddate.HasValue ?
                new ObjectParameter("posteddate", posteddate) :
                new ObjectParameter("posteddate", typeof(System.DateTime));
    
            var reasonParameter = reason != null ?
                new ObjectParameter("reason", reason) :
                new ObjectParameter("reason", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_LeadsInstrument", idParameter, statusParameter, bankParameter, acc_NumberParameter, moduleParameter, typeParameter, refIdParameter, cleardateParameter, modidParameter, posteddateParameter, reasonParameter);
        }
    
        public virtual int Sp_Update_Leave(Nullable<long> id, Nullable<int> leave)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var leaveParameter = leave.HasValue ?
                new ObjectParameter("Leave", leave) :
                new ObjectParameter("Leave", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Leave", idParameter, leaveParameter);
        }
    
        public virtual int Sp_Update_Leave_HD_Status(Nullable<long> empid)
        {
            var empidParameter = empid.HasValue ?
                new ObjectParameter("Empid", empid) :
                new ObjectParameter("Empid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Leave_HD_Status", empidParameter);
        }
    
        public virtual int Sp_Update_LeaveStatus_Manager(Nullable<long> id, string mang_remarks, string mang_stat)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var mang_remarksParameter = mang_remarks != null ?
                new ObjectParameter("mang_remarks", mang_remarks) :
                new ObjectParameter("mang_remarks", typeof(string));
    
            var mang_statParameter = mang_stat != null ?
                new ObjectParameter("mang_stat", mang_stat) :
                new ObjectParameter("mang_stat", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_LeaveStatus_Manager", idParameter, mang_remarksParameter, mang_statParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Sp_Update_LoanAdv_Insts(Nullable<long> salId)
        {
            var salIdParameter = salId.HasValue ?
                new ObjectParameter("salId", salId) :
                new ObjectParameter("salId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Sp_Update_LoanAdv_Insts", salIdParameter);
        }
    
        public virtual int Sp_Update_LoaninstallmentStatus(string status, Nullable<long> id)
        {
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_LoaninstallmentStatus", statusParameter, idParameter);
        }
    
        public virtual int Sp_Update_LoanStatus(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_LoanStatus", idParameter);
        }
    
        public virtual int Sp_Update_LoanStatus_HR(Nullable<long> id, string hr_remarks, string hr_stat, Nullable<long> userid)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var hr_remarksParameter = hr_remarks != null ?
                new ObjectParameter("hr_remarks", hr_remarks) :
                new ObjectParameter("hr_remarks", typeof(string));
    
            var hr_statParameter = hr_stat != null ?
                new ObjectParameter("hr_stat", hr_stat) :
                new ObjectParameter("hr_stat", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_LoanStatus_HR", idParameter, hr_remarksParameter, hr_statParameter, useridParameter);
        }
    
        public virtual int Sp_Update_LoanStatus_Manager(Nullable<long> id, string mang_remarks, string mang_stat, Nullable<long> userid)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var mang_remarksParameter = mang_remarks != null ?
                new ObjectParameter("mang_remarks", mang_remarks) :
                new ObjectParameter("mang_remarks", typeof(string));
    
            var mang_statParameter = mang_stat != null ?
                new ObjectParameter("mang_stat", mang_stat) :
                new ObjectParameter("mang_stat", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_LoanStatus_Manager", idParameter, mang_remarksParameter, mang_statParameter, useridParameter);
        }
    
        public virtual int Sp_Update_ManualAtt_InOut(Nullable<long> att, Nullable<System.DateTime> chIn, Nullable<System.DateTime> chOut, string chMet)
        {
            var attParameter = att.HasValue ?
                new ObjectParameter("att", att) :
                new ObjectParameter("att", typeof(long));
    
            var chInParameter = chIn.HasValue ?
                new ObjectParameter("chIn", chIn) :
                new ObjectParameter("chIn", typeof(System.DateTime));
    
            var chOutParameter = chOut.HasValue ?
                new ObjectParameter("chOut", chOut) :
                new ObjectParameter("chOut", typeof(System.DateTime));
    
            var chMetParameter = chMet != null ?
                new ObjectParameter("chMet", chMet) :
                new ObjectParameter("chMet", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_ManualAtt_InOut", attParameter, chInParameter, chOutParameter, chMetParameter);
        }
    
        public virtual int Sp_Update_Mark_CommercialFile_Delivered(Nullable<long> ownId)
        {
            var ownIdParameter = ownId.HasValue ?
                new ObjectParameter("ownId", ownId) :
                new ObjectParameter("ownId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Mark_CommercialFile_Delivered", ownIdParameter);
        }
    
        public virtual int Sp_Update_MarketingReceipt_Req(Nullable<long> id, string desc, string type)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var descParameter = desc != null ?
                new ObjectParameter("desc", desc) :
                new ObjectParameter("desc", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_MarketingReceipt_Req", idParameter, descParameter, typeParameter);
        }
    
        public virtual int Sp_Update_MarketingReceiptCancelation(Nullable<long> id, string desc, Nullable<long> userid, Nullable<int> canrev, string leaddeal)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var descParameter = desc != null ?
                new ObjectParameter("desc", desc) :
                new ObjectParameter("desc", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var canrevParameter = canrev.HasValue ?
                new ObjectParameter("canrev", canrev) :
                new ObjectParameter("canrev", typeof(int));
    
            var leaddealParameter = leaddeal != null ?
                new ObjectParameter("leaddeal", leaddeal) :
                new ObjectParameter("leaddeal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_MarketingReceiptCancelation", idParameter, descParameter, useridParameter, canrevParameter, leaddealParameter);
        }
    
        public virtual int Sp_Update_MarketingReceiptInfo(string bank, string ch_Pay_Draft_No, Nullable<System.DateTime> ch_Pay_Draft_Date, string text, Nullable<long> receiptid, string status, Nullable<long> reqid, string paymentType, string type)
        {
            var bankParameter = bank != null ?
                new ObjectParameter("Bank", bank) :
                new ObjectParameter("Bank", typeof(string));
    
            var ch_Pay_Draft_NoParameter = ch_Pay_Draft_No != null ?
                new ObjectParameter("Ch_Pay_Draft_No", ch_Pay_Draft_No) :
                new ObjectParameter("Ch_Pay_Draft_No", typeof(string));
    
            var ch_Pay_Draft_DateParameter = ch_Pay_Draft_Date.HasValue ?
                new ObjectParameter("Ch_Pay_Draft_Date", ch_Pay_Draft_Date) :
                new ObjectParameter("Ch_Pay_Draft_Date", typeof(System.DateTime));
    
            var textParameter = text != null ?
                new ObjectParameter("text", text) :
                new ObjectParameter("text", typeof(string));
    
            var receiptidParameter = receiptid.HasValue ?
                new ObjectParameter("receiptid", receiptid) :
                new ObjectParameter("receiptid", typeof(long));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var reqidParameter = reqid.HasValue ?
                new ObjectParameter("reqid", reqid) :
                new ObjectParameter("reqid", typeof(long));
    
            var paymentTypeParameter = paymentType != null ?
                new ObjectParameter("paymentType", paymentType) :
                new ObjectParameter("paymentType", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_MarketingReceiptInfo", bankParameter, ch_Pay_Draft_NoParameter, ch_Pay_Draft_DateParameter, textParameter, receiptidParameter, statusParameter, reqidParameter, paymentTypeParameter, typeParameter);
        }
    
        public virtual int Sp_Update_MarkQuotation(Nullable<int> id, Nullable<bool> stat, string rem)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var statParameter = stat.HasValue ?
                new ObjectParameter("stat", stat) :
                new ObjectParameter("stat", typeof(bool));
    
            var remParameter = rem != null ?
                new ObjectParameter("rem", rem) :
                new ObjectParameter("rem", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_MarkQuotation", idParameter, statParameter, remParameter);
        }
    
        public virtual int Sp_Update_MarkQuotation_Ser(Nullable<int> id, Nullable<bool> stat, string rem)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var statParameter = stat.HasValue ?
                new ObjectParameter("stat", stat) :
                new ObjectParameter("stat", typeof(bool));
    
            var remParameter = rem != null ?
                new ObjectParameter("rem", rem) :
                new ObjectParameter("rem", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_MarkQuotation_Ser", idParameter, statParameter, remParameter);
        }
    
        public virtual int Sp_Update_MeterChange_Req_Stat(Nullable<long> reqId, string stat, Nullable<long> uid, string rems)
        {
            var reqIdParameter = reqId.HasValue ?
                new ObjectParameter("reqId", reqId) :
                new ObjectParameter("reqId", typeof(long));
    
            var statParameter = stat != null ?
                new ObjectParameter("stat", stat) :
                new ObjectParameter("stat", typeof(string));
    
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(long));
    
            var remsParameter = rems != null ?
                new ObjectParameter("rems", rems) :
                new ObjectParameter("rems", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_MeterChange_Req_Stat", reqIdParameter, statParameter, uidParameter, remsParameter);
        }
    
        public virtual int Sp_Update_MeterReq_Replaced(Nullable<long> mterReqId)
        {
            var mterReqIdParameter = mterReqId.HasValue ?
                new ObjectParameter("MterReqId", mterReqId) :
                new ObjectParameter("MterReqId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_MeterReq_Replaced", mterReqIdParameter);
        }
    
        public virtual int Sp_Update_MigratedOwnerImages(Nullable<long> owner, string imgPath, Nullable<int> tp)
        {
            var ownerParameter = owner.HasValue ?
                new ObjectParameter("owner", owner) :
                new ObjectParameter("owner", typeof(long));
    
            var imgPathParameter = imgPath != null ?
                new ObjectParameter("imgPath", imgPath) :
                new ObjectParameter("imgPath", typeof(string));
    
            var tpParameter = tp.HasValue ?
                new ObjectParameter("tp", tp) :
                new ObjectParameter("tp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_MigratedOwnerImages", ownerParameter, imgPathParameter, tpParameter);
        }
    
        public virtual int Sp_Update_Module_Config_(string moduleName, string moduleData, Nullable<long> userId)
        {
            var moduleNameParameter = moduleName != null ?
                new ObjectParameter("moduleName", moduleName) :
                new ObjectParameter("moduleName", typeof(string));
    
            var moduleDataParameter = moduleData != null ?
                new ObjectParameter("moduleData", moduleData) :
                new ObjectParameter("moduleData", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Module_Config_", moduleNameParameter, moduleDataParameter, userIdParameter);
        }
    
        public virtual int Sp_Update_MTS(Nullable<long> id, string mtsvalue, string type)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var mtsvalueParameter = mtsvalue != null ?
                new ObjectParameter("mtsvalue", mtsvalue) :
                new ObjectParameter("mtsvalue", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_MTS", idParameter, mtsvalueParameter, typeParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Sp_Update_MTS_Details(string val, string attr, Nullable<long> id)
        {
            var valParameter = val != null ?
                new ObjectParameter("val", val) :
                new ObjectParameter("val", typeof(string));
    
            var attrParameter = attr != null ?
                new ObjectParameter("attr", attr) :
                new ObjectParameter("attr", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Sp_Update_MTS_Details", valParameter, attrParameter, idParameter);
        }
    
        public virtual int Sp_Update_MTS_Req(Nullable<long> id, string title, string desc, string unit, Nullable<decimal> qty, Nullable<decimal> rate, Nullable<decimal> amt, Nullable<System.DateTime> deadline, Nullable<System.DateTime> start_date, Nullable<int> ver, Nullable<long> depId, Nullable<decimal> l, Nullable<decimal> h, Nullable<decimal> b, Nullable<decimal> no, Nullable<long> reqId, string title1, string desc1, string unit1, Nullable<decimal> qty1, Nullable<decimal> rate1, Nullable<decimal> amt1, Nullable<System.DateTime> deadline1, Nullable<System.DateTime> start_date1, Nullable<int> ver1, Nullable<long> depId1, Nullable<decimal> l1, Nullable<decimal> h1, Nullable<decimal> b1, Nullable<decimal> no1)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var descParameter = desc != null ?
                new ObjectParameter("desc", desc) :
                new ObjectParameter("desc", typeof(string));
    
            var unitParameter = unit != null ?
                new ObjectParameter("unit", unit) :
                new ObjectParameter("unit", typeof(string));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("qty", qty) :
                new ObjectParameter("qty", typeof(decimal));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("rate", rate) :
                new ObjectParameter("rate", typeof(decimal));
    
            var amtParameter = amt.HasValue ?
                new ObjectParameter("amt", amt) :
                new ObjectParameter("amt", typeof(decimal));
    
            var deadlineParameter = deadline.HasValue ?
                new ObjectParameter("deadline", deadline) :
                new ObjectParameter("deadline", typeof(System.DateTime));
    
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var verParameter = ver.HasValue ?
                new ObjectParameter("ver", ver) :
                new ObjectParameter("ver", typeof(int));
    
            var depIdParameter = depId.HasValue ?
                new ObjectParameter("depId", depId) :
                new ObjectParameter("depId", typeof(long));
    
            var lParameter = l.HasValue ?
                new ObjectParameter("L", l) :
                new ObjectParameter("L", typeof(decimal));
    
            var hParameter = h.HasValue ?
                new ObjectParameter("H", h) :
                new ObjectParameter("H", typeof(decimal));
    
            var bParameter = b.HasValue ?
                new ObjectParameter("B", b) :
                new ObjectParameter("B", typeof(decimal));
    
            var noParameter = no.HasValue ?
                new ObjectParameter("no", no) :
                new ObjectParameter("no", typeof(decimal));
    
            var reqIdParameter = reqId.HasValue ?
                new ObjectParameter("reqId", reqId) :
                new ObjectParameter("reqId", typeof(long));
    
            var title1Parameter = title1 != null ?
                new ObjectParameter("title1", title1) :
                new ObjectParameter("title1", typeof(string));
    
            var desc1Parameter = desc1 != null ?
                new ObjectParameter("desc1", desc1) :
                new ObjectParameter("desc1", typeof(string));
    
            var unit1Parameter = unit1 != null ?
                new ObjectParameter("unit1", unit1) :
                new ObjectParameter("unit1", typeof(string));
    
            var qty1Parameter = qty1.HasValue ?
                new ObjectParameter("qty1", qty1) :
                new ObjectParameter("qty1", typeof(decimal));
    
            var rate1Parameter = rate1.HasValue ?
                new ObjectParameter("rate1", rate1) :
                new ObjectParameter("rate1", typeof(decimal));
    
            var amt1Parameter = amt1.HasValue ?
                new ObjectParameter("amt1", amt1) :
                new ObjectParameter("amt1", typeof(decimal));
    
            var deadline1Parameter = deadline1.HasValue ?
                new ObjectParameter("deadline1", deadline1) :
                new ObjectParameter("deadline1", typeof(System.DateTime));
    
            var start_date1Parameter = start_date1.HasValue ?
                new ObjectParameter("start_date1", start_date1) :
                new ObjectParameter("start_date1", typeof(System.DateTime));
    
            var ver1Parameter = ver1.HasValue ?
                new ObjectParameter("ver1", ver1) :
                new ObjectParameter("ver1", typeof(int));
    
            var depId1Parameter = depId1.HasValue ?
                new ObjectParameter("depId1", depId1) :
                new ObjectParameter("depId1", typeof(long));
    
            var l1Parameter = l1.HasValue ?
                new ObjectParameter("L1", l1) :
                new ObjectParameter("L1", typeof(decimal));
    
            var h1Parameter = h1.HasValue ?
                new ObjectParameter("H1", h1) :
                new ObjectParameter("H1", typeof(decimal));
    
            var b1Parameter = b1.HasValue ?
                new ObjectParameter("B1", b1) :
                new ObjectParameter("B1", typeof(decimal));
    
            var no1Parameter = no1.HasValue ?
                new ObjectParameter("No1", no1) :
                new ObjectParameter("No1", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_MTS_Req", idParameter, titleParameter, descParameter, unitParameter, qtyParameter, rateParameter, amtParameter, deadlineParameter, start_dateParameter, verParameter, depIdParameter, lParameter, hParameter, bParameter, noParameter, reqIdParameter, title1Parameter, desc1Parameter, unit1Parameter, qty1Parameter, rate1Parameter, amt1Parameter, deadline1Parameter, start_date1Parameter, ver1Parameter, depId1Parameter, l1Parameter, h1Parameter, b1Parameter, no1Parameter);
        }
    
        public virtual int Sp_Update_MTS_Status(Nullable<long> id, string status)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_MTS_Status", idParameter, statusParameter);
        }
    
        public virtual int Sp_Update_MTS_Version_Status(Nullable<long> id, string status)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_MTS_Version_Status", idParameter, statusParameter);
        }
    
        public virtual int Sp_Update_Notification(Nullable<long> nid)
        {
            var nidParameter = nid.HasValue ?
                new ObjectParameter("nid", nid) :
                new ObjectParameter("nid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Notification", nidParameter);
        }
    
        public virtual int Sp_Update_Opening_Balance(Nullable<System.DateTime> from, Nullable<System.DateTime> to, Nullable<decimal> d_bal, Nullable<decimal> c_bal, Nullable<int> id)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var d_balParameter = d_bal.HasValue ?
                new ObjectParameter("d_bal", d_bal) :
                new ObjectParameter("d_bal", typeof(decimal));
    
            var c_balParameter = c_bal.HasValue ?
                new ObjectParameter("c_bal", c_bal) :
                new ObjectParameter("c_bal", typeof(decimal));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Opening_Balance", fromParameter, toParameter, d_balParameter, c_balParameter, idParameter);
        }
    
        public virtual int Sp_Update_OtherExp_Status(Nullable<long> group_id, string status, Nullable<long> userid)
        {
            var group_idParameter = group_id.HasValue ?
                new ObjectParameter("group_id", group_id) :
                new ObjectParameter("group_id", typeof(long));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_OtherExp_Status", group_idParameter, statusParameter, useridParameter);
        }
    
        public virtual int Sp_Update_Overtime(Nullable<long> id, Nullable<decimal> oT)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var oTParameter = oT.HasValue ?
                new ObjectParameter("OT", oT) :
                new ObjectParameter("OT", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Overtime", idParameter, oTParameter);
        }
    
        public virtual int Sp_Update_OwnerTransferReceipt(Nullable<long> ownid, Nullable<long> receipt, string mod)
        {
            var ownidParameter = ownid.HasValue ?
                new ObjectParameter("ownid", ownid) :
                new ObjectParameter("ownid", typeof(long));
    
            var receiptParameter = receipt.HasValue ?
                new ObjectParameter("receipt", receipt) :
                new ObjectParameter("receipt", typeof(long));
    
            var modParameter = mod != null ?
                new ObjectParameter("mod", mod) :
                new ObjectParameter("mod", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_OwnerTransferReceipt", ownidParameter, receiptParameter, modParameter);
        }
    
        public virtual int Sp_Update_Patty_Cash_Head(Nullable<long> empId, Nullable<int> headId)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("empId", empId) :
                new ObjectParameter("empId", typeof(long));
    
            var headIdParameter = headId.HasValue ?
                new ObjectParameter("headId", headId) :
                new ObjectParameter("headId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Patty_Cash_Head", empIdParameter, headIdParameter);
        }
    
        public virtual int Sp_Update_PattyCashItem(string val, string type, Nullable<long> id)
        {
            var valParameter = val != null ?
                new ObjectParameter("val", val) :
                new ObjectParameter("val", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_PattyCashItem", valParameter, typeParameter, idParameter);
        }
    
        public virtual int Sp_Update_PattyCashItems_Approval(Nullable<long> userid, Nullable<long> group)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var groupParameter = group.HasValue ?
                new ObjectParameter("group", group) :
                new ObjectParameter("group", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_PattyCashItems_Approval", useridParameter, groupParameter);
        }
    
        public virtual int Sp_Update_PattyCashItems_Paid(Nullable<long> userid, Nullable<long> group)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var groupParameter = group.HasValue ?
                new ObjectParameter("group", group) :
                new ObjectParameter("group", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_PattyCashItems_Paid", useridParameter, groupParameter);
        }
    
        public virtual int Sp_Update_Payables_At_Receiving(Nullable<long> grp_id, Nullable<int> headid, Nullable<decimal> amount)
        {
            var grp_idParameter = grp_id.HasValue ?
                new ObjectParameter("grp_id", grp_id) :
                new ObjectParameter("grp_id", typeof(long));
    
            var headidParameter = headid.HasValue ?
                new ObjectParameter("headid", headid) :
                new ObjectParameter("headid", typeof(int));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Payables_At_Receiving", grp_idParameter, headidParameter, amountParameter);
        }
    
        public virtual int SP_Update_PaymentDetail(string pmnts)
        {
            var pmntsParameter = pmnts != null ?
                new ObjectParameter("Pmnts", pmnts) :
                new ObjectParameter("Pmnts", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Update_PaymentDetail", pmntsParameter);
        }
    
        public virtual int Sp_Update_Pending_Receipt(Nullable<long> id, Nullable<decimal> amount, string amntwords, string paymentType, string bank, string instno, string type)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var amntwordsParameter = amntwords != null ?
                new ObjectParameter("Amntwords", amntwords) :
                new ObjectParameter("Amntwords", typeof(string));
    
            var paymentTypeParameter = paymentType != null ?
                new ObjectParameter("PaymentType", paymentType) :
                new ObjectParameter("PaymentType", typeof(string));
    
            var bankParameter = bank != null ?
                new ObjectParameter("Bank", bank) :
                new ObjectParameter("Bank", typeof(string));
    
            var instnoParameter = instno != null ?
                new ObjectParameter("Instno", instno) :
                new ObjectParameter("Instno", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Pending_Receipt", idParameter, amountParameter, amntwordsParameter, paymentTypeParameter, bankParameter, instnoParameter, typeParameter);
        }
    
        public virtual int Sp_Update_Pending_To_Receipts(string id, Nullable<long> userid)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Pending_To_Receipts", idParameter, useridParameter);
        }
    
        public virtual int SP_Update_Plot_AlottedForMaterial_ForPosession(string plotnum, Nullable<long> ownerShipId)
        {
            var plotnumParameter = plotnum != null ?
                new ObjectParameter("plotnum", plotnum) :
                new ObjectParameter("plotnum", typeof(string));
    
            var ownerShipIdParameter = ownerShipId.HasValue ?
                new ObjectParameter("ownerShipId", ownerShipId) :
                new ObjectParameter("ownerShipId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Update_Plot_AlottedForMaterial_ForPosession", plotnumParameter, ownerShipIdParameter);
        }
    
        public virtual int Sp_Update_Plot_Reg_DealershipName(Nullable<long> plot_Id, Nullable<long> dealersId, string dealerName)
        {
            var plot_IdParameter = plot_Id.HasValue ?
                new ObjectParameter("Plot_Id", plot_Id) :
                new ObjectParameter("Plot_Id", typeof(long));
    
            var dealersIdParameter = dealersId.HasValue ?
                new ObjectParameter("DealersId", dealersId) :
                new ObjectParameter("DealersId", typeof(long));
    
            var dealerNameParameter = dealerName != null ?
                new ObjectParameter("DealerName", dealerName) :
                new ObjectParameter("DealerName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Plot_Reg_DealershipName", plot_IdParameter, dealersIdParameter, dealerNameParameter);
        }
    
        public virtual int Sp_Update_PlotAdjustment(Nullable<long> fromplotid, string fromplotno, Nullable<long> toplotid, string toplotno, string module, Nullable<long> userid, Nullable<long> fromown)
        {
            var fromplotidParameter = fromplotid.HasValue ?
                new ObjectParameter("Fromplotid", fromplotid) :
                new ObjectParameter("Fromplotid", typeof(long));
    
            var fromplotnoParameter = fromplotno != null ?
                new ObjectParameter("fromplotno", fromplotno) :
                new ObjectParameter("fromplotno", typeof(string));
    
            var toplotidParameter = toplotid.HasValue ?
                new ObjectParameter("Toplotid", toplotid) :
                new ObjectParameter("Toplotid", typeof(long));
    
            var toplotnoParameter = toplotno != null ?
                new ObjectParameter("toplotno", toplotno) :
                new ObjectParameter("toplotno", typeof(string));
    
            var moduleParameter = module != null ?
                new ObjectParameter("module", module) :
                new ObjectParameter("module", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var fromownParameter = fromown.HasValue ?
                new ObjectParameter("fromown", fromown) :
                new ObjectParameter("fromown", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_PlotAdjustment", fromplotidParameter, fromplotnoParameter, toplotidParameter, toplotnoParameter, moduleParameter, useridParameter, fromownParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Update_PlotBounding(Nullable<long> plot_Id, Nullable<long> boundedPlotId, Nullable<long> block, string plot_Number, string bonded_Plot_Number, string position, string block_name, string type)
        {
            var plot_IdParameter = plot_Id.HasValue ?
                new ObjectParameter("Plot_Id", plot_Id) :
                new ObjectParameter("Plot_Id", typeof(long));
    
            var boundedPlotIdParameter = boundedPlotId.HasValue ?
                new ObjectParameter("BoundedPlotId", boundedPlotId) :
                new ObjectParameter("BoundedPlotId", typeof(long));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(long));
    
            var plot_NumberParameter = plot_Number != null ?
                new ObjectParameter("Plot_Number", plot_Number) :
                new ObjectParameter("Plot_Number", typeof(string));
    
            var bonded_Plot_NumberParameter = bonded_Plot_Number != null ?
                new ObjectParameter("Bonded_Plot_Number", bonded_Plot_Number) :
                new ObjectParameter("Bonded_Plot_Number", typeof(string));
    
            var positionParameter = position != null ?
                new ObjectParameter("Position", position) :
                new ObjectParameter("Position", typeof(string));
    
            var block_nameParameter = block_name != null ?
                new ObjectParameter("block_name", block_name) :
                new ObjectParameter("block_name", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Update_PlotBounding", plot_IdParameter, boundedPlotIdParameter, blockParameter, plot_NumberParameter, bonded_Plot_NumberParameter, positionParameter, block_nameParameter, typeParameter);
        }
    
        public virtual int Sp_Update_PlotCancelation_Req(Nullable<long> id, Nullable<long> plotid, string remark, Nullable<bool> stat, string role, Nullable<long> userid)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var plotidParameter = plotid.HasValue ?
                new ObjectParameter("plotid", plotid) :
                new ObjectParameter("plotid", typeof(long));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("remark", remark) :
                new ObjectParameter("remark", typeof(string));
    
            var statParameter = stat.HasValue ?
                new ObjectParameter("stat", stat) :
                new ObjectParameter("stat", typeof(bool));
    
            var roleParameter = role != null ?
                new ObjectParameter("role", role) :
                new ObjectParameter("role", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_PlotCancelation_Req", idParameter, plotidParameter, remarkParameter, statParameter, roleParameter, useridParameter);
        }
    
        public virtual int Sp_Update_PlotConstructionStatus(Nullable<long> id, string cons)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var consParameter = cons != null ?
                new ObjectParameter("cons", cons) :
                new ObjectParameter("cons", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_PlotConstructionStatus", idParameter, consParameter);
        }
    
        public virtual int SP_Update_PlotDimension(string road, Nullable<decimal> area, Nullable<int> dime, string plt_size, string location, Nullable<long> id)
        {
            var roadParameter = road != null ?
                new ObjectParameter("Road", road) :
                new ObjectParameter("Road", typeof(string));
    
            var areaParameter = area.HasValue ?
                new ObjectParameter("area", area) :
                new ObjectParameter("area", typeof(decimal));
    
            var dimeParameter = dime.HasValue ?
                new ObjectParameter("dime", dime) :
                new ObjectParameter("dime", typeof(int));
    
            var plt_sizeParameter = plt_size != null ?
                new ObjectParameter("plt_size", plt_size) :
                new ObjectParameter("plt_size", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Update_PlotDimension", roadParameter, areaParameter, dimeParameter, plt_sizeParameter, locationParameter, idParameter);
        }
    
        public virtual int Sp_Update_PlotDisputeStatus(Nullable<long> id, Nullable<bool> status)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_PlotDisputeStatus", idParameter, statusParameter);
        }
    
        public virtual int Sp_Update_PlotElectricChargesAmount(Nullable<long> id, Nullable<decimal> amount)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_PlotElectricChargesAmount", idParameter, amountParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Sp_Update_PlotImages(Nullable<long> imageId, Nullable<long> plotid, Nullable<long> ownerId)
        {
            var imageIdParameter = imageId.HasValue ?
                new ObjectParameter("imageId", imageId) :
                new ObjectParameter("imageId", typeof(long));
    
            var plotidParameter = plotid.HasValue ?
                new ObjectParameter("plotid", plotid) :
                new ObjectParameter("plotid", typeof(long));
    
            var ownerIdParameter = ownerId.HasValue ?
                new ObjectParameter("OwnerId", ownerId) :
                new ObjectParameter("OwnerId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Sp_Update_PlotImages", imageIdParameter, plotidParameter, ownerIdParameter);
        }
    
        public virtual int Sp_Update_PlotInstallments(Nullable<long> plot_Id, Nullable<decimal> total, Nullable<decimal> discount, Nullable<long> userid, string inst)
        {
            var plot_IdParameter = plot_Id.HasValue ?
                new ObjectParameter("Plot_Id", plot_Id) :
                new ObjectParameter("Plot_Id", typeof(long));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(decimal));
    
            var discountParameter = discount.HasValue ?
                new ObjectParameter("discount", discount) :
                new ObjectParameter("discount", typeof(decimal));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(long));
    
            var instParameter = inst != null ?
                new ObjectParameter("inst", inst) :
                new ObjectParameter("inst", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_PlotInstallments", plot_IdParameter, totalParameter, discountParameter, useridParameter, instParameter);
        }
    
        public virtual int Sp_Update_PlotMorgagedStatus(Nullable<long> id, Nullable<bool> status)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_PlotMorgagedStatus", idParameter, statusParameter);
        }
    
        public virtual int Sp_Update_PlotOwnerData(string name, string father_Husband, string postal_Address, string residential_Address, string city, string date_Of_Birth, string cNIC_NICOP, string nationality, string email, string phone_Office, string residential, string mobile_1, string mobile_2, string nominee_Name, string nominee_CNIC_NICOP, string nominee_Relation, string nominee_Address, string occupation, Nullable<long> plotid, Nullable<long> userid, string ownimg, string ownimg2, string ownimg3, string ownimg4, Nullable<System.DateTime> owndate, string status, string currencyNo)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var father_HusbandParameter = father_Husband != null ?
                new ObjectParameter("Father_Husband", father_Husband) :
                new ObjectParameter("Father_Husband", typeof(string));
    
            var postal_AddressParameter = postal_Address != null ?
                new ObjectParameter("Postal_Address", postal_Address) :
                new ObjectParameter("Postal_Address", typeof(string));
    
            var residential_AddressParameter = residential_Address != null ?
                new ObjectParameter("Residential_Address", residential_Address) :
                new ObjectParameter("Residential_Address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var date_Of_BirthParameter = date_Of_Birth != null ?
                new ObjectParameter("Date_Of_Birth", date_Of_Birth) :
                new ObjectParameter("Date_Of_Birth", typeof(string));
    
            var cNIC_NICOPParameter = cNIC_NICOP != null ?
                new ObjectParameter("CNIC_NICOP", cNIC_NICOP) :
                new ObjectParameter("CNIC_NICOP", typeof(string));
    
            var nationalityParameter = nationality != null ?
                new ObjectParameter("Nationality", nationality) :
                new ObjectParameter("Nationality", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phone_OfficeParameter = phone_Office != null ?
                new ObjectParameter("Phone_Office", phone_Office) :
                new ObjectParameter("Phone_Office", typeof(string));
    
            var residentialParameter = residential != null ?
                new ObjectParameter("Residential", residential) :
                new ObjectParameter("Residential", typeof(string));
    
            var mobile_1Parameter = mobile_1 != null ?
                new ObjectParameter("Mobile_1", mobile_1) :
                new ObjectParameter("Mobile_1", typeof(string));
    
            var mobile_2Parameter = mobile_2 != null ?
                new ObjectParameter("Mobile_2", mobile_2) :
                new ObjectParameter("Mobile_2", typeof(string));
    
            var nominee_NameParameter = nominee_Name != null ?
                new ObjectParameter("Nominee_Name", nominee_Name) :
                new ObjectParameter("Nominee_Name", typeof(string));
    
            var nominee_CNIC_NICOPParameter = nominee_CNIC_NICOP != null ?
                new ObjectParameter("Nominee_CNIC_NICOP", nominee_CNIC_NICOP) :
                new ObjectParameter("Nominee_CNIC_NICOP", typeof(string));
    
            var nominee_RelationParameter = nominee_Relation != null ?
                new ObjectParameter("Nominee_Relation", nominee_Relation) :
                new ObjectParameter("Nominee_Relation", typeof(string));
    
            var nominee_AddressParameter = nominee_Address != null ?
                new ObjectParameter("Nominee_Address", nominee_Address) :
                new ObjectParameter("Nominee_Address", typeof(string));
    
            var occupationParameter = occupation != null ?
                new ObjectParameter("Occupation", occupation) :
                new ObjectParameter("Occupation", typeof(string));
    
            var plotidParameter = plotid.HasValue ?
                new ObjectParameter("Plotid", plotid) :
                new ObjectParameter("Plotid", typeof(long));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var ownimgParameter = ownimg != null ?
                new ObjectParameter("ownimg", ownimg) :
                new ObjectParameter("ownimg", typeof(string));
    
            var ownimg2Parameter = ownimg2 != null ?
                new ObjectParameter("ownimg2", ownimg2) :
                new ObjectParameter("ownimg2", typeof(string));
    
            var ownimg3Parameter = ownimg3 != null ?
                new ObjectParameter("ownimg3", ownimg3) :
                new ObjectParameter("ownimg3", typeof(string));
    
            var ownimg4Parameter = ownimg4 != null ?
                new ObjectParameter("ownimg4", ownimg4) :
                new ObjectParameter("ownimg4", typeof(string));
    
            var owndateParameter = owndate.HasValue ?
                new ObjectParameter("owndate", owndate) :
                new ObjectParameter("owndate", typeof(System.DateTime));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var currencyNoParameter = currencyNo != null ?
                new ObjectParameter("currencyNo", currencyNo) :
                new ObjectParameter("currencyNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_PlotOwnerData", nameParameter, father_HusbandParameter, postal_AddressParameter, residential_AddressParameter, cityParameter, date_Of_BirthParameter, cNIC_NICOPParameter, nationalityParameter, emailParameter, phone_OfficeParameter, residentialParameter, mobile_1Parameter, mobile_2Parameter, nominee_NameParameter, nominee_CNIC_NICOPParameter, nominee_RelationParameter, nominee_AddressParameter, occupationParameter, plotidParameter, useridParameter, ownimgParameter, ownimg2Parameter, ownimg3Parameter, ownimg4Parameter, owndateParameter, statusParameter, currencyNoParameter);
        }
    
        public virtual int Sp_Update_PlotOwnershipStatus(Nullable<long> pltid, string status)
        {
            var pltidParameter = pltid.HasValue ?
                new ObjectParameter("pltid", pltid) :
                new ObjectParameter("pltid", typeof(long));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_PlotOwnershipStatus", pltidParameter, statusParameter);
        }
    
        public virtual int Sp_Update_PlotOwnerStatus(Nullable<long> id, Nullable<long> ownerid, string status, string ownstatus)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var owneridParameter = ownerid.HasValue ?
                new ObjectParameter("ownerid", ownerid) :
                new ObjectParameter("ownerid", typeof(long));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var ownstatusParameter = ownstatus != null ?
                new ObjectParameter("ownstatus", ownstatus) :
                new ObjectParameter("ownstatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_PlotOwnerStatus", idParameter, owneridParameter, statusParameter, ownstatusParameter);
        }
    
        public virtual int Sp_Update_PlotPref(Nullable<long> id, string pref)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var prefParameter = pref != null ?
                new ObjectParameter("Pref", pref) :
                new ObjectParameter("Pref", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_PlotPref", idParameter, prefParameter);
        }
    
        public virtual int Sp_Update_PlotRefund_Req(Nullable<long> id, string stat, string role)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var statParameter = stat != null ?
                new ObjectParameter("stat", stat) :
                new ObjectParameter("stat", typeof(string));
    
            var roleParameter = role != null ?
                new ObjectParameter("role", role) :
                new ObjectParameter("role", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_PlotRefund_Req", idParameter, statParameter, roleParameter);
        }
    
        public virtual int Sp_Update_PlotRegistryStatus(Nullable<long> id, Nullable<bool> status)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_PlotRegistryStatus", idParameter, statusParameter);
        }
    
        public virtual int Sp_Update_PlotRegNo(Nullable<long> plotownid, string reg_No)
        {
            var plotownidParameter = plotownid.HasValue ?
                new ObjectParameter("plotownid", plotownid) :
                new ObjectParameter("plotownid", typeof(long));
    
            var reg_NoParameter = reg_No != null ?
                new ObjectParameter("Reg_No", reg_No) :
                new ObjectParameter("Reg_No", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_PlotRegNo", plotownidParameter, reg_NoParameter);
        }
    
        public virtual int Sp_Update_PlotServiceChargesAmount(Nullable<long> id, Nullable<decimal> amount)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_PlotServiceChargesAmount", idParameter, amountParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Sp_Update_PlotsPositions(Nullable<long> id, Nullable<decimal> n, Nullable<decimal> s, Nullable<decimal> e, Nullable<decimal> w, Nullable<decimal> nE, Nullable<decimal> nW, Nullable<decimal> sW, Nullable<decimal> sE, string front)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var nParameter = n.HasValue ?
                new ObjectParameter("N", n) :
                new ObjectParameter("N", typeof(decimal));
    
            var sParameter = s.HasValue ?
                new ObjectParameter("S", s) :
                new ObjectParameter("S", typeof(decimal));
    
            var eParameter = e.HasValue ?
                new ObjectParameter("E", e) :
                new ObjectParameter("E", typeof(decimal));
    
            var wParameter = w.HasValue ?
                new ObjectParameter("W", w) :
                new ObjectParameter("W", typeof(decimal));
    
            var nEParameter = nE.HasValue ?
                new ObjectParameter("NE", nE) :
                new ObjectParameter("NE", typeof(decimal));
    
            var nWParameter = nW.HasValue ?
                new ObjectParameter("NW", nW) :
                new ObjectParameter("NW", typeof(decimal));
    
            var sWParameter = sW.HasValue ?
                new ObjectParameter("SW", sW) :
                new ObjectParameter("SW", typeof(decimal));
    
            var sEParameter = sE.HasValue ?
                new ObjectParameter("SE", sE) :
                new ObjectParameter("SE", typeof(decimal));
    
            var frontParameter = front != null ?
                new ObjectParameter("front", front) :
                new ObjectParameter("front", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Sp_Update_PlotsPositions", idParameter, nParameter, sParameter, eParameter, wParameter, nEParameter, nWParameter, sWParameter, sEParameter, frontParameter);
        }
    
        public virtual int Sp_Update_PlotStatus(Nullable<long> id, string status)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_PlotStatus", idParameter, statusParameter);
        }
    
        public virtual int SP_Update_PlotVerificationToNull(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Update_PlotVerificationToNull", idParameter);
        }
    
        public virtual int Sp_Update_PO_PrintBy(Nullable<long> userid, string des, Nullable<long> groupid, string extra, Nullable<long> vendorId)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var desParameter = des != null ?
                new ObjectParameter("des", des) :
                new ObjectParameter("des", typeof(string));
    
            var groupidParameter = groupid.HasValue ?
                new ObjectParameter("groupid", groupid) :
                new ObjectParameter("groupid", typeof(long));
    
            var extraParameter = extra != null ?
                new ObjectParameter("extra", extra) :
                new ObjectParameter("extra", typeof(string));
    
            var vendorIdParameter = vendorId.HasValue ?
                new ObjectParameter("vendorId", vendorId) :
                new ObjectParameter("vendorId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_PO_PrintBy", useridParameter, desParameter, groupidParameter, extraParameter, vendorIdParameter);
        }
    
        public virtual int Sp_Update_PossessionDate(Nullable<long> posId)
        {
            var posIdParameter = posId.HasValue ?
                new ObjectParameter("posId", posId) :
                new ObjectParameter("posId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_PossessionDate", posIdParameter);
        }
    
        public virtual int Sp_Update_PossessionLetterRequestStatus(Nullable<long> plotownid, Nullable<int> status, string matAltdPlt)
        {
            var plotownidParameter = plotownid.HasValue ?
                new ObjectParameter("Plotownid", plotownid) :
                new ObjectParameter("Plotownid", typeof(long));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var matAltdPltParameter = matAltdPlt != null ?
                new ObjectParameter("matAltdPlt", matAltdPlt) :
                new ObjectParameter("matAltdPlt", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_PossessionLetterRequestStatus", plotownidParameter, statusParameter, matAltdPltParameter);
        }
    
        public virtual int Sp_Update_PostVerificationPlot(Nullable<long> plotid, Nullable<bool> status)
        {
            var plotidParameter = plotid.HasValue ?
                new ObjectParameter("plotid", plotid) :
                new ObjectParameter("plotid", typeof(long));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_PostVerificationPlot", plotidParameter, statusParameter);
        }
    
        public virtual int Sp_Update_POSummary(string grp)
        {
            var grpParameter = grp != null ?
                new ObjectParameter("grp", grp) :
                new ObjectParameter("grp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_POSummary", grpParameter);
        }
    
        public virtual int Sp_Update_POSummary_Ser(string grp)
        {
            var grpParameter = grp != null ?
                new ObjectParameter("grp", grp) :
                new ObjectParameter("grp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_POSummary_Ser", grpParameter);
        }
    
        public virtual int Sp_Update_PR_Over_Deletion(Nullable<long> groupId, string reason)
        {
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("groupId", groupId) :
                new ObjectParameter("groupId", typeof(long));
    
            var reasonParameter = reason != null ?
                new ObjectParameter("reason", reason) :
                new ObjectParameter("reason", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_PR_Over_Deletion", groupIdParameter, reasonParameter);
        }
    
        public virtual int Sp_Update_PremiumLead_Information(Nullable<long> id, string name, string mob, string fName, string add)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var mobParameter = mob != null ?
                new ObjectParameter("mob", mob) :
                new ObjectParameter("mob", typeof(string));
    
            var fNameParameter = fName != null ?
                new ObjectParameter("fName", fName) :
                new ObjectParameter("fName", typeof(string));
    
            var addParameter = add != null ?
                new ObjectParameter("add", add) :
                new ObjectParameter("add", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_PremiumLead_Information", idParameter, nameParameter, mobParameter, fNameParameter, addParameter);
        }
    
        public virtual int Sp_Update_Print_Flag(Nullable<long> grop)
        {
            var gropParameter = grop.HasValue ?
                new ObjectParameter("grop", grop) :
                new ObjectParameter("grop", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Print_Flag", gropParameter);
        }
    
        public virtual int Sp_Update_Prj_Payment_Voucher_Req(Nullable<long> groupid, string status)
        {
            var groupidParameter = groupid.HasValue ?
                new ObjectParameter("groupid", groupid) :
                new ObjectParameter("groupid", typeof(long));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Prj_Payment_Voucher_Req", groupidParameter, statusParameter);
        }
    
        public virtual int Sp_Update_Prj_WBD_startEnd_Date(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDtae, Nullable<long> wbd_Id)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDtaeParameter = endDtae.HasValue ?
                new ObjectParameter("EndDtae", endDtae) :
                new ObjectParameter("EndDtae", typeof(System.DateTime));
    
            var wbd_IdParameter = wbd_Id.HasValue ?
                new ObjectParameter("Wbd_Id", wbd_Id) :
                new ObjectParameter("Wbd_Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Prj_WBD_startEnd_Date", startDateParameter, endDtaeParameter, wbd_IdParameter);
        }
    
        public virtual int Sp_Update_PrjHead(Nullable<long> prjid, string head, string type)
        {
            var prjidParameter = prjid.HasValue ?
                new ObjectParameter("prjid", prjid) :
                new ObjectParameter("prjid", typeof(long));
    
            var headParameter = head != null ?
                new ObjectParameter("head", head) :
                new ObjectParameter("head", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_PrjHead", prjidParameter, headParameter, typeParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Sp_Update_Project(Nullable<long> id, string attr, string value)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var attrParameter = attr != null ?
                new ObjectParameter("attr", attr) :
                new ObjectParameter("attr", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Sp_Update_Project", idParameter, attrParameter, valueParameter);
        }
    
        public virtual int Sp_Update_ProjectStatus(Nullable<long> prjId, string status)
        {
            var prjIdParameter = prjId.HasValue ?
                new ObjectParameter("prjId", prjId) :
                new ObjectParameter("prjId", typeof(long));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_ProjectStatus", prjIdParameter, statusParameter);
        }
    
        public virtual int Sp_Update_ProjectSubscription(Nullable<long> id, string status)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_ProjectSubscription", idParameter, statusParameter);
        }
    
        public virtual int Sp_Update_PropertyDeal_Com_Appr(Nullable<long> id, string stat, Nullable<long> userid)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var statParameter = stat != null ?
                new ObjectParameter("stat", stat) :
                new ObjectParameter("stat", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_PropertyDeal_Com_Appr", idParameter, statParameter, useridParameter);
        }
    
        public virtual int Sp_Update_PropertyDeal_RequestStatus_Id(Nullable<long> req, string stat)
        {
            var reqParameter = req.HasValue ?
                new ObjectParameter("req", req) :
                new ObjectParameter("req", typeof(long));
    
            var statParameter = stat != null ?
                new ObjectParameter("stat", stat) :
                new ObjectParameter("stat", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_PropertyDeal_RequestStatus_Id", reqParameter, statParameter);
        }
    
        public virtual int Sp_Update_PropertyDealCheque(Nullable<long> id, string des)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var desParameter = des != null ?
                new ObjectParameter("des", des) :
                new ObjectParameter("des", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_PropertyDealCheque", idParameter, desParameter);
        }
    
        public virtual int Sp_Update_PropertyDeals_PartyStatus(Nullable<long> id, string status)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_PropertyDeals_PartyStatus", idParameter, statusParameter);
        }
    
        public virtual int Sp_Update_ProptyDealReceipt_Cancel(Nullable<long> id, string desc)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var descParameter = desc != null ?
                new ObjectParameter("desc", desc) :
                new ObjectParameter("desc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_ProptyDealReceipt_Cancel", idParameter, descParameter);
        }
    
        public virtual int Sp_Update_Purchase_Req_Status(Nullable<long> group_id, string status, Nullable<long> userid)
        {
            var group_idParameter = group_id.HasValue ?
                new ObjectParameter("group_id", group_id) :
                new ObjectParameter("group_id", typeof(long));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Purchase_Req_Status", group_idParameter, statusParameter, useridParameter);
        }
    
        public virtual int Sp_Update_Purchase_Req_Status_rzn(Nullable<long> group_id, string status, string reason, Nullable<long> userid)
        {
            var group_idParameter = group_id.HasValue ?
                new ObjectParameter("group_id", group_id) :
                new ObjectParameter("group_id", typeof(long));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var reasonParameter = reason != null ?
                new ObjectParameter("Reason", reason) :
                new ObjectParameter("Reason", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Purchase_Req_Status_rzn", group_idParameter, statusParameter, reasonParameter, useridParameter);
        }
    
        public virtual int SP_Update_PurchaseReq_Status(Nullable<long> preq, string stat, string type, string reason)
        {
            var preqParameter = preq.HasValue ?
                new ObjectParameter("preq", preq) :
                new ObjectParameter("preq", typeof(long));
    
            var statParameter = stat != null ?
                new ObjectParameter("stat", stat) :
                new ObjectParameter("stat", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var reasonParameter = reason != null ?
                new ObjectParameter("reason", reason) :
                new ObjectParameter("reason", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Update_PurchaseReq_Status", preqParameter, statParameter, typeParameter, reasonParameter);
        }
    
        public virtual int Sp_Update_Qty_Rate(Nullable<long> id, Nullable<decimal> romno, string type, string po, string ty)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var romnoParameter = romno.HasValue ?
                new ObjectParameter("romno", romno) :
                new ObjectParameter("romno", typeof(decimal));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var poParameter = po != null ?
                new ObjectParameter("po", po) :
                new ObjectParameter("po", typeof(string));
    
            var tyParameter = ty != null ?
                new ObjectParameter("ty", ty) :
                new ObjectParameter("ty", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Qty_Rate", idParameter, romnoParameter, typeParameter, poParameter, tyParameter);
        }
    
        public virtual int Sp_Update_QuotationFinalize(string mats)
        {
            var matsParameter = mats != null ?
                new ObjectParameter("Mats", mats) :
                new ObjectParameter("Mats", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_QuotationFinalize", matsParameter);
        }
    
        public virtual int Sp_Update_QuoteImg(string imgnam, Nullable<long> id)
        {
            var imgnamParameter = imgnam != null ?
                new ObjectParameter("imgnam", imgnam) :
                new ObjectParameter("imgnam", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_QuoteImg", imgnamParameter, idParameter);
        }
    
        public virtual int Sp_Update_Receipt(Nullable<long> id, Nullable<decimal> amount, string name, string father_Name, string contact, string amountinWords, string paymentType, string bank, string ch_Pay_Draft_No, string project, Nullable<long> file_Plot_No, string size, string type, Nullable<long> tokenParameter, Nullable<long> userid, Nullable<System.DateTime> dateTime, string module, string receiptNo, Nullable<System.DateTime> chedate)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var father_NameParameter = father_Name != null ?
                new ObjectParameter("Father_Name", father_Name) :
                new ObjectParameter("Father_Name", typeof(string));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var amountinWordsParameter = amountinWords != null ?
                new ObjectParameter("AmountinWords", amountinWords) :
                new ObjectParameter("AmountinWords", typeof(string));
    
            var paymentTypeParameter = paymentType != null ?
                new ObjectParameter("PaymentType", paymentType) :
                new ObjectParameter("PaymentType", typeof(string));
    
            var bankParameter = bank != null ?
                new ObjectParameter("Bank", bank) :
                new ObjectParameter("Bank", typeof(string));
    
            var ch_Pay_Draft_NoParameter = ch_Pay_Draft_No != null ?
                new ObjectParameter("Ch_Pay_Draft_No", ch_Pay_Draft_No) :
                new ObjectParameter("Ch_Pay_Draft_No", typeof(string));
    
            var projectParameter = project != null ?
                new ObjectParameter("Project", project) :
                new ObjectParameter("Project", typeof(string));
    
            var file_Plot_NoParameter = file_Plot_No.HasValue ?
                new ObjectParameter("File_Plot_No", file_Plot_No) :
                new ObjectParameter("File_Plot_No", typeof(long));
    
            var sizeParameter = size != null ?
                new ObjectParameter("Size", size) :
                new ObjectParameter("Size", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var tokenParameterParameter = tokenParameter.HasValue ?
                new ObjectParameter("TokenParameter", tokenParameter) :
                new ObjectParameter("TokenParameter", typeof(long));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(long));
    
            var dateTimeParameter = dateTime.HasValue ?
                new ObjectParameter("DateTime", dateTime) :
                new ObjectParameter("DateTime", typeof(System.DateTime));
    
            var moduleParameter = module != null ?
                new ObjectParameter("Module", module) :
                new ObjectParameter("Module", typeof(string));
    
            var receiptNoParameter = receiptNo != null ?
                new ObjectParameter("ReceiptNo", receiptNo) :
                new ObjectParameter("ReceiptNo", typeof(string));
    
            var chedateParameter = chedate.HasValue ?
                new ObjectParameter("chedate", chedate) :
                new ObjectParameter("chedate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Receipt", idParameter, amountParameter, nameParameter, father_NameParameter, contactParameter, amountinWordsParameter, paymentTypeParameter, bankParameter, ch_Pay_Draft_NoParameter, projectParameter, file_Plot_NoParameter, sizeParameter, typeParameter, tokenParameterParameter, useridParameter, dateTimeParameter, moduleParameter, receiptNoParameter, chedateParameter);
        }
    
        public virtual int Sp_Update_Receipt_Req(Nullable<long> id, string desc)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var descParameter = desc != null ?
                new ObjectParameter("desc", desc) :
                new ObjectParameter("desc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Receipt_Req", idParameter, descParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Sp_Update_Receipt_Transaction_Id(Nullable<long> receiptId, Nullable<long> transactionId)
        {
            var receiptIdParameter = receiptId.HasValue ?
                new ObjectParameter("receiptId", receiptId) :
                new ObjectParameter("receiptId", typeof(long));
    
            var transactionIdParameter = transactionId.HasValue ?
                new ObjectParameter("TransactionId", transactionId) :
                new ObjectParameter("TransactionId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Sp_Update_Receipt_Transaction_Id", receiptIdParameter, transactionIdParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Sp_Update_ReceiptAdjustment(Nullable<long> id, Nullable<long> receiptid, Nullable<long> to, string remarks, Nullable<long> userid, Nullable<long> to_Plotid, string pltNum, string toname, string tofnam, string contact, string siz)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var receiptidParameter = receiptid.HasValue ?
                new ObjectParameter("Receiptid", receiptid) :
                new ObjectParameter("Receiptid", typeof(long));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(long));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var to_PlotidParameter = to_Plotid.HasValue ?
                new ObjectParameter("to_Plotid", to_Plotid) :
                new ObjectParameter("to_Plotid", typeof(long));
    
            var pltNumParameter = pltNum != null ?
                new ObjectParameter("pltNum", pltNum) :
                new ObjectParameter("pltNum", typeof(string));
    
            var tonameParameter = toname != null ?
                new ObjectParameter("toname", toname) :
                new ObjectParameter("toname", typeof(string));
    
            var tofnamParameter = tofnam != null ?
                new ObjectParameter("tofnam", tofnam) :
                new ObjectParameter("tofnam", typeof(string));
    
            var contactParameter = contact != null ?
                new ObjectParameter("contact", contact) :
                new ObjectParameter("contact", typeof(string));
    
            var sizParameter = siz != null ?
                new ObjectParameter("siz", siz) :
                new ObjectParameter("siz", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Sp_Update_ReceiptAdjustment", idParameter, receiptidParameter, toParameter, remarksParameter, useridParameter, to_PlotidParameter, pltNumParameter, tonameParameter, tofnamParameter, contactParameter, sizParameter);
        }
    
        public virtual int Sp_Update_ReceiptCancel(Nullable<long> id, string remarks)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_ReceiptCancel", idParameter, remarksParameter);
        }
    
        public virtual int Sp_Update_ReceiptCancel_Parameter(Nullable<long> id, string remarks)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_ReceiptCancel_Parameter", idParameter, remarksParameter);
        }
    
        public virtual int Sp_Update_ReceiptCancelation(Nullable<long> id, string desc, Nullable<long> userid, Nullable<int> canrev)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var descParameter = desc != null ?
                new ObjectParameter("desc", desc) :
                new ObjectParameter("desc", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var canrevParameter = canrev.HasValue ?
                new ObjectParameter("canrev", canrev) :
                new ObjectParameter("canrev", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_ReceiptCancelation", idParameter, descParameter, useridParameter, canrevParameter);
        }
    
        public virtual int Sp_Update_ReceiptDispute(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_ReceiptDispute", idParameter);
        }
    
        public virtual int Sp_Update_ReceiptInfo(string bank, string ch_Pay_Draft_No, Nullable<System.DateTime> ch_Pay_Draft_Date, string text, Nullable<long> receiptid, string status, Nullable<long> reqid, string paymentType)
        {
            var bankParameter = bank != null ?
                new ObjectParameter("Bank", bank) :
                new ObjectParameter("Bank", typeof(string));
    
            var ch_Pay_Draft_NoParameter = ch_Pay_Draft_No != null ?
                new ObjectParameter("Ch_Pay_Draft_No", ch_Pay_Draft_No) :
                new ObjectParameter("Ch_Pay_Draft_No", typeof(string));
    
            var ch_Pay_Draft_DateParameter = ch_Pay_Draft_Date.HasValue ?
                new ObjectParameter("Ch_Pay_Draft_Date", ch_Pay_Draft_Date) :
                new ObjectParameter("Ch_Pay_Draft_Date", typeof(System.DateTime));
    
            var textParameter = text != null ?
                new ObjectParameter("text", text) :
                new ObjectParameter("text", typeof(string));
    
            var receiptidParameter = receiptid.HasValue ?
                new ObjectParameter("receiptid", receiptid) :
                new ObjectParameter("receiptid", typeof(long));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var reqidParameter = reqid.HasValue ?
                new ObjectParameter("reqid", reqid) :
                new ObjectParameter("reqid", typeof(long));
    
            var paymentTypeParameter = paymentType != null ?
                new ObjectParameter("paymentType", paymentType) :
                new ObjectParameter("paymentType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_ReceiptInfo", bankParameter, ch_Pay_Draft_NoParameter, ch_Pay_Draft_DateParameter, textParameter, receiptidParameter, statusParameter, reqidParameter, paymentTypeParameter);
        }
    
        public virtual int Sp_Update_ReceiptOwner(Nullable<long> id, Nullable<long> ownerid)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var owneridParameter = ownerid.HasValue ?
                new ObjectParameter("ownerid", ownerid) :
                new ObjectParameter("ownerid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_ReceiptOwner", idParameter, owneridParameter);
        }
    
        public virtual int Sp_Update_Receipts_CashierDayClose(Nullable<long> userid, Nullable<System.DateTime> closingTime)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var closingTimeParameter = closingTime.HasValue ?
                new ObjectParameter("closingTime", closingTime) :
                new ObjectParameter("closingTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Receipts_CashierDayClose", useridParameter, closingTimeParameter);
        }
    
        public virtual int Sp_Update_receiptsfileno(Nullable<long> id, string fileplono, string val, string name, string fname, string phone)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var fileplonoParameter = fileplono != null ?
                new ObjectParameter("fileplono", fileplono) :
                new ObjectParameter("fileplono", typeof(string));
    
            var valParameter = val != null ?
                new ObjectParameter("val", val) :
                new ObjectParameter("val", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("fname", fname) :
                new ObjectParameter("fname", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_receiptsfileno", idParameter, fileplonoParameter, valParameter, nameParameter, fnameParameter, phoneParameter);
        }
    
        public virtual int Sp_Update_ReceiptSingCancel_Parameter(Nullable<long> id, string remarks)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_ReceiptSingCancel_Parameter", idParameter, remarksParameter);
        }
    
        public virtual int Sp_Update_ReceiptVerification(Nullable<long> id, Nullable<bool> status)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_ReceiptVerification", idParameter, statusParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Update_ReceiptWithCancel(Nullable<long> id, Nullable<decimal> amount, string name, string father_Name, string contact, string amountinWords, string paymentType, string bank, string ch_Pay_Draft_No, string project, Nullable<long> file_Plot_No, string size, string type, Nullable<long> tokenParameter, Nullable<long> userid, Nullable<System.DateTime> dateTime, string module, string receiptNo, Nullable<System.DateTime> ch_Pay_Draft_Date)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var father_NameParameter = father_Name != null ?
                new ObjectParameter("Father_Name", father_Name) :
                new ObjectParameter("Father_Name", typeof(string));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var amountinWordsParameter = amountinWords != null ?
                new ObjectParameter("AmountinWords", amountinWords) :
                new ObjectParameter("AmountinWords", typeof(string));
    
            var paymentTypeParameter = paymentType != null ?
                new ObjectParameter("PaymentType", paymentType) :
                new ObjectParameter("PaymentType", typeof(string));
    
            var bankParameter = bank != null ?
                new ObjectParameter("Bank", bank) :
                new ObjectParameter("Bank", typeof(string));
    
            var ch_Pay_Draft_NoParameter = ch_Pay_Draft_No != null ?
                new ObjectParameter("Ch_Pay_Draft_No", ch_Pay_Draft_No) :
                new ObjectParameter("Ch_Pay_Draft_No", typeof(string));
    
            var projectParameter = project != null ?
                new ObjectParameter("Project", project) :
                new ObjectParameter("Project", typeof(string));
    
            var file_Plot_NoParameter = file_Plot_No.HasValue ?
                new ObjectParameter("File_Plot_No", file_Plot_No) :
                new ObjectParameter("File_Plot_No", typeof(long));
    
            var sizeParameter = size != null ?
                new ObjectParameter("Size", size) :
                new ObjectParameter("Size", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var tokenParameterParameter = tokenParameter.HasValue ?
                new ObjectParameter("TokenParameter", tokenParameter) :
                new ObjectParameter("TokenParameter", typeof(long));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(long));
    
            var dateTimeParameter = dateTime.HasValue ?
                new ObjectParameter("DateTime", dateTime) :
                new ObjectParameter("DateTime", typeof(System.DateTime));
    
            var moduleParameter = module != null ?
                new ObjectParameter("Module", module) :
                new ObjectParameter("Module", typeof(string));
    
            var receiptNoParameter = receiptNo != null ?
                new ObjectParameter("ReceiptNo", receiptNo) :
                new ObjectParameter("ReceiptNo", typeof(string));
    
            var ch_Pay_Draft_DateParameter = ch_Pay_Draft_Date.HasValue ?
                new ObjectParameter("Ch_Pay_Draft_Date", ch_Pay_Draft_Date) :
                new ObjectParameter("Ch_Pay_Draft_Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Update_ReceiptWithCancel", idParameter, amountParameter, nameParameter, father_NameParameter, contactParameter, amountinWordsParameter, paymentTypeParameter, bankParameter, ch_Pay_Draft_NoParameter, projectParameter, file_Plot_NoParameter, sizeParameter, typeParameter, tokenParameterParameter, useridParameter, dateTimeParameter, moduleParameter, receiptNoParameter, ch_Pay_Draft_DateParameter);
        }
    
        public virtual int Sp_Update_Receivable_At_Receiving(Nullable<long> grp_id, Nullable<int> headid, Nullable<decimal> amount)
        {
            var grp_idParameter = grp_id.HasValue ?
                new ObjectParameter("grp_id", grp_id) :
                new ObjectParameter("grp_id", typeof(long));
    
            var headidParameter = headid.HasValue ?
                new ObjectParameter("headid", headid) :
                new ObjectParameter("headid", typeof(int));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Receivable_At_Receiving", grp_idParameter, headidParameter, amountParameter);
        }
    
        public virtual int Sp_Update_Received_AmountTransfer(Nullable<long> id, Nullable<decimal> amt, string mod)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var amtParameter = amt.HasValue ?
                new ObjectParameter("amt", amt) :
                new ObjectParameter("amt", typeof(decimal));
    
            var modParameter = mod != null ?
                new ObjectParameter("mod", mod) :
                new ObjectParameter("mod", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Received_AmountTransfer", idParameter, amtParameter, modParameter);
        }
    
        public virtual int Sp_Update_ReminderNotify(Nullable<long> remId)
        {
            var remIdParameter = remId.HasValue ?
                new ObjectParameter("remId", remId) :
                new ObjectParameter("remId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_ReminderNotify", remIdParameter);
        }
    
        public virtual int Sp_Update_Rental_Img(string imgnam, Nullable<long> id)
        {
            var imgnamParameter = imgnam != null ?
                new ObjectParameter("imgnam", imgnam) :
                new ObjectParameter("imgnam", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Rental_Img", imgnamParameter, idParameter);
        }
    
        public virtual int Sp_Update_RequestForVerify_Building(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_RequestForVerify_Building", idParameter);
        }
    
        public virtual int Sp_Update_RequestForVerify_File(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_RequestForVerify_File", idParameter);
        }
    
        public virtual int Sp_Update_RequestForVerify_Plot(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_RequestForVerify_Plot", idParameter);
        }
    
        public virtual int Sp_Update_ResetPassword_Employee(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_ResetPassword_Employee", idParameter);
        }
    
        public virtual int Sp_Update_ReversePO(Nullable<long> grp, string ponum)
        {
            var grpParameter = grp.HasValue ?
                new ObjectParameter("grp", grp) :
                new ObjectParameter("grp", typeof(long));
    
            var ponumParameter = ponum != null ?
                new ObjectParameter("ponum", ponum) :
                new ObjectParameter("ponum", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_ReversePO", grpParameter, ponumParameter);
        }
    
        public virtual int Sp_Update_ReverseWO(Nullable<long> grp, string ponum)
        {
            var grpParameter = grp.HasValue ?
                new ObjectParameter("grp", grp) :
                new ObjectParameter("grp", typeof(long));
    
            var ponumParameter = ponum != null ?
                new ObjectParameter("ponum", ponum) :
                new ObjectParameter("ponum", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_ReverseWO", grpParameter, ponumParameter);
        }
    
        public virtual int Sp_Update_SAG_Voucher(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_SAG_Voucher", idParameter);
        }
    
        public virtual int Sp_Update_salaries(Nullable<long> id, string remarks)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_salaries", idParameter, remarksParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Sp_Update_SalariesCurrentMonthDesignation(Nullable<long> empId, Nullable<long> departmentId, string departmentName, Nullable<long> designation_Id, string designation_name, Nullable<long> companyId, string companyName, Nullable<long> st_Dep_Id, string st_Dep_Name, string st_Desi_name)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(long));
    
            var departmentIdParameter = departmentId.HasValue ?
                new ObjectParameter("DepartmentId", departmentId) :
                new ObjectParameter("DepartmentId", typeof(long));
    
            var departmentNameParameter = departmentName != null ?
                new ObjectParameter("DepartmentName", departmentName) :
                new ObjectParameter("DepartmentName", typeof(string));
    
            var designation_IdParameter = designation_Id.HasValue ?
                new ObjectParameter("Designation_Id", designation_Id) :
                new ObjectParameter("Designation_Id", typeof(long));
    
            var designation_nameParameter = designation_name != null ?
                new ObjectParameter("Designation_name", designation_name) :
                new ObjectParameter("Designation_name", typeof(string));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var st_Dep_IdParameter = st_Dep_Id.HasValue ?
                new ObjectParameter("St_Dep_Id", st_Dep_Id) :
                new ObjectParameter("St_Dep_Id", typeof(long));
    
            var st_Dep_NameParameter = st_Dep_Name != null ?
                new ObjectParameter("St_Dep_Name", st_Dep_Name) :
                new ObjectParameter("St_Dep_Name", typeof(string));
    
            var st_Desi_nameParameter = st_Desi_name != null ?
                new ObjectParameter("St_Desi_name", st_Desi_name) :
                new ObjectParameter("St_Desi_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Sp_Update_SalariesCurrentMonthDesignation", empIdParameter, departmentIdParameter, departmentNameParameter, designation_IdParameter, designation_nameParameter, companyIdParameter, companyNameParameter, st_Dep_IdParameter, st_Dep_NameParameter, st_Desi_nameParameter);
        }
    
        public virtual int Sp_Update_Salary(Nullable<long> id, Nullable<decimal> sa_amt)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var sa_amtParameter = sa_amt.HasValue ?
                new ObjectParameter("sa_amt", sa_amt) :
                new ObjectParameter("sa_amt", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Salary", idParameter, sa_amtParameter);
        }
    
        public virtual int Sp_Update_Salary_Status(string status, Nullable<long> id, Nullable<long> userid)
        {
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Salary_Status", statusParameter, idParameter, useridParameter);
        }
    
        public virtual int Sp_Update_SalaryStatus(string status)
        {
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_SalaryStatus", statusParameter);
        }
    
        public virtual int Sp_Update_SalaryStatus_Parameter(string status, Nullable<long> id, Nullable<long> userid)
        {
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_SalaryStatus_Parameter", statusParameter, idParameter, useridParameter);
        }
    
        public virtual int Sp_Update_SalarySteps_Dates(string salary_steps, Nullable<System.DateTime> date)
        {
            var salary_stepsParameter = salary_steps != null ?
                new ObjectParameter("salary_steps", salary_steps) :
                new ObjectParameter("salary_steps", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_SalarySteps_Dates", salary_stepsParameter, dateParameter);
        }
    
        public virtual int Sp_Update_SalaryTaxes(string taxesData)
        {
            var taxesDataParameter = taxesData != null ?
                new ObjectParameter("taxesData", taxesData) :
                new ObjectParameter("taxesData", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_SalaryTaxes", taxesDataParameter);
        }
    
        public virtual int Sp_Update_SAM_CashierDayClose(Nullable<long> userid, Nullable<System.DateTime> closingTime)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var closingTimeParameter = closingTime.HasValue ?
                new ObjectParameter("closingTime", closingTime) :
                new ObjectParameter("closingTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_SAM_CashierDayClose", useridParameter, closingTimeParameter);
        }
    
        public virtual int Sp_Update_SAM_Deals_DealNumber(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_SAM_Deals_DealNumber", idParameter);
        }
    
        public virtual int Sp_Update_SAM_Leads_DealNumber(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_SAM_Leads_DealNumber", idParameter);
        }
    
        public virtual int Sp_Update_Seller_Details(Nullable<long> id, string name, string mobileNo, string partyNo, string cNIC)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var mobileNoParameter = mobileNo != null ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(string));
    
            var partyNoParameter = partyNo != null ?
                new ObjectParameter("PartyNo", partyNo) :
                new ObjectParameter("PartyNo", typeof(string));
    
            var cNICParameter = cNIC != null ?
                new ObjectParameter("CNIC", cNIC) :
                new ObjectParameter("CNIC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Seller_Details", idParameter, nameParameter, mobileNoParameter, partyNoParameter, cNICParameter);
        }
    
        public virtual int Sp_Update_Ser_Bids(Nullable<decimal> qty, Nullable<decimal> rate, Nullable<long> bidid)
        {
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("qty", qty) :
                new ObjectParameter("qty", typeof(decimal));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("rate", rate) :
                new ObjectParameter("rate", typeof(decimal));
    
            var bididParameter = bidid.HasValue ?
                new ObjectParameter("bidid", bidid) :
                new ObjectParameter("bidid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Ser_Bids", qtyParameter, rateParameter, bididParameter);
        }
    
        public virtual int Sp_Update_Ser_PO_PrintBy(Nullable<long> userid, string des, Nullable<long> groupid, string extra, string po)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var desParameter = des != null ?
                new ObjectParameter("des", des) :
                new ObjectParameter("des", typeof(string));
    
            var groupidParameter = groupid.HasValue ?
                new ObjectParameter("groupid", groupid) :
                new ObjectParameter("groupid", typeof(long));
    
            var extraParameter = extra != null ?
                new ObjectParameter("extra", extra) :
                new ObjectParameter("extra", typeof(string));
    
            var poParameter = po != null ?
                new ObjectParameter("po", po) :
                new ObjectParameter("po", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Ser_PO_PrintBy", useridParameter, desParameter, groupidParameter, extraParameter, poParameter);
        }
    
        public virtual int Sp_Update_Ser_Req_Status(Nullable<long> group_id, string status, Nullable<long> userid)
        {
            var group_idParameter = group_id.HasValue ?
                new ObjectParameter("group_id", group_id) :
                new ObjectParameter("group_id", typeof(long));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Ser_Req_Status", group_idParameter, statusParameter, useridParameter);
        }
    
        public virtual int Sp_Update_Service_No(Nullable<long> id, string sn)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var snParameter = sn != null ?
                new ObjectParameter("sn", sn) :
                new ObjectParameter("sn", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Service_No", idParameter, snParameter);
        }
    
        public virtual int Sp_Update_Service_QuoteImg(string imgnam, Nullable<long> id)
        {
            var imgnamParameter = imgnam != null ?
                new ObjectParameter("imgnam", imgnam) :
                new ObjectParameter("imgnam", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Service_QuoteImg", imgnamParameter, idParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> SP_Update_ServiceCharge_PermStatus(Nullable<long> id, Nullable<bool> stat, Nullable<long> usr, string rem)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var statParameter = stat.HasValue ?
                new ObjectParameter("stat", stat) :
                new ObjectParameter("stat", typeof(bool));
    
            var usrParameter = usr.HasValue ?
                new ObjectParameter("usr", usr) :
                new ObjectParameter("usr", typeof(long));
    
            var remParameter = rem != null ?
                new ObjectParameter("rem", rem) :
                new ObjectParameter("rem", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("SP_Update_ServiceCharge_PermStatus", idParameter, statParameter, usrParameter, remParameter);
        }
    
        public virtual int Sp_Update_ShiftInstallmentPlan(Nullable<int> i, Nullable<long> fileid, string module)
        {
            var iParameter = i.HasValue ?
                new ObjectParameter("i", i) :
                new ObjectParameter("i", typeof(int));
    
            var fileidParameter = fileid.HasValue ?
                new ObjectParameter("fileid", fileid) :
                new ObjectParameter("fileid", typeof(long));
    
            var moduleParameter = module != null ?
                new ObjectParameter("module", module) :
                new ObjectParameter("module", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_ShiftInstallmentPlan", iParameter, fileidParameter, moduleParameter);
        }
    
        public virtual int Sp_Update_SpecialPrefCharge(Nullable<long> id, Nullable<long> uid)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_SpecialPrefCharge", idParameter, uidParameter);
        }
    
        public virtual int Sp_Update_SpeedFestLead(Nullable<long> id, Nullable<long> userid)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_SpeedFestLead", idParameter, useridParameter);
        }
    
        public virtual int Sp_Update_StandingOrderDetails(Nullable<int> headId, string instNo, Nullable<System.DateTime> instDate)
        {
            var headIdParameter = headId.HasValue ?
                new ObjectParameter("headId", headId) :
                new ObjectParameter("headId", typeof(int));
    
            var instNoParameter = instNo != null ?
                new ObjectParameter("instNo", instNo) :
                new ObjectParameter("instNo", typeof(string));
    
            var instDateParameter = instDate.HasValue ?
                new ObjectParameter("instDate", instDate) :
                new ObjectParameter("instDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_StandingOrderDetails", headIdParameter, instNoParameter, instDateParameter);
        }
    
        public virtual int Sp_Update_Status_Commercial_Unit(Nullable<long> recReqId, string rrs, Nullable<long> comromId, string crs, Nullable<long> leadId, string ls)
        {
            var recReqIdParameter = recReqId.HasValue ?
                new ObjectParameter("recReqId", recReqId) :
                new ObjectParameter("recReqId", typeof(long));
    
            var rrsParameter = rrs != null ?
                new ObjectParameter("rrs", rrs) :
                new ObjectParameter("rrs", typeof(string));
    
            var comromIdParameter = comromId.HasValue ?
                new ObjectParameter("comromId", comromId) :
                new ObjectParameter("comromId", typeof(long));
    
            var crsParameter = crs != null ?
                new ObjectParameter("crs", crs) :
                new ObjectParameter("crs", typeof(string));
    
            var leadIdParameter = leadId.HasValue ?
                new ObjectParameter("leadId", leadId) :
                new ObjectParameter("leadId", typeof(long));
    
            var lsParameter = ls != null ?
                new ObjectParameter("ls", ls) :
                new ObjectParameter("ls", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Status_Commercial_Unit", recReqIdParameter, rrsParameter, comromIdParameter, crsParameter, leadIdParameter, lsParameter);
        }
    
        public virtual int Sp_Update_Status_HR(Nullable<long> id, string hr_remarks, string hr_stat)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var hr_remarksParameter = hr_remarks != null ?
                new ObjectParameter("hr_remarks", hr_remarks) :
                new ObjectParameter("hr_remarks", typeof(string));
    
            var hr_statParameter = hr_stat != null ?
                new ObjectParameter("hr_stat", hr_stat) :
                new ObjectParameter("hr_stat", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Status_HR", idParameter, hr_remarksParameter, hr_statParameter);
        }
    
        public virtual int Sp_Update_Stock_In(string poNumber, Nullable<long> grp_Id, Nullable<long> vendorId, Nullable<long> itemId)
        {
            var poNumberParameter = poNumber != null ?
                new ObjectParameter("poNumber", poNumber) :
                new ObjectParameter("poNumber", typeof(string));
    
            var grp_IdParameter = grp_Id.HasValue ?
                new ObjectParameter("grp_Id", grp_Id) :
                new ObjectParameter("grp_Id", typeof(long));
    
            var vendorIdParameter = vendorId.HasValue ?
                new ObjectParameter("vendorId", vendorId) :
                new ObjectParameter("vendorId", typeof(long));
    
            var itemIdParameter = itemId.HasValue ?
                new ObjectParameter("itemId", itemId) :
                new ObjectParameter("itemId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Stock_In", poNumberParameter, grp_IdParameter, vendorIdParameter, itemIdParameter);
        }
    
        public virtual ObjectResult<string> Sp_Update_Stockout_DirectIssuance(Nullable<long> groupid, Nullable<long> userid, string item_Id)
        {
            var groupidParameter = groupid.HasValue ?
                new ObjectParameter("Groupid", groupid) :
                new ObjectParameter("Groupid", typeof(long));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var item_IdParameter = item_Id != null ?
                new ObjectParameter("item_Id", item_Id) :
                new ObjectParameter("item_Id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Sp_Update_Stockout_DirectIssuance", groupidParameter, useridParameter, item_IdParameter);
        }
    
        public virtual ObjectResult<string> Sp_Update_Stockout_Handover(Nullable<long> groupid, Nullable<long> userid, string item_Id)
        {
            var groupidParameter = groupid.HasValue ?
                new ObjectParameter("Groupid", groupid) :
                new ObjectParameter("Groupid", typeof(long));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var item_IdParameter = item_Id != null ?
                new ObjectParameter("item_Id", item_Id) :
                new ObjectParameter("item_Id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Sp_Update_Stockout_Handover", groupidParameter, useridParameter, item_IdParameter);
        }
    
        public virtual int Sp_Update_StockTaking(Nullable<long> id, Nullable<decimal> qty, Nullable<decimal> preqty, Nullable<long> userid, Nullable<long> groupId, Nullable<long> depId, string depnam, Nullable<long> wId, string wnam)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("qty", qty) :
                new ObjectParameter("qty", typeof(decimal));
    
            var preqtyParameter = preqty.HasValue ?
                new ObjectParameter("preqty", preqty) :
                new ObjectParameter("preqty", typeof(decimal));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("groupId", groupId) :
                new ObjectParameter("groupId", typeof(long));
    
            var depIdParameter = depId.HasValue ?
                new ObjectParameter("depId", depId) :
                new ObjectParameter("depId", typeof(long));
    
            var depnamParameter = depnam != null ?
                new ObjectParameter("depnam", depnam) :
                new ObjectParameter("depnam", typeof(string));
    
            var wIdParameter = wId.HasValue ?
                new ObjectParameter("wId", wId) :
                new ObjectParameter("wId", typeof(long));
    
            var wnamParameter = wnam != null ?
                new ObjectParameter("wnam", wnam) :
                new ObjectParameter("wnam", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_StockTaking", idParameter, qtyParameter, preqtyParameter, useridParameter, groupIdParameter, depIdParameter, depnamParameter, wIdParameter, wnamParameter);
        }
    
        public virtual int Sp_Update_SubscriptionFee(Nullable<long> id, Nullable<decimal> amt)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var amtParameter = amt.HasValue ?
                new ObjectParameter("amt", amt) :
                new ObjectParameter("amt", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_SubscriptionFee", idParameter, amtParameter);
        }
    
        public virtual int Sp_Update_SvChg_Installment_Status(Nullable<long> billId, Nullable<long> instId, Nullable<long> uid, string stat, string rems)
        {
            var billIdParameter = billId.HasValue ?
                new ObjectParameter("billId", billId) :
                new ObjectParameter("billId", typeof(long));
    
            var instIdParameter = instId.HasValue ?
                new ObjectParameter("instId", instId) :
                new ObjectParameter("instId", typeof(long));
    
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(long));
    
            var statParameter = stat != null ?
                new ObjectParameter("stat", stat) :
                new ObjectParameter("stat", typeof(string));
    
            var remsParameter = rems != null ?
                new ObjectParameter("rems", rems) :
                new ObjectParameter("rems", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_SvChg_Installment_Status", billIdParameter, instIdParameter, uidParameter, statParameter, remsParameter);
        }
    
        public virtual int Sp_Update_SVCInstallemtStatus(Nullable<long> instId)
        {
            var instIdParameter = instId.HasValue ?
                new ObjectParameter("instId", instId) :
                new ObjectParameter("instId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_SVCInstallemtStatus", instIdParameter);
        }
    
        public virtual int Sp_Update_Tax(Nullable<long> id, Nullable<decimal> tax)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var taxParameter = tax.HasValue ?
                new ObjectParameter("tax", tax) :
                new ObjectParameter("tax", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Tax", idParameter, taxParameter);
        }
    
        public virtual int Sp_Update_Ticket_Forward(Nullable<long> id, string dep, Nullable<int> dep_Id, Nullable<long> assingedto)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var depParameter = dep != null ?
                new ObjectParameter("dep", dep) :
                new ObjectParameter("dep", typeof(string));
    
            var dep_IdParameter = dep_Id.HasValue ?
                new ObjectParameter("dep_Id", dep_Id) :
                new ObjectParameter("dep_Id", typeof(int));
    
            var assingedtoParameter = assingedto.HasValue ?
                new ObjectParameter("assingedto", assingedto) :
                new ObjectParameter("assingedto", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Ticket_Forward", idParameter, depParameter, dep_IdParameter, assingedtoParameter);
        }
    
        public virtual int Sp_Update_Ticket_Status(Nullable<long> ticket_Id, string stat)
        {
            var ticket_IdParameter = ticket_Id.HasValue ?
                new ObjectParameter("ticket_Id", ticket_Id) :
                new ObjectParameter("ticket_Id", typeof(long));
    
            var statParameter = stat != null ?
                new ObjectParameter("stat", stat) :
                new ObjectParameter("stat", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Ticket_Status", ticket_IdParameter, statParameter);
        }
    
        public virtual int Sp_Update_TimeAdjustment_Status(Nullable<bool> typ, Nullable<long> id, Nullable<bool> stat, string rems, Nullable<long> uid)
        {
            var typParameter = typ.HasValue ?
                new ObjectParameter("typ", typ) :
                new ObjectParameter("typ", typeof(bool));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var statParameter = stat.HasValue ?
                new ObjectParameter("stat", stat) :
                new ObjectParameter("stat", typeof(bool));
    
            var remsParameter = rems != null ?
                new ObjectParameter("rems", rems) :
                new ObjectParameter("rems", typeof(string));
    
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_TimeAdjustment_Status", typParameter, idParameter, statParameter, remsParameter, uidParameter);
        }
    
        public virtual int Sp_Update_TransferPaperStatus(Nullable<long> grpId)
        {
            var grpIdParameter = grpId.HasValue ?
                new ObjectParameter("grpId", grpId) :
                new ObjectParameter("grpId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_TransferPaperStatus", grpIdParameter);
        }
    
        public virtual int Sp_Update_TransferReq_Back(Nullable<long> id, string mod)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var modParameter = mod != null ?
                new ObjectParameter("mod", mod) :
                new ObjectParameter("mod", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_TransferReq_Back", idParameter, modParameter);
        }
    
        public virtual int Sp_Update_TransferReq_Back_Counter(Nullable<long> id, string mod)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var modParameter = mod != null ?
                new ObjectParameter("mod", mod) :
                new ObjectParameter("mod", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_TransferReq_Back_Counter", idParameter, modParameter);
        }
    
        public virtual int Sp_Update_TransferReqCheckList(Nullable<long> id, Nullable<bool> status, Nullable<int> prop)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(bool));
    
            var propParameter = prop.HasValue ?
                new ObjectParameter("prop", prop) :
                new ObjectParameter("prop", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_TransferReqCheckList", idParameter, statusParameter, propParameter);
        }
    
        public virtual int Sp_Update_TransferReqCheckList_Commercial(Nullable<long> id, Nullable<bool> status, Nullable<int> prop)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(bool));
    
            var propParameter = prop.HasValue ?
                new ObjectParameter("prop", prop) :
                new ObjectParameter("prop", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_TransferReqCheckList_Commercial", idParameter, statusParameter, propParameter);
        }
    
        public virtual int Sp_Update_TransferReqCheckList_Plot(Nullable<long> id, Nullable<bool> status, Nullable<int> prop)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(bool));
    
            var propParameter = prop.HasValue ?
                new ObjectParameter("prop", prop) :
                new ObjectParameter("prop", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_TransferReqCheckList_Plot", idParameter, statusParameter, propParameter);
        }
    
        public virtual int Sp_Update_TransferRequest(Nullable<long> reqid)
        {
            var reqidParameter = reqid.HasValue ?
                new ObjectParameter("reqid", reqid) :
                new ObjectParameter("reqid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_TransferRequest", reqidParameter);
        }
    
        public virtual int Sp_Update_TransferRequest_Commercial(Nullable<long> reqid, Nullable<bool> bloodrel, Nullable<bool> wav, Nullable<bool> oth_tra, Nullable<decimal> amt, string remak)
        {
            var reqidParameter = reqid.HasValue ?
                new ObjectParameter("reqid", reqid) :
                new ObjectParameter("reqid", typeof(long));
    
            var bloodrelParameter = bloodrel.HasValue ?
                new ObjectParameter("bloodrel", bloodrel) :
                new ObjectParameter("bloodrel", typeof(bool));
    
            var wavParameter = wav.HasValue ?
                new ObjectParameter("wav", wav) :
                new ObjectParameter("wav", typeof(bool));
    
            var oth_traParameter = oth_tra.HasValue ?
                new ObjectParameter("oth_tra", oth_tra) :
                new ObjectParameter("oth_tra", typeof(bool));
    
            var amtParameter = amt.HasValue ?
                new ObjectParameter("amt", amt) :
                new ObjectParameter("amt", typeof(decimal));
    
            var remakParameter = remak != null ?
                new ObjectParameter("remak", remak) :
                new ObjectParameter("remak", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_TransferRequest_Commercial", reqidParameter, bloodrelParameter, wavParameter, oth_traParameter, amtParameter, remakParameter);
        }
    
        public virtual int Sp_Update_TransferRequest_File(Nullable<long> reqid, Nullable<bool> bloodrel, Nullable<bool> wav, Nullable<bool> oth_tra, Nullable<decimal> amt, string remak)
        {
            var reqidParameter = reqid.HasValue ?
                new ObjectParameter("reqid", reqid) :
                new ObjectParameter("reqid", typeof(long));
    
            var bloodrelParameter = bloodrel.HasValue ?
                new ObjectParameter("bloodrel", bloodrel) :
                new ObjectParameter("bloodrel", typeof(bool));
    
            var wavParameter = wav.HasValue ?
                new ObjectParameter("wav", wav) :
                new ObjectParameter("wav", typeof(bool));
    
            var oth_traParameter = oth_tra.HasValue ?
                new ObjectParameter("oth_tra", oth_tra) :
                new ObjectParameter("oth_tra", typeof(bool));
    
            var amtParameter = amt.HasValue ?
                new ObjectParameter("amt", amt) :
                new ObjectParameter("amt", typeof(decimal));
    
            var remakParameter = remak != null ?
                new ObjectParameter("remak", remak) :
                new ObjectParameter("remak", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_TransferRequest_File", reqidParameter, bloodrelParameter, wavParameter, oth_traParameter, amtParameter, remakParameter);
        }
    
        public virtual int Sp_Update_TransferRequest_Plot(Nullable<long> reqid, Nullable<bool> bloodrel, Nullable<bool> wav, Nullable<bool> oth_tra, Nullable<decimal> amt, string remak)
        {
            var reqidParameter = reqid.HasValue ?
                new ObjectParameter("reqid", reqid) :
                new ObjectParameter("reqid", typeof(long));
    
            var bloodrelParameter = bloodrel.HasValue ?
                new ObjectParameter("bloodrel", bloodrel) :
                new ObjectParameter("bloodrel", typeof(bool));
    
            var wavParameter = wav.HasValue ?
                new ObjectParameter("wav", wav) :
                new ObjectParameter("wav", typeof(bool));
    
            var oth_traParameter = oth_tra.HasValue ?
                new ObjectParameter("oth_tra", oth_tra) :
                new ObjectParameter("oth_tra", typeof(bool));
    
            var amtParameter = amt.HasValue ?
                new ObjectParameter("amt", amt) :
                new ObjectParameter("amt", typeof(decimal));
    
            var remakParameter = remak != null ?
                new ObjectParameter("remak", remak) :
                new ObjectParameter("remak", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_TransferRequest_Plot", reqidParameter, bloodrelParameter, wavParameter, oth_traParameter, amtParameter, remakParameter);
        }
    
        public virtual int Sp_Update_TransferRequestSerialNum(Nullable<long> reqid, Nullable<long> serialnum)
        {
            var reqidParameter = reqid.HasValue ?
                new ObjectParameter("reqid", reqid) :
                new ObjectParameter("reqid", typeof(long));
    
            var serialnumParameter = serialnum.HasValue ?
                new ObjectParameter("serialnum", serialnum) :
                new ObjectParameter("serialnum", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_TransferRequestSerialNum", reqidParameter, serialnumParameter);
        }
    
        public virtual int Sp_Update_TransferRequestSerialNum_Commercial(Nullable<long> reqid, Nullable<long> serialnum)
        {
            var reqidParameter = reqid.HasValue ?
                new ObjectParameter("reqid", reqid) :
                new ObjectParameter("reqid", typeof(long));
    
            var serialnumParameter = serialnum.HasValue ?
                new ObjectParameter("serialnum", serialnum) :
                new ObjectParameter("serialnum", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_TransferRequestSerialNum_Commercial", reqidParameter, serialnumParameter);
        }
    
        public virtual int Sp_Update_TransferRequestSerialNum_Plot(Nullable<long> reqid, Nullable<long> serialnum)
        {
            var reqidParameter = reqid.HasValue ?
                new ObjectParameter("reqid", reqid) :
                new ObjectParameter("reqid", typeof(long));
    
            var serialnumParameter = serialnum.HasValue ?
                new ObjectParameter("serialnum", serialnum) :
                new ObjectParameter("serialnum", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_TransferRequestSerialNum_Plot", reqidParameter, serialnumParameter);
        }
    
        public virtual int Sp_Update_TrasnferRequest(Nullable<long> ownerid, Nullable<long> trans, Nullable<long> shopid)
        {
            var owneridParameter = ownerid.HasValue ?
                new ObjectParameter("ownerid", ownerid) :
                new ObjectParameter("ownerid", typeof(long));
    
            var transParameter = trans.HasValue ?
                new ObjectParameter("trans", trans) :
                new ObjectParameter("trans", typeof(long));
    
            var shopidParameter = shopid.HasValue ?
                new ObjectParameter("shopid", shopid) :
                new ObjectParameter("shopid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_TrasnferRequest", owneridParameter, transParameter, shopidParameter);
        }
    
        public virtual int Sp_Update_UnBallotPlot(Nullable<long> plotid, Nullable<long> fileid)
        {
            var plotidParameter = plotid.HasValue ?
                new ObjectParameter("plotid", plotid) :
                new ObjectParameter("plotid", typeof(long));
    
            var fileidParameter = fileid.HasValue ?
                new ObjectParameter("fileid", fileid) :
                new ObjectParameter("fileid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_UnBallotPlot", plotidParameter, fileidParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Sp_Update_UnBallotPlot_MoveOwners(Nullable<long> ownid, Nullable<long> fileid)
        {
            var ownidParameter = ownid.HasValue ?
                new ObjectParameter("ownid", ownid) :
                new ObjectParameter("ownid", typeof(long));
    
            var fileidParameter = fileid.HasValue ?
                new ObjectParameter("fileid", fileid) :
                new ObjectParameter("fileid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Sp_Update_UnBallotPlot_MoveOwners", ownidParameter, fileidParameter);
        }
    
        public virtual int Sp_Update_UtilitiesReversal(Nullable<long> id, string type, Nullable<decimal> amt)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var amtParameter = amt.HasValue ?
                new ObjectParameter("amt", amt) :
                new ObjectParameter("amt", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_UtilitiesReversal", idParameter, typeParameter, amtParameter);
        }
    
        public virtual int Sp_Update_Vendor(Nullable<long> id, string name, string company, string address, string email, string office_Mobile, string fax, string city, string ntn, string strn)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var office_MobileParameter = office_Mobile != null ?
                new ObjectParameter("Office_Mobile", office_Mobile) :
                new ObjectParameter("Office_Mobile", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var ntnParameter = ntn != null ?
                new ObjectParameter("ntn", ntn) :
                new ObjectParameter("ntn", typeof(string));
    
            var strnParameter = strn != null ?
                new ObjectParameter("strn", strn) :
                new ObjectParameter("strn", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Vendor", idParameter, nameParameter, companyParameter, addressParameter, emailParameter, office_MobileParameter, faxParameter, cityParameter, ntnParameter, strnParameter);
        }
    
        public virtual int SP_Update_VerificationToNull(Nullable<long> id, string mod)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var modParameter = mod != null ?
                new ObjectParameter("mod", mod) :
                new ObjectParameter("mod", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Update_VerificationToNull", idParameter, modParameter);
        }
    
        public virtual int Sp_Update_VerifiedforAllotment(Nullable<long> plotid, Nullable<long> plotownid)
        {
            var plotidParameter = plotid.HasValue ?
                new ObjectParameter("plotid", plotid) :
                new ObjectParameter("plotid", typeof(long));
    
            var plotownidParameter = plotownid.HasValue ?
                new ObjectParameter("plotownid", plotownid) :
                new ObjectParameter("plotownid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_VerifiedforAllotment", plotidParameter, plotownidParameter);
        }
    
        public virtual int SP_Update_VerifyStatus(Nullable<long> id, string mod)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var modParameter = mod != null ?
                new ObjectParameter("mod", mod) :
                new ObjectParameter("mod", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Update_VerifyStatus", idParameter, modParameter);
        }
    
        public virtual ObjectResult<string> Sp_Update_Voucher(Nullable<long> id, string bank, string branch, string chpno, Nullable<System.DateTime> chpdate, string paytype, Nullable<long> userid, string type)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var bankParameter = bank != null ?
                new ObjectParameter("bank", bank) :
                new ObjectParameter("bank", typeof(string));
    
            var branchParameter = branch != null ?
                new ObjectParameter("branch", branch) :
                new ObjectParameter("branch", typeof(string));
    
            var chpnoParameter = chpno != null ?
                new ObjectParameter("chpno", chpno) :
                new ObjectParameter("chpno", typeof(string));
    
            var chpdateParameter = chpdate.HasValue ?
                new ObjectParameter("chpdate", chpdate) :
                new ObjectParameter("chpdate", typeof(System.DateTime));
    
            var paytypeParameter = paytype != null ?
                new ObjectParameter("paytype", paytype) :
                new ObjectParameter("paytype", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Sp_Update_Voucher", idParameter, bankParameter, branchParameter, chpnoParameter, chpdateParameter, paytypeParameter, useridParameter, typeParameter);
        }
    
        public virtual int Sp_Update_WarningLetter_Steps(Nullable<long> id, string mod, Nullable<int> let)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var modParameter = mod != null ?
                new ObjectParameter("mod", mod) :
                new ObjectParameter("mod", typeof(string));
    
            var letParameter = let.HasValue ?
                new ObjectParameter("let", let) :
                new ObjectParameter("let", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_WarningLetter_Steps", idParameter, modParameter, letParameter);
        }
    
        public virtual int Sp_Update_WarningLetterStatus_File(Nullable<long> fileid, Nullable<long> owenerid, string type)
        {
            var fileidParameter = fileid.HasValue ?
                new ObjectParameter("Fileid", fileid) :
                new ObjectParameter("Fileid", typeof(long));
    
            var oweneridParameter = owenerid.HasValue ?
                new ObjectParameter("owenerid", owenerid) :
                new ObjectParameter("owenerid", typeof(long));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_WarningLetterStatus_File", fileidParameter, oweneridParameter, typeParameter);
        }
    
        public virtual int Sp_Update_WarningLetterStatus_FileMove(Nullable<long> comid, Nullable<long> owenerid, string type)
        {
            var comidParameter = comid.HasValue ?
                new ObjectParameter("Comid", comid) :
                new ObjectParameter("Comid", typeof(long));
    
            var oweneridParameter = owenerid.HasValue ?
                new ObjectParameter("owenerid", owenerid) :
                new ObjectParameter("owenerid", typeof(long));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_WarningLetterStatus_FileMove", comidParameter, oweneridParameter, typeParameter);
        }
    
        public virtual int Sp_Update_WarningLetterStatus_Plot(Nullable<long> plotid, Nullable<long> owenerid, string type)
        {
            var plotidParameter = plotid.HasValue ?
                new ObjectParameter("Plotid", plotid) :
                new ObjectParameter("Plotid", typeof(long));
    
            var oweneridParameter = owenerid.HasValue ?
                new ObjectParameter("owenerid", owenerid) :
                new ObjectParameter("owenerid", typeof(long));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_WarningLetterStatus_Plot", plotidParameter, oweneridParameter, typeParameter);
        }
    
        public virtual int Sp_Update_WarningLetterStatus_PlotMove(Nullable<long> comid, Nullable<long> owenerid, string type)
        {
            var comidParameter = comid.HasValue ?
                new ObjectParameter("Comid", comid) :
                new ObjectParameter("Comid", typeof(long));
    
            var oweneridParameter = owenerid.HasValue ?
                new ObjectParameter("owenerid", owenerid) :
                new ObjectParameter("owenerid", typeof(long));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_WarningLetterStatus_PlotMove", comidParameter, oweneridParameter, typeParameter);
        }
    
        public virtual int Sp_Update_WarningLetterStatus_Shop(Nullable<long> comid, Nullable<long> owenerid, string type)
        {
            var comidParameter = comid.HasValue ?
                new ObjectParameter("Comid", comid) :
                new ObjectParameter("Comid", typeof(long));
    
            var oweneridParameter = owenerid.HasValue ?
                new ObjectParameter("owenerid", owenerid) :
                new ObjectParameter("owenerid", typeof(long));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_WarningLetterStatus_Shop", comidParameter, oweneridParameter, typeParameter);
        }
    
        public virtual int Sp_Update_WarningLetterStatus_ShopMove(Nullable<long> comid, Nullable<long> owenerid, string type)
        {
            var comidParameter = comid.HasValue ?
                new ObjectParameter("Comid", comid) :
                new ObjectParameter("Comid", typeof(long));
    
            var oweneridParameter = owenerid.HasValue ?
                new ObjectParameter("owenerid", owenerid) :
                new ObjectParameter("owenerid", typeof(long));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_WarningLetterStatus_ShopMove", comidParameter, oweneridParameter, typeParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Sp_Update_Wbd_Details(string val, string attr, Nullable<long> id)
        {
            var valParameter = val != null ?
                new ObjectParameter("val", val) :
                new ObjectParameter("val", typeof(string));
    
            var attrParameter = attr != null ?
                new ObjectParameter("attr", attr) :
                new ObjectParameter("attr", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Sp_Update_Wbd_Details", valParameter, attrParameter, idParameter);
        }
    
        public virtual int Sp_Update_Wbd_Nodays_Date(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDtae, Nullable<long> prj_Id)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDtaeParameter = endDtae.HasValue ?
                new ObjectParameter("EndDtae", endDtae) :
                new ObjectParameter("EndDtae", typeof(System.DateTime));
    
            var prj_IdParameter = prj_Id.HasValue ?
                new ObjectParameter("Prj_Id", prj_Id) :
                new ObjectParameter("Prj_Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Wbd_Nodays_Date", startDateParameter, endDtaeParameter, prj_IdParameter);
        }
    
        public virtual int Sp_Update_WorkingDays(Nullable<long> id, Nullable<int> extraDays)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var extraDaysParameter = extraDays.HasValue ?
                new ObjectParameter("ExtraDays", extraDays) :
                new ObjectParameter("ExtraDays", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_WorkingDays", idParameter, extraDaysParameter);
        }
    
        public virtual int TEMP_PROC_TEST(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TEMP_PROC_TEST", idParameter);
        }
    
        public virtual ObjectResult<temp_sms_Result> temp_sms()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<temp_sms_Result>("temp_sms");
        }
    
        public virtual ObjectResult<temp_Sp1_Result> temp_Sp1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<temp_Sp1_Result>("temp_Sp1");
        }
    
        public virtual ObjectResult<Test_Activity_Result> Test_Activity()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Test_Activity_Result>("Test_Activity");
        }
    
        public virtual ObjectResult<Test_DecFiles_Result> Test_DecFiles()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Test_DecFiles_Result>("Test_DecFiles");
        }
    
        public virtual int test_file_cal(Nullable<long> id, Nullable<int> dif)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var difParameter = dif.HasValue ?
                new ObjectParameter("dif", dif) :
                new ObjectParameter("dif", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("test_file_cal", idParameter, difParameter);
        }
    
        public virtual ObjectResult<Test_FileBalance_Result> Test_FileBalance()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Test_FileBalance_Result>("Test_FileBalance");
        }
    
        public virtual ObjectResult<Test_FileBalance_para_Result> Test_FileBalance_para(Nullable<long> fileno)
        {
            var filenoParameter = fileno.HasValue ?
                new ObjectParameter("fileno", fileno) :
                new ObjectParameter("fileno", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Test_FileBalance_para_Result>("Test_FileBalance_para", filenoParameter);
        }
    
        public virtual ObjectResult<Test_FileInstallments_Result> Test_FileInstallments(Nullable<long> fileno)
        {
            var filenoParameter = fileno.HasValue ?
                new ObjectParameter("fileno", fileno) :
                new ObjectParameter("fileno", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Test_FileInstallments_Result>("Test_FileInstallments", filenoParameter);
        }
    
        public virtual int Test_InstallmentsAdjustment(Nullable<long> fileno)
        {
            var filenoParameter = fileno.HasValue ?
                new ObjectParameter("fileno", fileno) :
                new ObjectParameter("fileno", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Test_InstallmentsAdjustment", filenoParameter);
        }
    
        public virtual int Test_PendingInst(Nullable<long> fileno)
        {
            var filenoParameter = fileno.HasValue ?
                new ObjectParameter("fileno", fileno) :
                new ObjectParameter("fileno", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Test_PendingInst", filenoParameter);
        }
    
        public virtual ObjectResult<test_proc_Result> test_proc()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<test_proc_Result>("test_proc");
        }
    
        public virtual int Test_Sp_Update_InvQty(Nullable<long> id, Nullable<decimal> qty)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("qty", qty) :
                new ObjectParameter("qty", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Test_Sp_Update_InvQty", idParameter, qtyParameter);
        }
    
        public virtual int Test_updatebalance(Nullable<decimal> amt, Nullable<decimal> t_amt, Nullable<decimal> r_amt, Nullable<decimal> d_amt, Nullable<long> fileid, string mod, Nullable<int> inst, Nullable<System.DateTime> booking_date, Nullable<decimal> payment_Amt)
        {
            var amtParameter = amt.HasValue ?
                new ObjectParameter("amt", amt) :
                new ObjectParameter("amt", typeof(decimal));
    
            var t_amtParameter = t_amt.HasValue ?
                new ObjectParameter("T_amt", t_amt) :
                new ObjectParameter("T_amt", typeof(decimal));
    
            var r_amtParameter = r_amt.HasValue ?
                new ObjectParameter("r_amt", r_amt) :
                new ObjectParameter("r_amt", typeof(decimal));
    
            var d_amtParameter = d_amt.HasValue ?
                new ObjectParameter("d_amt", d_amt) :
                new ObjectParameter("d_amt", typeof(decimal));
    
            var fileidParameter = fileid.HasValue ?
                new ObjectParameter("fileid", fileid) :
                new ObjectParameter("fileid", typeof(long));
    
            var modParameter = mod != null ?
                new ObjectParameter("mod", mod) :
                new ObjectParameter("mod", typeof(string));
    
            var instParameter = inst.HasValue ?
                new ObjectParameter("inst", inst) :
                new ObjectParameter("inst", typeof(int));
    
            var booking_dateParameter = booking_date.HasValue ?
                new ObjectParameter("booking_date", booking_date) :
                new ObjectParameter("booking_date", typeof(System.DateTime));
    
            var payment_AmtParameter = payment_Amt.HasValue ?
                new ObjectParameter("payment_Amt", payment_Amt) :
                new ObjectParameter("payment_Amt", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Test_updatebalance", amtParameter, t_amtParameter, r_amtParameter, d_amtParameter, fileidParameter, modParameter, instParameter, booking_dateParameter, payment_AmtParameter);
        }
    
        public virtual int Test_UpdateBuilding_installment(string ids)
        {
            var idsParameter = ids != null ?
                new ObjectParameter("ids", ids) :
                new ObjectParameter("ids", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Test_UpdateBuilding_installment", idsParameter);
        }
    
        public virtual int Test_UpdateBuilding_NotPaidinstallment(string ids)
        {
            var idsParameter = ids != null ?
                new ObjectParameter("ids", ids) :
                new ObjectParameter("ids", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Test_UpdateBuilding_NotPaidinstallment", idsParameter);
        }
    
        public virtual int Test_updateinstallment(string ids)
        {
            var idsParameter = ids != null ?
                new ObjectParameter("ids", ids) :
                new ObjectParameter("ids", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Test_updateinstallment", idsParameter);
        }
    
        public virtual int Test_updateNotPaidinstallment(string ids)
        {
            var idsParameter = ids != null ?
                new ObjectParameter("ids", ids) :
                new ObjectParameter("ids", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Test_updateNotPaidinstallment", idsParameter);
        }
    
        public virtual int Test_UpdateOldPlots(string plotnum, string sec, string oldplotnum, Nullable<long> blockid)
        {
            var plotnumParameter = plotnum != null ?
                new ObjectParameter("plotnum", plotnum) :
                new ObjectParameter("plotnum", typeof(string));
    
            var secParameter = sec != null ?
                new ObjectParameter("sec", sec) :
                new ObjectParameter("sec", typeof(string));
    
            var oldplotnumParameter = oldplotnum != null ?
                new ObjectParameter("oldplotnum", oldplotnum) :
                new ObjectParameter("oldplotnum", typeof(string));
    
            var blockidParameter = blockid.HasValue ?
                new ObjectParameter("blockid", blockid) :
                new ObjectParameter("blockid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Test_UpdateOldPlots", plotnumParameter, secParameter, oldplotnumParameter, blockidParameter);
        }
    
        public virtual int Test_UpdateOldPlotsSher(string plotnum, string oldplotnum, Nullable<long> blockid)
        {
            var plotnumParameter = plotnum != null ?
                new ObjectParameter("plotnum", plotnum) :
                new ObjectParameter("plotnum", typeof(string));
    
            var oldplotnumParameter = oldplotnum != null ?
                new ObjectParameter("oldplotnum", oldplotnum) :
                new ObjectParameter("oldplotnum", typeof(string));
    
            var blockidParameter = blockid.HasValue ?
                new ObjectParameter("blockid", blockid) :
                new ObjectParameter("blockid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Test_UpdateOldPlotsSher", plotnumParameter, oldplotnumParameter, blockidParameter);
        }
    
        public virtual int Test_UpdatePendingPlotinstallment(Nullable<long> plotid)
        {
            var plotidParameter = plotid.HasValue ?
                new ObjectParameter("plotid", plotid) :
                new ObjectParameter("plotid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Test_UpdatePendingPlotinstallment", plotidParameter);
        }
    
        public virtual int Test_UpdatePlotinstallment(string ids)
        {
            var idsParameter = ids != null ?
                new ObjectParameter("ids", ids) :
                new ObjectParameter("ids", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Test_UpdatePlotinstallment", idsParameter);
        }
    
        public virtual int Test_UpdatePlotsNotPaidinstallment(string ids)
        {
            var idsParameter = ids != null ?
                new ObjectParameter("ids", ids) :
                new ObjectParameter("ids", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Test_UpdatePlotsNotPaidinstallment", idsParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Update_company_depart_des(string cDD, Nullable<long> id)
        {
            var cDDParameter = cDD != null ?
                new ObjectParameter("CDD", cDD) :
                new ObjectParameter("CDD", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Update_company_depart_des", cDDParameter, idParameter);
        }
    
        public virtual int updatebalance(Nullable<decimal> amt, Nullable<long> fileid)
        {
            var amtParameter = amt.HasValue ?
                new ObjectParameter("amt", amt) :
                new ObjectParameter("amt", typeof(decimal));
    
            var fileidParameter = fileid.HasValue ?
                new ObjectParameter("fileid", fileid) :
                new ObjectParameter("fileid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updatebalance", amtParameter, fileidParameter);
        }
    
        public virtual int updateinstallment(string ids)
        {
            var idsParameter = ids != null ?
                new ObjectParameter("ids", ids) :
                new ObjectParameter("ids", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateinstallment", idsParameter);
        }
    
        public virtual int updreceiptno(string rec, Nullable<long> id)
        {
            var recParameter = rec != null ?
                new ObjectParameter("rec", rec) :
                new ObjectParameter("rec", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updreceiptno", recParameter, idParameter);
        }
    }
}
