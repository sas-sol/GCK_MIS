@model MeherEstateDevelopers.Models.ElectricityChargesDetails
<div class="form-row">
    <div class='col-md-3'>
        <div class="layers bd bgc-white p-10 mt-2" style="text-align:center">
            <div class="layer w-100" style="border-bottom:1px solid #ccc">

                @if (ViewBag.Block != null)
                {
                    <h5 class="lh-1">@ViewBag.Block  Block</h5>
                }
                else
                {
                    <h5 class="lh-1">@ViewBag.meherestatedevelopers</h5>
                }

            </div>
            <div class="layer w-100 row p-5">
                <div class="col-md-6">
                    <h6 class="lh-1">Receiveable</h6>
                </div>
                <div class="col-md-6">
                    <h6 class="lh-1">Received</h6>
                </div>
            </div>
            <div class="layer w-100 row p-5">
                <div class="col-md-6">
                    <h6 class="lh-1">@string.Format("{0:n0}", Model.Receiveable)</h6>
                </div>
                <div class="col-md-6">
                    <h6 class="lh-1">@string.Format("{0:n0}", Model.Received)</h6>
                </div>
            </div>
        </div>
    </div>
    <div class='col-md-5'>
        <div class="layers bd bgc-white p-10 mt-2" style="text-align:center">
            <div class="layer w-100" style="border-bottom:1px solid #ccc">
                <h5 class="lh-1">Residential </h5>
            </div>
            <div class="layer w-100 row p-5">
                <div class="col-md-6">
                    <h6 class="lh-1">Receiveable</h6>
                </div>
                <div class="col-md-6">
                    <h6 class="lh-1">Received</h6>
                </div>
            </div>
            <div class="layer w-100 row p-5">
                <div class="col-md-6">
                    <h6 class="lh-1">@string.Format("{0:n0}", Model.Resi_Receiable)</h6>
                </div>
                <div class="col-md-6">
                    <h6 class="lh-1">@string.Format("{0:n0}", Model.Resi_Received)</h6>
                </div>
            </div>
        </div>
    </div>
    <div class='col-md-3'>
        <div class="layers bd bgc-white p-10 mt-2" style="text-align:center">
            <div class="layer w-100" style="border-bottom:1px solid #ccc">
                <h5 class="lh-1">Commercial </h5>
            </div>
            <div class="layer w-100 row p-5">
                <div class="col-md-6">
                    <h6 class="lh-1">Receiveable</h6>
                </div>
                <div class="col-md-6">
                    <h6 class="lh-1">Received</h6>
                </div>
            </div>
            <div class="layer w-100 row p-5">
                <div class="col-md-6">
                    <h6 class="lh-1">@string.Format("{0:n0}", Model.Com_Receiable)</h6>
                </div>
                <div class="col-md-6">
                    <h6 class="lh-1">@string.Format("{0:n0}", Model.Com_Received)</h6>
                </div>
            </div>
        </div>
    </div>

</div>
<div class="form-row">
    <div id="transfercontainer3" class="col-md-6" style="min-width: 310px; height: 400px; max-width: 600px; margin: 0 auto">
    </div>
    <div id="transfercontainer4" class="col-md-6" style="min-width: 310px; height: 400px; max-width: 600px; margin: 0 auto">
    </div>
</div>

<script>


// Build the chart 1
    Highcharts.chart('transfercontainer3', {
    chart: {
        plotBackgroundColor: null,
        plotBorderWidth: null,
        plotShadow: false,
        type: 'pie'
    },
    title: {
        text: 'Receivables'
    },
    tooltip: {
        pointFormat: '{series.name}: <b>{point.y:,.0f}</b>'
    },
    plotOptions: {
        pie: {
            allowPointSelect: true,
            cursor: 'pointer',
            dataLabels: {
                enabled: true,
                format: '<b>{point.name}</b>: {point.y:,.0f}',
                style: {
                    color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black'
                },
                connectorColor: 'silver'
            }
        }
    },
    series: [{
        name: 'Electricity Charges',
        data: @Html.Raw(Json.Encode(Model.totalcounter1))
    }]
});

// Build the chart 2
    Highcharts.chart('transfercontainer4', {
    chart: {
        plotBackgroundColor: null,
        plotBorderWidth: null,
        plotShadow: false,
        type: 'pie'
    },
    title: {
        text: 'Received'
    },
    tooltip: {
        pointFormat: '{series.name}: <b>{point.y:,.0f}</b>'
    },
    plotOptions: {
        pie: {
            allowPointSelect: true,
            cursor: 'pointer',
            dataLabels: {
                enabled: true,
                format: '<b>{point.name}</b>: {point.y:,.0f}',
                style: {
                    color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black'
                },
                connectorColor: 'silver'
            }
        }
    },
    series: [{
        name: 'Electricity Charges',
        data: @Html.Raw(Json.Encode(Model.totalcounter2))
    }]
});
</script>
