@model MeherEstateDevelopers.Models.BankAccountsMapper
<h4>Bank And Account Numbers</h4>
<div class="col-md-12">
    <div class="form-row row">
        <div class="col-md-6" @*id="bankaccount"*@>
            <h5>Bank Accounts Mapping</h5>
            @foreach (var g in Model.BankAccountsCOA.GroupBy(x=> x.BankName))
            {
            <div>
                <h6>@g.Key</h6>
                @foreach (var item in g)
                {
                <div class="form-row dealdiv" id="@item.BankId">
                    <div class="form-group col-md-6">
                        <h6>@item.BankAccountNo</h6>
                    </div>
                    <div class="form-group col-md-6">
                        <select class="form-control bank-coa bank-acc-set">
                            @if (item.AccountId != null)
                            {
                                <option value="@item.AccountId">@item.AccountCode - @item.Head_Name</option>
                            }
                        </select>
                    </div>
                </div>
                }
            </div>
            }
        </div>
        <div class="col-md-6">
            <div class="from-row row p-20">
                <div class="col-md-12">
                    <h5>Add New Bank account</h5>
                </div>
                <div class="form-group col-md-5">
                    <label>Bank</label>
                    @Html.DropDownList("Bank", null, "Choose..", new { @class = "form-control bank" })
                </div>
                <div class="form-group col-md-5">
                    <label>Account</label>
                    <input class="form-control" id="acnt" placeholder="" />
                </div>
                <div class="form-group col-md-2">
                    <label>-----</label>
                    <input class="btn btn-primary" type="button" id="sav-ban-acc" value="Add" />
                </div>
            </div>
            <div id="bankaccount">
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th>Bank</th>
                            <th>Account Number</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var g in Model.BankAccounts.GroupBy(x => x.Bank))
                        {
                            int i = 1;
                            foreach (var item in g)
                            {
                                <tr>
                                    @if (i == 1)
                                    {
                                        <td rowspan="@g.Count()">@g.Key</td>
                                        <td>@item.Account_Number</td>
                                        <td>
                                            <i class="fas fa-trash-alt Bank-rmv pointer" id="@item.Id"></i>
                                        </td>
                                    }
                                    else
                                    {
                                        <td>@item.Account_Number</td>
                                        <td>
                                            <i class="fas fa-trash-alt Bank-rmv pointer" id="@item.Id"></i>
                                        </td>
                                    }

                                </tr>
                                i++;
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<script>
    $('.bank-coa').select2({
        placeholder: "Search for Account",
        ajax: {
            url: '/AccountHeads/GetHead/',
            dataType: 'json',
            params: {
                contentType: 'application/json; charset=utf-8'
            },
            data: function (params) {
                return {
                    q: params.term// search term
                };
            },
            processResults: function (data) {
                // Transforms the top-level key of the response object from 'items' to 'results'
                return {
                    results: $.map(data.items, function (item) {
                        return {
                            text: item.Parent,
                            children: [{
                                id: item.id,
                                text: item.text
                            }]
                        }
                    })
                };
            }
        }
    });
</script>
