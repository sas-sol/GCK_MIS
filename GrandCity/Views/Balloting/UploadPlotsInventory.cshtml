
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.13.5/xlsx.full.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.13.5/jszip.js"></script>
<script>
    var AllData;
    var dataForUpload = [];
    var ExcelToJSON = function () {
        this.parseExcel = function (file) {
            var reader = new FileReader();
            reader.onload = function (e) {
                var data = e.target.result;
                var workbook = XLSX.read(data, {
                    type: 'binary'
                });
                workbook.SheetNames.forEach(function (sheetName) {
                    var XL_row_object = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[sheetName]);
                    //AllData = JSON.stringify(XL_row_object);
                    AllData = XL_row_object;
                })
            };
            reader.onerror = function (ex) {
                console.log(ex);
            };
            reader.readAsBinaryString(file);
        };
    };
    function handleFileSelect(evt) {
        var xl2json = new ExcelToJSON();
        xl2json.parseExcel(fileUpload.files[0]);
    }
    function Upload() {
        //Reference the FileUpload element.
        var fileUpload = document.getElementById("fileUpload");
        handleFileSelect(fileUpload);
        //Validate whether File is valid Excel file.
        var regex = /^([a-zA-Z0-9\s_\\.\-:])+(.xls|.xlsx)$/;
        if (regex.test(fileUpload.value.toLowerCase())) {
            if (typeof (FileReader) != "undefined") {
                var reader = new FileReader();

                //For Browsers other than IE.
                if (reader.readAsBinaryString) {
                    reader.onload = function (e) {
                        ProcessExcel(e.target.result);
                    };
                    reader.readAsBinaryString(fileUpload.files[0]);
                } else {
                    //For IE Browser.
                    reader.onload = function (e) {
                        var data = "";
                        var bytes = new Uint8Array(e.target.result);
                        for (var i = 0; i < bytes.byteLength; i++) {
                            data += String.fromCharCode(bytes[i]);
                        }
                        ProcessExcel(data);
                    };
                    reader.readAsArrayBuffer(fileUpload.files[0]);
                }
            } else {
                alert("This browser does not support HTML5.");
            }
        } else {
            alert("Please upload a valid Excel file.");
        }
    };
    function ProcessExcel(data) {
        //Read the Excel File data.
        var workbook = XLSX.read(data, {
            type: 'binary'
        });

        //Fetch the name of First Sheet.
        var table = document.createElement("table");
        table.setAttribute('class', 'table');
        table.setAttribute('class', 'table-bordered');
        table.setAttribute('style', 'width:100%');
        table.border = "1";

        //Add the header row.
        var row = table.insertRow(-1);

        //Add the header cells.
        var headerCell = document.createElement("th");
        headerCell.innerHTML = "SR";
        row.appendChild(headerCell);

        var headerCell = document.createElement("th");
        headerCell.innerHTML = "BLOCK";
        row.appendChild(headerCell);

        var headerCell = document.createElement("th");
        headerCell.innerHTML = "PLOT";
        row.appendChild(headerCell);

        var headerCell = document.createElement("th");
        headerCell.innerHTML = "TYPE";
        row.appendChild(headerCell);

        var headerCell = document.createElement("th");
        headerCell.innerHTML = "SECTOR";
        row.appendChild(headerCell);

        headerCell = document.createElement("th");
        headerCell.innerHTML = "LOCATION";
        row.appendChild(headerCell);

        headerCell = document.createElement("th");
        headerCell.innerHTML = "SIZE";
        row.appendChild(headerCell);

        headerCell = document.createElement("th");
        headerCell.innerHTML = "DIMENSION";
        row.appendChild(headerCell);

        headerCell = document.createElement("th");
        headerCell.innerHTML = "ROAD";
        row.appendChild(headerCell);

        headerCell = document.createElement("th");
        headerCell.innerHTML = "STATUS";
        row.appendChild(headerCell);

        headerCell = document.createElement("th");
        headerCell.innerHTML = "REF";
        row.appendChild(headerCell);


        let ind = 0;
        for (ind = 0; ind < workbook.SheetNames.length; ind++) {
            var firstSheet = workbook.SheetNames[ind];

            //Read all rows from First Sheet into an JSON array.
            var excelRows = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[firstSheet]);

            console.log(dataForUpload);

            //saving json for uploading data
            $.each(excelRows, function (t_index, t_value) {
                dataForUpload.push(t_value);
            });

            //if (dataForUpload.length <= 0) {
            //    dataForUpload = excelRows
            //}
            //else {
            //    dataForUpload.concat(excelRows);
            //}

            //Create a HTML Table element.

            //Add the data rows from Excel file.
            for (var i = 0; i < excelRows.length; i++) {
                //Add the data row.
                var row = table.insertRow(-1);

                //Add the data cells.
                var cell = row.insertCell(-1);
                cell.innerHTML = (excelRows[i].SR == "") ? "-" : excelRows[i].SR.trim();

                cell = row.insertCell(-1);
                cell.innerHTML = (excelRows[i].BLOCK == undefined) ? "-" : excelRows[i].BLOCK.trim();

                cell = row.insertCell(-1);
                cell.innerHTML = (excelRows[i].PLOT == undefined) ? "-" : excelRows[i].PLOT.trim();

                cell = row.insertCell(-1);
                cell.innerHTML = (excelRows[i].SECTOR == undefined) ? "-" : excelRows[i].SECTOR.trim();

                cell = row.insertCell(-1);
                cell.innerHTML = (excelRows[i].TYPE == undefined) ? "-" : excelRows[i].TYPE.trim();

                cell = row.insertCell(-1);
                cell.innerHTML = (excelRows[i].LOCATION == undefined) ? "-" : excelRows[i].LOCATION.trim();

                cell = row.insertCell(-1);
                cell.innerHTML = (excelRows[i].SIZE == undefined) ? "-" : excelRows[i].SIZE.trim();

                cell = row.insertCell(-1);
                cell.innerHTML = (excelRows[i].DIMENSION == undefined) ? "-" : excelRows[i].DIMENSION.trim();

                cell = row.insertCell(-1);
                cell.innerHTML = (excelRows[i].ROAD == undefined) ? "-" : excelRows[i].ROAD.trim();

                cell = row.insertCell(-1);
                cell.innerHTML = (excelRows[i].STATUS == undefined) ? "-" : excelRows[i].STATUS.trim();

                cell = row.insertCell(-1);
                cell.innerHTML = (excelRows[i].REF == undefined) ? "-" : excelRows[i].REF.trim();
            }
        }

        var dvExcel = document.getElementById("dvExcel");
        dvExcel.innerHTML = "";
        dvExcel.appendChild(table);
    };
    //
</script>
<input type="file" id="fileUpload" />
<input type="button" class="btn btn-info" id="upload" value="Verify File Data" onclick="Upload()" />
<input type="button" class="btn btn-success upld-plts-inventroy-btn" value="Upload Inventory" />
<br />
<hr />
<a href="/images/Ballot Format.xls" style=" background-color: #4caf50;border-color: #4caf50; text-decoration-color:white; color: white !important;text-align: center;text-decoration: none;display: inline-block;border-radius: .25rem;display: inline-block;font-weight: 400;text-align: center;white-space: nowrap;border: 1px solid transparent;padding: 6px 12px;padding: .375rem .75rem;font-size: 14px;font-size: .875rem;line-height: 1.5;border-radius: .25rem;" rel="nofollow">Download Sample Excel File Here</a>
<hr />
<div id="dvExcel"></div>

<script>
    $('.upld-plts-inventroy-btn').unbind().click(function () {
        let conf = confirm('Are you sure you want to upload this plot inventory?');
        if (!conf) {
            return;
        }
        ShowFullScreenLoader();
        $.ajax({
            type: "POST",
            url: "/Balloting/SavePlotsInventory/",
            contentType: "application/json",
            traditional: true,
            beforeSend: function () {

            },
            complete: function () {

            },
            data: JSON.stringify({ plotsData: dataForUpload }),
        }).done(function (data) {
            HideFullScreenLoader();
            if (data == true) {
                alert('Plots inventory has been added.');
                closeRightPopup();
            }
            else {
                alert('Failed to save this plots inventory.');
            }
        });

    });
</script>
