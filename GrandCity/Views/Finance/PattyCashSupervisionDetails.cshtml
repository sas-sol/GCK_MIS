@model IEnumerable<MeherEstateDevelopers.Models.Sp_Get_PattyCashItems_Result>
@{ if (User.IsInRole("Administrator"))
    {
        Layout = "~/Views/Shared/_AdminLayout.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/_StaffLayout.cshtml";
    }
    var stat = Model.Select(x => x.Status).FirstOrDefault();
    var Date = Model.Select(x => x.CreatedBy_Date).FirstOrDefault();
    var Name = Model.Select(x => x.CreatedBy_Name).FirstOrDefault();
    var ap_Date = Model.Select(x => x.ApprovedBy_Date).FirstOrDefault();
    var ap_Name = Model.Select(x => x.ApprovedBy_Name).FirstOrDefault();
}
<div class="bgc-white bd bdrs-3 p-20 mB-20">
    <input type="hidden" value="@Model.Select(x => x.Group_Id).FirstOrDefault()" class="transaction" />
    <div class="col-md-12">
        <div class="form-row">
            <div class="form-group col-md-12">
                <h5>Petty Cash Details</h5>
            </div>
            <div class="form-group col-md-3">
                <label>Created By</label>
                <h5>@Name</h5>
            </div>
            <div class="form-group col-md-3">
                <label>Date</label>
                <h5>@string.Format("{0:dd-MMM-yyyy}", Date)</h5>
            </div>
            <div class="form-group col-md-3">
                <label>Approved By</label>
                @if (ap_Name == null)
                {
                    <h5>-</h5>
                }
                else
                {
                    <h5>@ap_Name</h5>
                }
            </div>
            <div class="form-group col-md-3">
                <label>Approved Date</label>
                @if (ap_Date == null)
                {
                    <h5>-</h5>
                }
                else
                {
                    <h5>@string.Format("{0:dd-MMM-yyyy}", ap_Date)</h5>
                }
            </div>
        </div>
    </div>
    <table class="table table-bordered">
        <thead>
            <tr>
                <th width="5%">Sr</th>
                <th>Description</th>
                <th width="10%">Amount</th>
                <th width="10%">Date</th>
                <th width="10%">Is Food</th>
            </tr>
        </thead>
        <tbody>
            @{ int sr = 1;}
            @foreach (var item in Model)
            {
                <tr>
                    <td>@sr</td>
                    <td>@item.Description</td>
                    <td>@string.Format("{0:n0}", item.Amount)</td>
                    <td>@string.Format("{0:dd-MMM-yyyy}", item.Date)</td>
                    <td>
                        @if (item.IsFood == true)
                        {
                            <i class="ti-check" style="color:green"></i>
                        }
                    </td>
                </tr>
                sr++;
            }
        </tbody>
        <tfoot>
            <tr>
                <th colspan="2" style="text-align:right;margin-right:5px">Grand Total</th>
                <th colspan="3" id="total-amt">@string.Format("{0:n0}", Model.Sum(x => x.Amount))</th>
            </tr>
        </tfoot>
    </table>

    <hr />



    <h4 style="text-align:center">Account Entry</h4>
    <div class="row" id="ad-iven-stock">
        <div class="col-md-12 cal" id="add-inv-1">
            <div class="form-row">
                <span class=" col-md-2 add-inven-counter" style="margin-top: 35px;font-size: 15px;width:35px"></span>
                <div class="form-group col-md-8">
                    <label>Description</label>
                    <input type="text" class="form-control Name" maxlength="250" name="Name" data-id="1" required />
                </div>
            </div>

            <div class="form-row">
                <div class="col-md-5"></div>
                <div class="col-md-3"><h6>Head</h6></div>
                <div class="col-md-1"><h6>Debit</h6></div>
                <div class="col-md-1"><h6>Credit</h6></div>
            </div>
            <div class="dr-line">
                <div class="form-row dr-row dr-row-1">
                    <div class="form-group col-md-5"><i class="ti-plus  add-pt-dr-row" style="float:right;margin-top:10px;font-size:12px"></i></div>
                    <div class="form-group col-md-3">
                        <select class="form-control acc-head searchbox drhead" data-id="1">
                        </select>
                    </div>
                    <div class="form-group col-md-1">
                        <input type="text" class="form-control coma " value="@string.Format("{0:n0}", Model.Sum(x => x.Amount))" placeholder="Amount">
                        <input type="hidden" id="" class="amt Rate dr" data-id="1" value="@Model.Sum(x => x.Amount)" required>
                    </div>
                </div>
            </div>
            <div class="cr-line">
                <div class="form-row cr-row cr-row-1">
                    <div class="form-group col-md-5">@*<i class="ti-plus add-cr-row" style="float:right;margin-top:10px;font-size:12px"></i>*@</div>
                    <div class="form-group col-md-3">
                        <select class="form-control vendor-eml"></select>
                    </div>
                    <div class="form-group col-md-1"></div>
                    <div class="form-group col-md-1">
                        <input type="text" class="form-control coma " placeholder="Amount" value="@string.Format("{0:n0}", Model.Sum(x => x.Amount))" readonly>
                        <input type="hidden" id="" class="amt Rate cr" data-id="1" value="@Model.Sum(x => x.Amount)" readonly>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <hr />
    <div><button class="btn btn-primary rec-pet-ent">Record Entries</button></div>
    
    <div class="clearfix"></div>
</div>
<script>
    $(document).ready(function () {

        $('.vendor-eml').select2({
            //dropdownParent: $('#Modal'),
            placeholder: "Choose a Payee",
            ajax: {
                url: '/Finance/PattyCashEmployeeSearch/',
                dataType: 'json',
                params: {
                    contentType: 'application/json; charset=utf-8'
                },
                quietMillis: 100,
                data: function (params) {
                    var query = {
                        s: params.term,
                        type: 'public'
                    }
                    // Query parameters will be ?search=[term]&type=public
                    return query;
                },
                processResults: function (data) {
                    console.log(data);
                    // Transforms the top-level key of the response object from 'items' to 'results'
                    return {
                        results: data
                    };
                }
            }
        });

        $('.drhead').select2({
            //dropdownParent: $('.ptc-line-item'),
            placeholder: "Search for Product / Services",
            ajax: {
                url: '/AccountHeads/GetHeadInventoryExpenses/',
                dataType: 'json',
                params: {
                    contentType: 'application/json; charset=utf-8'
                },
                data: function (params) {
                    return {
                        q: params.term// search term
                    };
                },
                processResults: function (data) {
                    return {
                        results: $.map(data.items, function (item) {
                            return {

                                text: item.Parent,
                                children: [{
                                    id: item.id,
                                    text: item.text
                                }]
                            }
                        })

                    };

                }
            }
        });
    });



    
    $(document).on("click", ".add-pt-dr-row", function () {
        var numItems = $('.cr-row').length + 1;
        var html = '<div class="form-row  dr-row dr-row-' + numItems + '"></span><div class="form-group col-md-5"><i class="ti-minus rm-dr-row" style="float:right;margin-top:10px"></i></div><div class="form-group col-md-3">' +
            '<select class="form-control acc-head searchbox drhead"></select></div><div class="form-group col-md-1"><input type="text" class="form-control coma " placeholder="Amount">' +
            '<input type="hidden" id="" class="amt Rate dr" data-id="1" required></div></div>';
        var id = $(this).closest(".cal").attr("id");
        $('#' + id + ' .dr-line ').append(html);
        //linerInitHeads(numItems, 'dr-row-');
        $('#' + id + ' .searchbox').select2({
            //dropdownParent: $('#Modal'),
            placeholder: "Search for Product / Services",
            ajax: {
                url: '/AccountHeads/GetHeadInventoryExpenses/',
                dataType: 'json',
                params: {
                    contentType: 'application/json; charset=utf-8'
                },
                data: function (params) {
                    return {
                        q: params.term// search term
                    };
                },
                processResults: function (data) {
                    return {
                        results: $.map(data.items, function (item) {
                            return {

                                text: item.Parent,
                                children: [{
                                    id: item.id,
                                    text: item.text
                                }]
                            }
                        })

                    };

                }
            }
        });
    });
    $('.rec-pet-ent').click(function () {

        var group = $('.transaction').val();
        var InventoryCounter = $('.cr-row').length + 1;
        for (var i = 1; i <= InventoryCounter; i++) {
            var dr = 0, cr = 0;

            $("#add-inv-" + i + " .dr").each(function () {
                var dr_amt = RemoveComma($(this).val());
                if (dr_amt > 0) {
                    dr = dr + parseInt(dr_amt);
                }
                else {
                    alert("You Cannot Submit Empty Fields");
                    return false;
                }
            });
            $("#add-inv-" + i + " .cr").each(function () {
                var cr_amt = RemoveComma($(this).val());
                if (cr_amt > 0) {
                    cr = cr + parseInt(cr_amt);
                }
                else {
                    alert("You Cannot Submit Empty Fields");
                    return false;
                }
            });
            
            if (dr == cr) {
                continue;
            }
            else {
                alert("Debit & Credit Values are not Matching");
                return false;
            }
        }

        var des = $("#Description").val();
        var Amt = $("#amt").val();
        InventoryArray = [];
        for (var i = 1; i <= InventoryCounter; i++) {
            var Item_Name = $(".Name").val();

            $("#add-inv-" + i + " .dr-row").each(function () {
                var dat = $(this).find(".acc-head").select2('data')
                var dataset =
                {
                    Item_Name: Item_Name,
                    Rate: 0,
                    Quantity: 0,
                    UOM: "",
                    Amount: 0,
                    Account_Head: dat[0].text,
                    Account_Head_Id: dat[0].id,
                    Debit: $(this).find(".dr").val(),
                    Credit: $(this).find(".cr").val(),
                    Line: i
                };
                InventoryArray.push(dataset);
            });
            $("#add-inv-" + i + " .cr-row").each(function () {
                var dat = $(this).find(".acc-head").select2('data')
                var dataset =
                {
                    Item_Name: Item_Name,
                    Rate: 0,
                    Quantity: 0,
                    UOM: "",
                    Amount: 0,
                    Account_Head: dat[0].text,
                    Account_Head_Id: dat[0].id,
                    Debit: $(this).find(".dr").val(),
                    Credit: $(this).find(".cr").val(),
                    Line: i
                };
                InventoryArray.push(dataset);
            });
        }
        if (confirm("Are you sure you want to Record Settlements")) {
            $.ajax({
                type: "POST",
                url: '/Finance/RecordSettlements/',
                data: { Details: InventoryArray, grpId: group },
                success: function (data) {
                    if (data) {
                        alert("Settlements Recorded");
                        window.close();
                    }
                    else {
                        alert("Can not make Transaction at the Moment");
                    }

                }
                , error: function (xmlhttprequest, textstatus, message) {
                    if (textstatus === "timeout") {
                        alert("got timeout");
                    } else {
                        alert(textstatus);
                    }
                }
            });
        }
    });

</script>
<style>
    .text-box {
        width: 100%;
        border: none;
        height: 40px;
    }

    td {
        padding: 1px !important;
        text-align: center;
        vertical-align: middle !important;
    }

    .highlight_row {
        background-color: #CCC;
        color: #000;
    }
</style>
