@model IEnumerable<MeherEstateDevelopers.Models.Sp_Get_Approved_Salaries_Result>
<style>
    table tr, table td, table th {
        padding: 2px !important;
        color: black !important;
    }

    @@media print {
        table.salary-id tr td, table.print-friendly tr th {
            page-break-inside: avoid;
        }

        #sumary {
            font-size: 13px
        }
    }
</style>
<div style="width:100%">

    <img src="~/assets/static/images/meherestate-simple.png" style="float:left;margin: 1%;width: 100px;" />

    <span style="float:right;width:150px;text-align:center">Powered by<img src="~/assets/static/images/sas.png" style="width:100px;height:60px;margin:0.5%" /></span>
</div>
<div id="">


    @foreach (var g in Model.GroupBy(x => new { x.Name ,x.CompanyName}))
    {
        int sr = 1;
    <table id="salary-dat" class="table table-striped table-bordered " cellspacing="0" width="100%">
        <thead class="thead-dark">

            @if (string.IsNullOrEmpty(g.Key.Name) || string.IsNullOrWhiteSpace(g.Key.Name))
            {
            @*<td colspan="10"><b style="font-size:21px;text-align:center"></b></td>*@
            <tr>
                <th colspan="14" style="font-size:21px;text-align:center"><b>@g.Key.CompanyName Executive</b> </th>
            </tr>
        }
        else
        {
            @*<td colspan="10"><b style="font-size:21px;text-align:center">@g.Key.CompanyName- @g.Key.Name</b></td>*@


            <tr>
                <th colspan="14" style="font-size:21px;text-align:center"><b>@g.Key.CompanyName- @g.Key.Name</b> </th>
            </tr>

        }
            <tr>
                <th>Sr.</th>
                <th>Code</th>
                <th>Name</th>
                <th>Designation</th>
                <th>Joining Date</th>
                <th>Basic Salary</th>
                <th>Allownces/Bonus</th>
                <th>Tax Ded</th>
                <th>Loan</th>
                <th>Advance</th>
                <th>Absentee</th>
                <th>Extra Fuel Charges</th>
                <th>Other Ded</th>
                <th>Net Payable</th>
            </tr>
            </thead>
            <tbody>
                @foreach (var item in g.OrderByDescending(x => x.Grand_total))
                {
                    <tr class="fin-up-rec" id="@item.Id">
                        <td>@sr</td>
                        <td class="col-mod">@item.Employee_code</td>
                        <td class="col-mod">@item.Employee_Name</td>
                        <td class="col-mod">@item.Designation_name</td>
                        <td class="col-mod ">@string.Format("{0: dd-MMM-yyyy }", item.Emp_Date_Of_Joining)</td>
                        <td class="col-mod s-read" align="right">@String.Format("{0:n0}", item.Basic_salary)</td>
                        <td class="col-mod t_allownce" align="right"> @String.Format("{0:n0}", item.Allownces + item.Bonus)</td>
                        <td class="col-mod fin-dedc" align="right">@String.Format("{0:n0}", item.Ded_Tax * (-1))</td>
                        <td class="col-mod fin-dedc" align="right">@String.Format("{0:n0}", item.Ded_Loan)</td>
                        <td class="col-mod fin-dedc" align="right">@String.Format("{0:n0}", item.Ded_Advance)</td>
                        <td class="col-mod fin-dedc" align="right">@String.Format("{0:n0}", (item.Basic_salary / 30 * (item.Absentee)) - (item.Basic_salary / 30 * (item.Salary_Leaves)))</td>
                        <td class="col-mod fin-dedc" align="right">@String.Format("{0:n0}", item.Extra_Fuel_Charges * (-1))</td>
                        <td class="col-mod fin-dedc" align="right">@String.Format("{0:n0}", item.Ded_Other)</td>
                        <td class="col-mod GrndTot" align="right" style="font:bold"> @String.Format("{0:n0}", item.Grand_total)</td>
                    </tr>
                    sr++;
                }
                <tr class="" id="@g.Key.Name">
                    <td colspan="5" class="col-mod"></td>
                    <td align="right">@String.Format("{0:n0}", g.Select(x => x.Basic_salary).Sum())</td>
                    <td id="totl_allownce" align="right">@String.Format("{0:n0}", g.Select(x => x.Allownces).Sum() + g.Select(x => x.Bonus).Sum()) </td>
                    <td id="deduc_group" align="right">@String.Format("{0:n0}", g.Select(x => x.Ded_Tax * (-1)).Sum())</td>
                    <td id="deduc_group" align="right">@String.Format("{0:n0}", g.Select(x => x.Ded_Loan).Sum())</td>
                    <td id="deduc_group" align="right">@String.Format("{0:n0}", g.Select(x => x.Ded_Advance).Sum())</td>
                    <td id="deduc_group" align="right">@String.Format("{0:n0}", g.Select(x => (x.Basic_salary / 30 * (x.Absentee) - (x.Basic_salary / 30 * (x.Salary_Leaves)))).Sum())</td>
                    <td id="deduc_group" align="right">@String.Format("{0:n0}", g.Select(x => x.Extra_Fuel_Charges * (-1)).Sum())</td>
                    <td id="deduc_group" align="right">@String.Format("{0:n0}", g.Select(x => x.Ded_Other).Sum())</td>
                    <td align="right">@String.Format("{0:n0}", g.Select(x => x.Grand_total).Sum())</td>
                </tr>
            </tbody>

        </table>
        <div style="page-break-after:always"></div>

    }
    @*<table>
        <tfoot>
            <tr>
                <td class="col-mod">Gross Total</td>
                <td class="col-mod"></td>
                <td class="col-mod"></td>
                <td class="col-mod"></td>
                <td class="col-mod"></td>
                <td class="col-mod" align="right">@String.Format("{0:n0}", Model.Sum(x => x.Basic_salary))</td>
                <td class="col-mod" align="right">@String.Format("{0:n0}", Model.Sum(x => x.Allownces) + Model.Sum(x => x.Bonus))</td>
                <td class="col-mod" align="right">@String.Format("{0:n0}", Model.Sum(x => x.Deductions))</td>
                <td class="col-mod" align="right">@String.Format("{0:n0}", Model.Sum(x => x.Grand_total))</td>
                <td class="col-mod"></td>
            </tr>
        </tfoot>
    </table>*@
</div>