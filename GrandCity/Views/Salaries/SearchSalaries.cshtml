@model IEnumerable<MeherEstateDevelopers.Models.Sp_Get_SalariesList_Result>
<style>
    table thead tr th, table tbody tr td {
        font-size: 12px;
    }

    .scrolling-box {
        height: 740px;
        overflow-y: scroll;
        overflow-x: scroll;
        width: 100%;
    }
    .tableFixHead {
        overflow: auto;
        height: 700px;
    }

        .tableFixHead .ka th {
            position: sticky;
            top: 0;
        }
</style>
    <div class="bgc-white bdrs-3 mB-20">
        <h5>@Model.Select(x => x.Salary_Month.Value.ToString("yyyy MMMM")).FirstOrDefault()</h5>
        @*<button class="bnt btn-outline-dark prnt-req-btn">Show Print</button>*@
         
            <table id="salary-dat" class="table table-striped table-bordered " style="display:none;"  cellspacing="0" width="100%">

                <thead class="thead-dark ka">
                    <tr>
                        <th>Sr.</th>
                        <th>Code</th>
                        <th>Name</th>
                        <th>Designation</th>
                        <th>Basic Salary</th>
                        <th>Per Day Wage</th>
                        <th>Date Of Joining</th>
                        <th>No Of Days</th>
                        <th>Absentee</th>
                        <th>Leaves</th>
                        <th>Extra Days</th>
                        <th>No Of Worked Days</th>
                        <th>Allownces/Arrear</th>
                        <th>Extra Days Wage</th>
                        <th>Bonus DESC.</th>
                        <th>Bonus</th>
                        <th>Absentee Ded.</th>
                        <th>Loan/Advance</th>
                        <th>OverTime (Hrs)</th>
                        <th>OverTime Amount</th>
                        <th>Tax Ded</th>
                        <th>Other Ded</th>
                        <th>Net Payable</th>
                        <th>Status</th>
                        <th>Recv Amt</th>
                        <th>Actions</th>
                    </tr>
                </thead>

                @{
                    foreach (var g in Model.GroupBy(x => new { x.DepartmentName, x.DepartmentId }))
                    {

                        int sr = 1;
                     
                <thead class="">
                    <tr>
                        <th colspan="22" style="font-size:21px;text-align:center"> @g.Key.DepartmentName</th>
                    </tr>
                    <tr>
                        <th>Sr.</th>
                        <th>Code</th>
                        <th>Name</th>
                        <th>Designation</th>
                        <th>Basic Salary</th>
                        <th>Per Day Wage</th>
                        <th>Date Of Joining</th>
                        <th>No Of Days</th>
                        <th>Absentee</th>
                        <th>Leaves</th>
                        <th>Extra Days</th>
                        <th>No Of Worked Days</th>
                        <th>Allownces/Arrear</th>
                        <th>Extra Days Wage</th>
                        <th>Bonus DESC.</th>
                        <th>Bonus</th>
                        <th>Absentee Ded.</th>
                        <th>Loan/Advance</th>
                        <th>OverTime (Hrs)</th>
                        <th>OverTime Amount</th>
                        <th>Tax Ded</th>
                        <th>Other Ded</th>
                        <th>Net Payable</th>
                        <th>Status</th>
                        <th>Recv Amt</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                        <tbody>
                            @foreach (var item in g)
                            {
                            <tr class="" id="@item.Id">
                                <td class="">@sr</td>
                                <td>@item.Employee_code</td>
                                <td>@item.Employee_Name</td>
                                <td>@item.Designation_name</td>
                                <td class="basic_salary @item.DepartmentId-basicSalary" id="@item.DepartmentId">@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(item.Basic_salary)))</td>
                                <td class="">@( Math.Round(Convert.ToDecimal(item.Basic_salary / 30)) )</td>
                                <td style="font-weight:bold">@string.Format("{0: dd-MMM-yyyy}", item.Emp_Date_Of_Joining)</td>
                                <td>@item.No_Of_Days</td>
                                <td>@item.Absentee</td>
                                <td>@item.Salary_Leaves</td>
                                <td>@item.Extra_Working_Days</td>
                                <td>@(item.No_Of_Days - item.Absentee + item.Extra_Working_Days)</td>
                                <td class="t_allownce all_calc @item.DepartmentId-8" id="@item.DepartmentId"> @String.Format("{0:n0}", Math.Round(Convert.ToDecimal(item.Allownces))) </td>
                                <td class="extra_work @item.DepartmentId-Ewd" id="@item.DepartmentId"> @String.Format("{0:n0}", Math.Round(Convert.ToDecimal(item.Basic_salary / 30 * item.Extra_Working_Days))) </td>
                                <td>@item.Bonus_Description</td>
                                <td class="bonus @item.DepartmentId-bon" id="@item.DepartmentId">@string.Format("{0:n0}", Math.Round(Convert.ToDecimal(item.Bonus)))</td>
                                <td class="absn-cal @item.DepartmentId" id="@item.DepartmentId"><label>@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(item.Ded_Absentee)))</label></td>
                                <td><span>@String.Format("{0:n0}", Math.Round(Convert.ToDouble(item.Ded_Loan)))</span></td>
                                <th>@(item.OverTimeHrs ?? 0)</th>
                                <th>@(string.Format("{0:n0}", item.Overtime??0))</th>
                                <td><span>@String.Format("{0:n0}", Math.Round(Convert.ToDouble(item.Ded_Tax)))</span></td>
                                <td data-toggle="modal" data-target="#Modal" class="ti-pencil Salary_details" id="@item.DepartmentId"> @String.Format("{0:n0}", Math.Round(Convert.ToDouble(item.Ded_Other))) </td>
                                <td class="GrndTot @item.DepartmentId-2" style="font:bold">@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(item.Grand_total)))</td>
                                <td>
                                    @item.Status
                                </td>
                                <td>
                                </td>
                                @if (item.Status == "Step_4")
                                {
                                    <td><i class="fa fa-chevron-left pointer hld-sal-sdfkjhl" title="Hold Salary" data-tag="@item.Id"></i></td>
                                }
                                else
                                {
                                    <td>-</td>
                                }
                            </tr>
                                sr++;

                            }
                            <tr>
                                <th style="font-size:20px" colspan="4">Gross Total</th>
                                <th>@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(g.Select(x => x.Basic_salary).Sum())))</th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th id="totl_allownce" class="@g.Key.DepartmentId-9">@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(g.Select(x => x.Allownces).Sum()))) </th>
                                <th class="@g.Key.DepartmentId-1Ewd">@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(g.Select(x => x.Basic_salary / 30 * x.Extra_Working_Days).Sum())))</th>
                                <th></th>
                                <th class="@g.Key.DepartmentId-1depBo">@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(g.Select(x => x.Bonus).Sum())))</th>
                                <th class=" @g.Key.DepartmentId-1">@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(g.Select(x => x.Ded_Absentee).Sum()))) </th>
                                <th class=" @g.Key.DepartmentId-1">@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(g.Select(x => x.Ded_Loan).Sum()))) </th>
                                <th> </th>
                                <th>@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(g.Select(x => x.Overtime).Sum()))) </th>
                                <th class=" @g.Key.DepartmentId-1">@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(g.Select(x => x.Ded_Tax).Sum()))) </th>
                                <th class=" @g.Key.DepartmentId-1">@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(g.Select(x => x.Ded_Other).Sum()))) </th>
                                <th class=" @g.Key.DepartmentId-22">@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(g.Select(x => x.Grand_total).Sum())))</th>
                                <th></th>
                                <th>@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(g.Where(x => x.Status== "Received").Select(x=>x.Grand_total).Sum())))</th>
                                <th></th>
                            </tr>
                        </tbody>
                    }

                }
                <tfoot>
                    <tr>
                        <th style="font-size:20px" colspan="4">Total</th>
                        <th>@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(Model.Sum(x => x.Basic_salary))))</th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th class="total_allownces">@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(Model.Sum(x => x.Allownces))))</th>
                        <th class="total_extra_wage">@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(Model.Sum(x => x.Basic_salary / 30 * x.Extra_Working_Days))))</th>
                        <th></th>
                        <th>@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(Model.Sum(x => x.Bonus))))</th>
                        <th class="footer_ded_absen">@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(Model.Sum(x => x.Ded_Absentee))))</th>
                        <th class="footer_ded_absen">@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(Model.Sum(x => x.Ded_Loan))))</th>
                        <th></th>
                        <th>@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(Model.Select(x => x.Overtime).Sum()))) </th>
                        <th class="footer_ded_absen">@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(Model.Sum(x => x.Ded_Tax))))</th>
                        <th class="footer_ded_absen">@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(Model.Sum(x => x.Ded_Other))))</th>
                        <th class="NetPaysum">@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(Model.Sum(x => x.Grand_total))))</th>
                        <th></th>
                        <th>@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(Model.Where(x => x.Status == "Received").Select(x => x.Grand_total).Sum())))</th>
                        <th></th>
                        <th></th>
                    </tr>
                </tfoot>
            </table>
         


        <div class="mt-md-5 prnt-tbl" >
            <table class="table table-striped table-bordered prnt-tbl-tble" cellspacing="0" width="100%">

                <thead class="thead-dark ka">
                    <tr>
                        <th>Sr.</th>
                        <th>Company</th>
                        <th>Dept</th>
                        <th>Code</th>
                        <th>Name</th>
                        <th>Designation</th>
                        <th>Basic Salary</th>
                        <th>Per Day Wage</th>
                        <th>Date Of Joining</th>
                        <th>No Of Days</th>
                        <th>Absentee</th>
                        <th>Leaves</th>
                        <th>Extra Days</th>
                        <th>No Of Worked Days</th>
                        <th>Allownces/Arrear</th>
                        <th>Extra Days Wage</th>
                        <th>Bonus DESC.</th>
                        <th>Bonus</th>
                        <th>Absentee Ded.</th>
                        <th>Loan/Advance</th>
                        <th>OverTime (hrs)</th>
                        <th>OverTime</th>
                        <th>Tax Ded</th>
                        <th>Other Ded</th>
                        <th>Net Payable</th>
                        <th>Status</th>
                        <th>Recv Amt</th>
						<th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        foreach (var g in Model.GroupBy(x => new { x.CompanyId, x.CompanyName, x.DepartmentName, x.DepartmentId }))
                        {

                            int sr = 1;

                            @*<thead class="">
                        <tr>
                            <th colspan="22" style="font-size:21px;text-align:center"> @g.Key.DepartmentName</th>
                        </tr>
                        <tr>
                            <th>Sr.</th>
                            <th>Code</th>
                            <th>Name</th>
                            <th>Designation</th>
                            <th>Basic Salary</th>
                            <th>Per Day Wage</th>
                            <th>Date Of Joining</th>
                            <th>No Of Days</th>
                            <th>Absentee</th>
                            <th>Leaves</th>
                            <th>Extra Days</th>
                            <th>No Of Worked Days</th>
                            <th>Allownces/Arrear</th>
                            <th>Extra Days Wage</th>
                            <th>Bonus DESC.</th>
                            <th>Bonus</th>
                            <th>Absentee Ded.</th>
                            <th>Loan/Advance</th>
                            <th>Tax Ded</th>
                            <th>Other Ded</th>
                            <th>Net Payable</th>
                            <th>Status</th>
                            <th>Recv Amt</th>
							<th>Actions</th>
                        </tr>
                    </thead>*@

                           foreach (var item in g)
                            {
                    <tr class="" id="@item.Id">
                        <td class="">@sr</td>
                        @if (g.Key.CompanyId == null)
                        {
                            <td>---</td>
                        }
                        else
                        {
                            <td>@g.Key.CompanyName</td>
                        }
                        @if (g.Key.DepartmentId == null)
                        {
                            <td>---</td>
                        }
                        else
                        {
                            <td>@g.Key.DepartmentName</td>

                        }
                        <td>@item.Employee_code</td>
                        <td>@item.Employee_Name</td>
                        <td>@item.Designation_name</td>
                        <td class="basic_salary @item.DepartmentId-basicSalary" id="@item.DepartmentId">@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(item.Basic_salary)))</td>
                        <td class="">@( Math.Round(Convert.ToDecimal(item.Basic_salary / 30)) )</td>
                        <td style="font-weight:bold">@string.Format("{0: dd-MMM-yyyy}", item.Emp_Date_Of_Joining)</td>
                        <td>@item.No_Of_Days</td>
                        <td>@item.Absentee</td>
                        <td>@item.Salary_Leaves</td>
                        <td>@item.Extra_Working_Days</td>
                        <td>@(item.No_Of_Days - item.Absentee + item.Extra_Working_Days)</td>
                        <td class="t_allownce all_calc @item.DepartmentId-8" id="@item.DepartmentId"> @String.Format("{0:n0}", Math.Round(Convert.ToDecimal(item.Allownces))) </td>
                        <td class="extra_work @item.DepartmentId-Ewd" id="@item.DepartmentId"> @String.Format("{0:n0}", Math.Round(Convert.ToDecimal(item.Basic_salary / 30 * item.Extra_Working_Days))) </td>
                        <td>@item.Bonus_Description</td>
                        <td class="bonus @item.DepartmentId-bon" id="@item.DepartmentId">@string.Format("{0:n0}", Math.Round(Convert.ToDecimal(item.Bonus)))</td>
                        <td class="absn-cal @item.DepartmentId" id="@item.DepartmentId"><label>@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(item.Ded_Absentee)))</label></td>
                        <td><span>@String.Format("{0:n0}", Math.Round(Convert.ToDouble(item.Ded_Loan)))</span></td>
                        <td><span>@(item.OverTimeHrs ?? 0)</span></td>
                        <td><span>@String.Format("{0:n0}", Math.Round(Convert.ToDouble(item.Overtime)))</span></td>
                        <td><span>@String.Format("{0:n0}", Math.Round(Convert.ToDouble(item.Ded_Tax)))</span></td>
                        <td id="@item.DepartmentId"> @String.Format("{0:n0}", Math.Round(Convert.ToDouble(item.Ded_Other))) </td>
                        <td class="GrndTot @item.DepartmentId-2" style="font:bold">@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(item.Grand_total)))</td>
                        <td>
                            @item.Status
                        </td>
                        <td>
                        </td>
                        @if (item.Status == "Step_4")
                        {



                    <td>
                        @if (item.IsHold == true)
                        {
                            <i class="fa fa-chevron-right pointer unhld-sal-sdfkjhl" data-hold="0" title="Unhold Salary" data-tag="@item.Id"></i>
                        }
                        else
                        {
                            <i class="fa fa-chevron-left pointer hld-sal-sdfkjhl"  data-hold="1" title="Hold Salary" data-tag="@item.Id"></i>
                        }
                    </td>
                        }
                        else
                        {
                            <td>-</td>
                        }
                    </tr>
                                sr++;

                            }
                            @*<tr>
                        <th style="font-size:20px" colspan="4">Gross Total</th>
                        <th>@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(g.Select(x => x.Basic_salary).Sum())))</th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th id="totl_allownce" class="@g.Key.DepartmentId-9">@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(g.Select(x => x.Allownces).Sum()))) </th>
                        <th class="@g.Key.DepartmentId-1Ewd">@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(g.Select(x => x.Basic_salary / 30 * x.Extra_Working_Days).Sum())))</th>
                        <th></th>
                        <th class="@g.Key.DepartmentId-1depBo">@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(g.Select(x => x.Bonus).Sum())))</th>
                        <th class=" @g.Key.DepartmentId-1">@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(g.Select(x => x.Ded_Absentee).Sum()))) </th>
                        <th class=" @g.Key.DepartmentId-1">@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(g.Select(x => x.Ded_Loan).Sum()))) </th>
                        <th class=" @g.Key.DepartmentId-1">@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(g.Select(x => x.Ded_Tax).Sum()))) </th>
                        <th class=" @g.Key.DepartmentId-1">@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(g.Select(x => x.Ded_Other).Sum()))) </th>
                        <th class=" @g.Key.DepartmentId-22">@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(g.Select(x => x.Grand_total).Sum())))</th>
                        <th></th>
                        <th>@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(g.Where(x => x.Status == "Received").Select(x => x.Grand_total).Sum())))</th>
						<th></th>
                    </tr>*@

                        }
                    
                    }
                    </tbody>
                    @*<tfoot>
                <tr>
                    <th style="font-size:20px" colspan="4">Total</th>
                    <th>@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(Model.Sum(x => x.Basic_salary))))</th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th class="total_allownces">@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(Model.Sum(x => x.Allownces))))</th>
                    <th class="total_extra_wage">@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(Model.Sum(x => x.Basic_salary / 30 * x.Extra_Working_Days))))</th>
                    <th></th>
                    <th>@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(Model.Sum(x => x.Bonus))))</th>
                    <th class="footer_ded_absen">@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(Model.Sum(x => x.Ded_Absentee))))</th>
                    <th class="footer_ded_absen">@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(Model.Sum(x => x.Ded_Loan))))</th>
                    <th class="footer_ded_absen">@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(Model.Sum(x => x.Ded_Tax))))</th>
                    <th class="footer_ded_absen">@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(Model.Sum(x => x.Ded_Other))))</th>
                    <th class="NetPaysum">@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(Model.Sum(x => x.Grand_total))))</th>
                    <th></th>
                    <th>@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(Model.Where(x => x.Status == "Received").Select(x => x.Grand_total).Sum())))</th>
                    <th></th>
					<th></th>
                </tr>
            </tfoot>*@
            </table>
        </div>
    </div>

<script>
    $(document).ready(function () {

        //$('.prnt-req-btn').unbind().click(function () {
        //    $('.prnt-tbl').toggle();
        //});
        
       
        $('.prnt-tbl-tble').dataTable({
            dom: 'Bfrtip',
            buttons: [
                'copy', 'csv', 'excel', 'pdf', 'print'
            ],
             
            aaSorting: [],
            scrollY: "500px",
            scrollX: true,
            scrollCollapse: true,
            paging: false,
            fixedColumns: {
                leftColumns: 2
            },
            rowGroup: {
                dataSrc: [1, 2]
            },
            columnDefs: [{ targets: [1, 2], visible: false }]
        });
		
		$('.hld-sal-sdfkjhl').unbind().click(function () {


            let confi = confirm('Are you sure you want to HOLD the salary of this employ?');
            if (!confi) {
                return;
            }
            let sal = $(this).attr('data-tag');
            let that = $(this);
            
            $.ajax({
                type: "POST",
                url: '/Salaries/HoldSalary/',
                data: { Id: sal, stat: 0 },
                success: function (data) {
                    if (data) {
                        alert('Salary of this employee has been holded.');
                        $(that).remove();
                    }
                    else {
                        alert('Failed to hold salary of this employee.');
                    }
                }
                , error: function (xmlhttprequest, textstatus, message) {
                    if (textstatus === "timeout") {
                        alert("Internet connectivity issue. Please try again.");
                    } else {
                        alert(textstatus);
                    }
                }
            });
        });
        $('.unhld-sal-sdfkjhl').unbind().click(function () {


            let confi = confirm('Are you sure you want to UNHOLD the salary of this employ?');
            if (!confi) {
                return;
            }
            let sal = $(this).attr('data-tag');
            let that = $(this);

            $.ajax({
                type: "POST",
                url: '/Salaries/HoldSalary/',
                data: { Id: sal, stat: 1 },
                success: function (data) {
                    if (data) {
                        alert('Salary of this employee has been Unholded.');
                        $(that).remove();
                    }
                    else {
                        alert('Failed to hold salary of this employee.');
                    }
                }
                , error: function (xmlhttprequest, textstatus, message) {
                    if (textstatus === "timeout") {
                        alert("Internet connectivity issue. Please try again.");
                    } else {
                        alert(textstatus);
                    }
                }
            });
        });
		
    });
</script>