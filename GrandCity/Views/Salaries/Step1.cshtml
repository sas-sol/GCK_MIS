@model IEnumerable<MeherEstateDevelopers.Models.Sp_Get_All_Employess_Salaries_Result>

@*@{ Layout = "~/Views/Shared/_StaffLayout.cshtml"; }*@
<style>
    table thead tr th, table tbody tr td {
        font-size: 12px;
    }

    .scrolling-box {
        height: 740px;
        overflow-y: scroll;
        overflow-x: scroll;
        width: 100%;
        position: sticky;
        top: 0;
    }

    .tableFixHead {
        overflow: auto;
        min-height: 100px;
        height: 500px;
    }

        .tableFixHead .ka th {
            position: sticky;
            top: 0;
        }
</style>
<input type="hidden" class="OT-Rate" value="@ViewBag.OTRate" />
<div class="bgc-white bd bdrs-3 p-20 mB-20">
    <div class="col-md-12">
        <h3 class="c-grey-900 mB-20" style="text-align:center">Salaries of Month @string.Format("{0: MMMM yyyy}", DateTime.Now)</h3>
    </div>
    <div class="row">
        <div class="col-md-12">
            <button type="submit" class="btn btn-success Salary_Status" value="Step_2">Forward</button>
            <button type="submit" class="btn btn-dark Ad-emp-lv" value="">Add Leaves</button>
            <button type="button" class="btn btn-primary gen-sal" value="">Generate This Month Salaries</button>
        </div>
    </div>
    <div class="tableFixHead mt-1">
        <table id="salary-dat" class="table table-striped table-bordered" cellspacing="0" width="100%">
            <thead class="thead-dark ka">
                <tr>
                    <th>Sr.</th>
                    <th>Code</th>
                    <th>Name</th>
                    <th>Designation</th>
                    <th>Basic Salary</th>
                    <th>Stipend</th>
                    <th>Per Day Wage</th>
                    <th>Date Of Joining</th>
                    <th>No Of Days</th>
                    <th>Absentee</th>
                    <th>Leaves</th>
                    <th>Extra Days</th>
                    <th>Overtime</th>
                    <th>No Of Worked Days</th>
                    <th>Allownces & Bonus</th>
                    <th>Extra Days Wage</th>
                    <th>Absentee Ded.</th>
                    <th>Loan</th>
                    <th>Advance</th>
                    <th>Net Payable</th>
                    <th>FWD</th>
                </tr>
            </thead>
            @{
                if (Model.Any())
                {
                    foreach (var g in Model.GroupBy(x => new { x.DepartmentName, x.DepartmentId }))
                    {
                        long? g_dep = (g.Key.DepartmentId is null) ? 0 : g.Key.DepartmentId;
                        int sr = 1;
                        <thead class="">
                            <tr>
                                <th colspan="19" style="font-size:21px;text-align:center"> @g.Key.DepartmentName</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in g)
                            {
                                long? dep = (item.DepartmentId is null) ? 0 : item.DepartmentId;
                                <tr id="@item.Id">
                                    <td>@sr</td>
                                    <td>@item.Employee_code</td>
                                    <td>@item.Employee_Name</td>
                                    <td>@item.Designation_name</td>
                                    <td class="basic_salary s-read @dep-basic_salary">@String.Format("{0:n0}", item.Basic_salary)</td>
                                    <td class="Stipend s-read @dep-Stipend">@String.Format("{0:n0}", item.Stipend)</td>
                                    <td class="">@( Math.Round(Convert.ToDecimal(item.Basic_salary / 30)) )</td>
                                    <td style="font-weight:bold">@string.Format("{0: dd-MMM-yyyy}", item.Emp_Date_Of_Joining)</td>
                                    <td id="@item.No_Of_Days" class="no__of__days">@(item.No_Of_Days)</td>
                                    <td><input type="text" class="form-control emp-absen absentee coma" placeholder="" value="@item.Absentee" style="width:50px;" /></td>
                                    <td><input type="text" class="form-control emp_salary_leave coma salary_leave" placeholder="" value="@item.Salary_Leaves" style="width:50px;" /> @*@item.Salary_Leaves*@</td>
                                    <td><input type="text" class="form-control emp-extradays coma ExtraDays" placeholder="" value="@item.Extra_Working_Days" style="width:50px;" /></td>
                                    <td style="text-align:center;">
                                        <input type="text" class="form-control othrs" placeholder="Overtime Hrs" value="0" data-pdsal="@Math.Round(Convert.ToDecimal(item.Basic_salary / 30))" /><b>=</b>
                                        <input type="text" class="form-control coma SAL__Overtime" placeholder="" value="@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(item.Overtime)))" style="width:100px;" readonly />
                                    </td>
                                    <td class="absen-cal-days">@(item.No_Of_Days - item.Absentee - item.Salary_Leaves + item.Extra_Working_Days )</td>
                                    <td class="t_allownce"> @String.Format("{0:n0}", item.Allownces)</td>
                                    <td class="extra_work @dep-Ewd" id="@dep"> @String.Format("{0:n0}", Math.Round(Convert.ToDecimal(item.Basic_salary / 30 * item.Extra_Working_Days))) </td>
                                    <td class="absn-cal @dep" id="@dep">@String.Format("{0:n0}", Math.Round(Convert.ToDouble(item.Ded_Absentee)))</td>
                                    <td><span>@String.Format("{0:n0}", Math.Round(Convert.ToDouble(item.Ded_Loan)))</span></td>
                                    <td><span>@String.Format("{0:n0}", Math.Round(Convert.ToDouble(item.Ded_Advance)))</span></td>
                                    <td class="GrndTot @dep-2" style="font:bold" id="">@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(item.Grand_total)))</td>
                                    <td>
                                        <ul style="list-style:none;margin-left:0px;">
                                            <li class="dropdown">
                                                <a href="" class="dropdown-toggle no-after peers " data-toggle="dropdown">
                                                    <i class="ti-more-alt  c-grey-900" style="transform:rotate(90deg);"></i>
                                                </a>
                                                <ul class="dropdown-menu">
                                                    <li><a id="Step_2" class="pointer reverse_salary" data-id="@item.Id"><span>Forward</span></a></li>
                                                    @*<li><a class="pointer del-sal" data-id="@item.Id"><span>Delete</span></a></li>*@
                                                    <li><a class="pointer up-sal" data-id="@item.Id"><span>Update</span></a></li>
                                                </ul>
                                            </li>
                                        </ul>
                                    </td>
                                </tr>
                                sr++;
                            }
                            <tr>
                                <td style="font-size:20px" colspan="4">Gross Total</td>
                                <td class="@g_dep-basic_salarygr">@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(g.Select(x => x.Basic_salary).Sum())))</td>
                                <td class="@g_dep-Stipendgr">@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(g.Select(x => x.Stipend).Sum())))</td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td>@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(g.Select(x => x.Allownces).Sum()))) </td>
                                <td class="@g_dep-1Ewd">@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(g.Select(x => x.Basic_salary / 30 * x.Extra_Working_Days).Sum())))</td>
                                <td class="@g_dep-1">@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(g.Select(x => x.Ded_Absentee).Sum())))</td>
                                <td>@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(g.Select(x => x.Ded_Loan).Sum())))</td>
                                <td>@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(g.Select(x => x.Ded_Advance).Sum())))</td>
                                <td class="@g_dep-22">@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(g.Select(x => x.Grand_total).Sum())))</td>
                                <td></td>
                            </tr>
                        </tbody>
                    }

                    <tfoot>
                        <tr>
                            <th style="font-size:20px" colspan="4">Total</th>
                            <th class="total_basic_salary">@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(Model.Sum(x => x.Basic_salary))))</th>
                            <th class="total_Stipend">@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(Model.Sum(x => x.Stipend))))</th>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th class="total_allownces">@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(Model.Sum(x => x.Allownces))))</th>
                            <th class="total_extra_wage">@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(Model.Sum(x => x.Basic_salary / 30 * x.Extra_Working_Days))))</th>
                            <th class="footer_ded_absen">@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(Model.Sum(x => x.Ded_Absentee)@*- Model.Sum(x => x.Basic_salary / 30 * x.Salary_Leaves)*@)))</th>
                            <th class="total_allownces">@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(Model.Sum(x => x.Ded_Loan))))</th>
                            <th class="total_allownces">@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(Model.Sum(x => x.Ded_Advance))))</th>
                            <th class="NetPaysum">@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(Model.Sum(x => x.Grand_total))))</th>
                            <th></th>
                        </tr>
                    </tfoot>

                }
                else
                {
                    <tfoot>
                        <tr>
                            <td colspan="20">No Record Exists</td>
                        </tr>
                    </tfoot>
                }


            }
        </table>
    </div>
</div>
<style>
    tr.group,
    tr.group:hover {
        background-color: #ddd !important;
    }
</style>

<script>
    $(document).ready(function () {
        $('.othrs').unbind().change(function () {
            var overTimeRate = parseFloat($(this).attr('data-pdsal'));
            overTimeRate = overTimeRate / parseFloat(9.0);
            overTimeRate *= parseFloat(2.0);
            var otHrs = parseFloat($(this).val());

            overTimeRate = isNaN(overTimeRate) ? 0 : overTimeRate;
            otHrs = isNaN(otHrs) ? 0 : otHrs;

            $(this).closest('td').find('.SAL__Overtime').val((overTimeRate * otHrs).toLocaleString());
            $(this).closest('td').find('.SAL__Overtime').trigger('keyup');
        });
    });
</script>