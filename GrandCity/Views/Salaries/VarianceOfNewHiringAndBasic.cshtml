@model MeherEstateDevelopers.Models.SalaryModelListing


@{
    if (User.IsInRole("Administrator"))
    {
        Layout = "~/Views/Shared/_AdminLayout.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/_StaffLayout.cshtml";
    }
}
<style>
    table thead tr th, table tbody tr td {
        font-size: 12px;
    }

    .scrolling-box {
        min-height: 400px;
        max-height:600px;
        overflow-y: scroll;
        overflow-x: scroll;
        width: 100%;
    }

    .tableFixHead {
        overflow: auto;
        height: 700px;
    }

        .tableFixHead .ka th {
            position: sticky;
            top: 0;
        }
</style>

<h4 class="c-grey-900 mT-10 mB-30">Reports</h4>


@if (Model.PreviusNotGenerated.Any())
{
<div class="bgc-white bd bdrs-3 p-20 mB-20" id="r__s">
    @*Previous Not Generated Salaries*@
    <div class="col-md-12">
        <h3 class="c-grey-900 mB-20">New Hirings</h3>
    </div>
    <div class="tableFixHead">
        <table id="salary-dat" class="table table-striped table-bordered " cellspacing="0" width="100%">
            <thead class="thead-dark ka">
                <tr>
                    <th>Sr.</th>
                    <th>Code</th>
                    <th>Name</th>
                    <th>Designation</th>
                    <th>Basic Salary</th>
                </tr>
            </thead>
            @{
                foreach (var g in Model.PreviusNotGenerated.GroupBy(x => new { x.DepartmentId, x.DepartmentName }))
                {

                    int sr = 1;
                    <thead>
                        <tr>
                            <th colspan="5" style="font-size:21px;text-align:center"> @g.Key.DepartmentName</th>
                        </tr>
                        <tr>
                            <th>Sr.</th>
                            <th>Code</th>
                            <th>Name</th>
                            <th>Designation</th>
                            <th>Basic Salary</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (g.Any())
                        {
                            foreach (var item in g)
                            {
                                <tr class="" id="@item.Id">
                                    <td>@sr</td>
                                    <td>@item.Employee_code</td>
                                    <td>@item.Employee_Name</td>
                                    <td>@item.Designation_name</td>
                                    <td>@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(item.Basic_salary)))</td>
                                </tr>
                                sr++;

                            }
                        }
                        else
                        {
                            <tr>
                                <th colspan="6">No Record Found</th>
                            </tr>
                        }

                    </tbody>
                }

            }

        </table>
    </div>

    @*Basic Salary Variance*@
    <div class="col-md-12">
        <h3 class="c-grey-900 mB-20">Basic Salary Variance</h3>
    </div>
    <div class="tableFixHead">
        <table id="salary-dat" class="table table-striped table-bordered " cellspacing="0" width="100%">
            <thead class="thead-dark ka">
                <tr>
                    <th>Sr.</th>
                    <th>Code</th>
                    <th>Name</th>
                    <th>Designation</th>
                    <th>Basic Salary</th>
                    <th>Previous Basic Salary</th>
                </tr>
            </thead>
            @{
                foreach (var g in Model.PreviousBasicSalaryvariance.GroupBy(x => new { x.DepartmentId, x.DepartmentName }))
                {

                    int sr = 1;
                    <thead>
                        <tr>
                            <th colspan="5" style="font-size:21px;text-align:center"> @g.Key.DepartmentName</th>
                        </tr>
                        <tr>
                            <th>Sr.</th>
                            <th>Code</th>
                            <th>Name</th>
                            <th>Designation</th>
                            <th>Basic Salary</th>
                            <th>Previous Basic Salary</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (g.Where(x => Math.Round(Convert.ToDecimal(x.Previous_Basic_Salary)) > Math.Round(Convert.ToDecimal(x.Basic_salary))).Any())
                        {
                            foreach (var item in g.Where(x => Math.Round(Convert.ToDecimal(x.Previous_Basic_Salary)) > Math.Round(Convert.ToDecimal(x.Basic_salary))))
                            {
                                <tr class="" id="@item.Id">
                                    <td>@sr</td>
                                    <td>@item.Employee_code</td>
                                    <td>@item.Employee_Name</td>
                                    <td>@item.Designation_name</td>
                                    <td>@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(item.Basic_salary)))</td>
                                    <td>@String.Format("{0:n0}", Math.Round(Convert.ToDecimal(item.Previous_Basic_Salary)))</td>
                                </tr>
                                sr++;

                            }
                        }
                        else
                        {
                            <tr>
                                <th colspan="6">No Record Found</th>
                            </tr>
                        }
             
                    </tbody>
                }

            }

        </table>
    </div>


</div>
}
else
{
    <h4 class="c-grey-900 mT-10 mB-30">No Record Found</h4>
}

<style>
    tr.group,
    tr.group:hover {
        background-color: #ddd !important;
    }
</style>










