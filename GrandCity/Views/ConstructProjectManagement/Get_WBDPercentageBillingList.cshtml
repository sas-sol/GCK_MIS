@model IEnumerable<Management_Information_System.Models.Sp_Get_WbdBillingList_Result>


<div class="table-scrollable" style="">

    <table class="table table-bordered" id="mts-table" cellspacing="0" style="width:100%;">
        <thead>
            <tr>
                <th width="25%">Sr.</th>
                <th width="75%">Title</th>
            </tr>
        </thead>
        <tbody>
            @{

                if (Model.Any())
                {
                    int srcounter = 1;
                    foreach (var item in Model)
                    {
                        if (item.Type == "WBD")
                        {

                            <tr id="@item.WBD_Id">
                                <td>@srcounter <input type="checkbox" id="Wbdcheck" style="margin-left:20%" /> </td>
                                <td style="border-left:hidden">@item.Title</td>

                                <td hidden id="@item.Dependencyid" class="Version">@item.Dependencyid</td>
                            </tr>
                            @TSView(Model.Where(x => x.Dependencyid == item.Id).ToList(), srcounter.ToString(), item.Type);

                            srcounter++;
                        }
                    }

                }
                else
                {
                    <tr><td colspan="12" align="center">No Activity has been created</td></tr>
                }
            }
        </tbody>


        @helper TSView(IEnumerable<Management_Information_System.Models.Sp_Get_WbdBillingList_Result> MTS, string Ver, string Type)
        {
            double task = 1;
            //double stask = 1;
          
            foreach (var item in MTS)
            {
                if (item.Type == "Activity")
                {
                    string version = Convert.ToString(Ver + "." + task);
                    <tr id="@item.Id">
                         <td>@version </td>
                        <td style="border-left:hidden">@item.Title </td>
                    
                       
                        <td hidden id="@item.Dependencyid" class="Version">@item.Dependencyid</td>
                    </tr>
                    @TSView(Model.Where(x => x.Dependencyid == item.Id).ToList(), version, item.Type);
                    task += 1;
                }
            }
        }

    </table>
</div>

<style>
    .del-mts {
        display: none
    }

    .mts-div:hover .del-mts {
        display: block
    }

    .table-scrollable {
        max-height: 500px;
        overflow-x: auto;
        overflow-y: auto;
        scrollbar-width: thin;
    }

        .table-scrollable thead th {
            position: sticky;
            top: 0px;
            background-color: white;
            margin-top: -1px;
            margin-bottom: -1px;
            /* This is our fake border (see above comment) */
            box-shadow: inset 0 1px 0 #dee2e6, inset 0 -1px 0 #dee2e6;
        }

        .table-scrollable tbody tr {
            line-height;
            1px
        }
</style>


