
@model MeherEstateDevelopers.Models.FilePlotReport


<style>
    table thead tr th, table tbody tr td {
        font-size: 12px;
    }

    .columnSummary {
        float: left;
        width: 60%;
        padding: 5px;
    }

    .columnright {
        float: left;
        width: 40%;
        padding: 5px;
    }

    .columnndc {
        float: left;
        width: 100%;
        padding: 5px;
    }

    .columnwdc {
        float: right;
        width: 100%;
        padding: 5px;
    }

    .columntba {
        float: right;
        width: 100%;
        padding: 5px;
    }
    /* Clearfix (clear floats) */
    .row::after {
        content: "";
        clear: both;
        display: table;
    }
</style>

@{
   <input value="@ViewBag.block" hidden id="block"/> 
}
<div class="row">
    <div class="columnSummary">
        <h2>
            Summary
        </h2>
        <table id="summury-list" class="table table-striped table-bordered " cellspacing="0" style="margin-left:0%">
            <thead class="thead-dark">
                <tr>
                    <th>Type</th>
                    <th>Total</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>Total</td>
                    <td>@string.Format("{0:n0}", ViewBag.Total)</td>
                </tr>
                <tr>
                    <td>Cancelled</td>
                    <td>@string.Format("{0:n0}", ViewBag.Cancelled)</td>
                </tr>
                <tr>
                    <td>Registered</td>
                    <td>@string.Format("{0:n0}", ViewBag.Registered)  -------- Total NDC,WDC and TBA @*@string.Format("{0:n0}", ViewBag.totalcount)*@</td>
                </tr>
                <tr>
                    <td>&nbsp;&nbsp;&nbsp;&nbsp;  Active</td>
                    <td>@string.Format("{0:n0}", ViewBag.RegisteredActive) </td>
                <tr>
                    <td>&nbsp;&nbsp;&nbsp;&nbsp; In_Active</td>
                    <td>@string.Format("{0:n0}", ViewBag.RegisteredInActive)</td>
                </tr>
            </tbody>
        </table>
    </div>
    <div class="columnright">
        <h2>
            Balloted Not Balloted report
        </h2>
        <table class="table table-striped table-bordered " cellspacing="0" style="margin-left:0%">
            <thead class="thead-dark">
                <tr>
                    <th>Registered File & Plot</th>
                    <th>Total</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td><b>Balloted</b></td>
                    <td>@string.Format("{0:n0}", ViewBag.Ballotted)</td>
                </tr>
                <tr>
                    <td><b>Not Balloted</b></td>
                    <td>@string.Format("{0:n0}", ViewBag.NotBallotted) </td>
                </tr>
            </tbody>
        </table>
    </div>
</div>
<div class="row">
    <div class="columnwdc">
        <h2 id="0" class="FilePlotStatusReport">
            Non-Development charges
        </h2>
        <table id="NDC" class="table table-striped table-bordered " cellspacing="0" style="margin-left:0%">
            <thead class="thead-dark">
                <tr>
                    <th>Plots</th>
                    <th>Total Plots</th>
                    <th>Total Amount</th>
                    <th>Received</th>
                    <th>Remaining</th>
                </tr>
            </thead>
            <tbody>
                @{
                    if (Model.NDC.Any())
                    {
                        int i = 1;
                        List<int> Plotstotal = new List<int>();
                        List<Decimal> Total1 = new List<Decimal>();
                        List<Decimal> Received1 = new List<Decimal>();
                        List<Decimal> Remaining1 = new List<Decimal>();
                        foreach (var g in Model.NDC.GroupBy(x => x.Plot_Size))
                        {
                            decimal Total = 0, Received = 0, Remaining = 0; int count = 0;

                            foreach (var item in g)
                            {
                                Total += Convert.ToDecimal(item.Total);
                                Received += Convert.ToDecimal(item.Received);
                                Remaining += Convert.ToDecimal(item.Remaining);
                                count++;
                            }
                            <tr>
                                <td>@g.Key</td>
                                <td>@count</td>
                                <td>@string.Format("{0:n0}", Total)</td>
                                <td>@string.Format("{0:n0}", Received)</td>
                                <td>@string.Format("{0:n0}", Remaining)</td>
                            </tr>
                            Plotstotal.Add(count);
                            Total1.Add(Convert.ToDecimal(Total));
                            Received1.Add(Convert.ToDecimal(Received));
                            Remaining1.Add(Convert.ToDecimal(Remaining));

                            i++;
                        }
                        <tr>
                            <td><b>Total</b></td>
                            <td><b>@Plotstotal.Sum()</b></td>
                            <td><b>@string.Format("{0:n0}", Total1.Sum())/-</b></td>
                            <td><b>@string.Format("{0:n0}", Received1.Sum())/-</b></td>
                            <td><b>@string.Format("{0:n0}", Remaining1.Sum())/-</b></td>
                        </tr>
                    }
                    else
                    {
                        <tr>
                            <td colspan="2"></td>
                            <td>No Record Found</td>
                            <td colspan="2"></td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
    <div class="columntba">
        <h2 id="1" class="FilePlotStatusReport">
            With-Development charges
        </h2>
        <table id="WDC" class="table table-striped table-bordered " cellspacing="0" style="margin-left:0%">
            <thead class="thead-dark">
                <tr>
                    <th>Plots</th>
                    <th>Total Plots</th>
                    <th>Total Amount</th>
                    <th>Received</th>
                    <th>Remaining</th>
                </tr>
            </thead>
            <tbody>
                @{
                    if (Model.WDC.Any())
                    {
                        int i = 1;
                        List<int> Plotstotal = new List<int>();
                        List<Decimal> Total1 = new List<Decimal>();
                        List<Decimal> Received1 = new List<Decimal>();
                        List<Decimal> Remaining1 = new List<Decimal>();
                        foreach (var g in Model.WDC.GroupBy(x => x.Plot_Size))
                        {
                            decimal Total = 0, Received = 0, Remaining = 0; int count = 0;

                            foreach (var item in g)
                            {
                                Total += Convert.ToDecimal(item.Total);
                                Received += Convert.ToDecimal(item.Received);
                                Remaining += Convert.ToDecimal(item.Remaining);
                                count++;
                            }
                            <tr>
                                <td>@g.Key</td>
                                <td>@count</td>
                                <td>@string.Format("{0:n0}", Total)</td>
                                <td>@string.Format("{0:n0}", Received)</td>
                                <td>@string.Format("{0:n0}", Remaining)</td>
                            </tr>
                            Plotstotal.Add(count);
                            Total1.Add(Convert.ToDecimal(Total));
                            Received1.Add(Convert.ToDecimal(Received));
                            Remaining1.Add(Convert.ToDecimal(Remaining));
                            i++;
                        }
                        <tr>
                            <td><b>Total</b></td>
                            <td><b>@Plotstotal.Sum()</b></td>
                            <td><b>@string.Format("{0:n0}", Total1.Sum())/-</b></td>
                            <td><b>@string.Format("{0:n0}", Received1.Sum())/-</b></td>
                            <td><b>@string.Format("{0:n0}", Remaining1.Sum())/-</b></td>
                        </tr>
                    }
                    else
                    {
                        <tr>
                            <td colspan="2"></td>
                            <td>No Record Found</td>
                            <td colspan="2"></td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
    <div class="columntba">
        <h2 id="" class="FilePlotStatusReport">
            To-Be Announced
        </h2>
        <table id="TBA" class="table table-striped table-bordered " cellspacing="0" style="margin-left:0%">
            <thead class="thead-dark">
                <tr>
                    <th>Plots</th>
                    <th>Total Plots</th>
                    <th>Total Amount</th>
                    <th>Received</th>
                    <th>Remaining</th>
                </tr>
            </thead>
            <tbody>
                @{
                    if (Model.TBA.Any())
                    {
                        int i = 1;
                        List<int> Plotstotal = new List<int>();
                        List<Decimal> Total1 = new List<Decimal>();
                        List<Decimal> Received1 = new List<Decimal>();
                        List<Decimal> Remaining1 = new List<Decimal>();
                        foreach (var g in Model.TBA.GroupBy(x => x.Plot_Size))
                        {
                            decimal Total = 0, Received = 0, Remaining = 0; int count = 0;

                            foreach (var item in g)
                            {

                                Total += Convert.ToDecimal(item.Total);
                                Received += Convert.ToDecimal(item.Received);
                                Remaining += Convert.ToDecimal(item.Remaining);
                                count++;
                            }
                            <tr>
                                <td>@g.Key</td>
                                <td>@count</td>
                                <td>@string.Format("{0:n0}", Total)</td>
                                <td>@string.Format("{0:n0}", Received)</td>
                                <td>@string.Format("{0:n0}", Remaining)</td>
                            </tr>
                            Plotstotal.Add(count);
                            Total1.Add(Convert.ToDecimal(Total));
                            Received1.Add(Convert.ToDecimal(Received));
                            Remaining1.Add(Convert.ToDecimal(Remaining));
                            i++;
                        }
                        <tr>
                            <td><b>Total</b></td>
                            <td><b>@Plotstotal.Sum()</b></td>
                            <td><b>@string.Format("{0:n0}", Total1.Sum())/-</b></td>
                            <td><b>@string.Format("{0:n0}", Received1.Sum())/-</b></td>
                            <td><b>@string.Format("{0:n0}", Remaining1.Sum())/-</b></td>
                        </tr>
                    }
                    else
                    {
                        <tr>
                            <td colspan="2"></td>
                            <td>No Record Found</td>
                            <td colspan="2"></td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>


<script>

    //$(document).ready(function () {
    //    $('#NDC').DataTable({
    //        dom: 'Bfrtip',
    //        buttons: [
    //            'copy', 'excel', 'pdf', 'print'
    //        ]
    //    });
    //});

    //$(document).ready(function () {
    //    $('#WDC').DataTable({
    //        dom: 'Bfrtip',
    //        buttons: [
    //            'copy', 'excel', 'pdf', 'print'
    //        ]
    //    });
    //});

    //$(document).ready(function () {
    //    $('#TBA').DataTable({
    //        dom: 'Bfrtip',
    //        buttons: [
    //            'copy', 'excel', 'pdf', 'print'
    //        ]
    //    });
    //});

</script>