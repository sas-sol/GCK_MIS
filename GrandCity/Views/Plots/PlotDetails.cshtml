@model MeherEstateDevelopers.Models.PlotDetailData
<!-- SweetAlert2 CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
<!-- SweetAlert2 JS -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
@{string[] Type = { "Booking", "Installments", "Installment" };
    var CurrencyNoteNo = ViewBag.CNo;
    var TotalPric = Model.PlotInstallments.Where(x => x.Installment_Type != "10" && x.Installment_Type != "11" && x.Installment_Type != "0").Sum(x => x.Amount);}
@if (Model.PlotData.Verified == true)
{
    <script>
        $("#file-trans-alert").empty();
        var html = '<div class="alert alert-success" style="text-align:center" role="alert">This Plot is Verified</div>';
        $("#file-trans-alert").prepend(html);
    </script>
}
else
{
    <script>
        $("#file-trans-alert").empty();
    </script>
}
<style>

    .plotStatus{
        padding-top: 10px;
    }
    .vertical-menu {
        width: 200px;
    }

        .vertical-menu a {
            background-color: #eee;
            color: black;
            display: block;
            padding: 12px;
            text-decoration: none;
        }

            .vertical-menu a:hover {
                background-color: #ccc;
            }

            .vertical-menu a.active {
                background-color: #D0232A;
                color: white !important;
            }
</style>
@if (Model.PlotData.Mortgage == true)
{
    <input type="hidden" class="mortgade" value="true" />
}
<div class="bgc-white p-20 bd row">
    <div class="col-md-9">
        <div class="row">
            <div class="col-md-12 pt-md-3">
                <div class="row mb-md-2" style="justify-content:flex-end;">
                    <div class="" style="text-align:center">
                        <button class="btn btn-outline-info" data-toggle="modal" data-target="#Modal" onclick="ReminderForModule(@Html.Raw(Json.Encode(Model.PlotData.Id)),'Plot','@(Model.PlotData.Plot_No +Model.PlotData.Block_Name+"Reminder")')"><i class="ti-alarm-clock"></i>&nbsp; Add Reminder</button>
                    </div>
                </div>
                @if (User.IsInRole("Request Plot Discount") || User.IsInRole("Administrator"))
                {
                    <div class="row">
                        <div class="col-md-4" style="text-align:center">
                            <button class="btn btn-danger disc-btn-fsdkhj" data-toggle="modal" data-target="#Modal" data-plot="@Model.PlotData.Id">Request Discount</button>
                        </div>
                    </div>
                    <br />
                }
            </div>
            @if (Model.PlotData.Status == "Repurchased")
            {
                <div class="col-md-4"><div class="alert alert-info" style="text-align:center" role="alert">This Plot is Repurchased by Company</div></div>
            }
            else if (Model.PlotData.Status == "Available_For_Sale")
            {
                <div class="col-md-4"><div class="alert alert-info" style="text-align:center" role="alert">This Plot is Available For Sale</div></div>
            }
            else if (Model.PlotData.Status == "Disputed")
            {
                <div class="col-md-4"><div class="alert alert-warning" style="text-align:center" role="alert">This Plot is Disputed </div></div>
            }
            else if (Model.PlotData.Status == "Cancelled_Not_Refunded")
            {
                <div class="col-md-4"><div class="alert alert-warning" style="text-align:center" role="alert">Plot is Cancelled but Not Refunded</div></div>
            }
            else if (Model.PlotData.Status == "CancelledDueAmount")
            {
                <div class="col-md-4"><div class="alert alert-danger" style="text-align:center" role="alert">This Plot is Cancelled Due to Over Due Amount</div></div>
            }
            else if (Model.PlotData.Status == "Cancelled")
            {
                <div class="col-md-4"><div class="alert alert-danger" style="text-align:center" role="alert">This Plot is Cancelled By Company</div></div>
            }
            else if (Model.PlotData.Status == "Temporary_Cancelled")
            {
                <div class="col-md-4"><div class="alert alert-danger" style="text-align:center" role="alert">This Plot is Temporary Cancelled By Company</div></div>
            }
            else if (Model.PlotData.Status == "Hold")
            {
                <div class="col-md-4"><div class="alert alert-dark" style="text-align:center" role="alert">This Plot is Holded by Company</div></div>
            }
            else
            {
                if (Model.PlotData.Verified == true)
                {
                    <div class="col-md-2"><div class="alert alert-success" style="text-align:center" role="alert">Verified</div></div>

                    if ((User.IsInRole("Plots NOC") || User.IsInRole("Administrator")))
                    {
                        if (!(Model.PlotData.Block_Name == "Badar" && Model.PlotData.Sector == "D"))
                        {
                            <br />
                            <div class="col-md-4">
                                <button class="btn btn-primary generate_noc" type="button" data-toggle="modal" data-target="#Modal" data-type="Dealer">Generate NOC</button>
                            </div>
                        }
                    }
                    var totalamt = Model.PlotInstallments.Sum(x => x.Amount);
                    var receamt = Model.PlotReceipts.Where(x => Type.Contains(x.Type)).Sum(x => x.Amount);
                    if (receamt > totalamt)
                    {
                        <div class="col-md-4">
                            <button class="btn btn-primary" data-toggle="modal" data-target="#Modal" data-id="@Model.PlotData.Id" data-module="PlotManagement" id="ref-amt">Refund Amount</button>
                        </div>
                    }
                }
                else
                {
                    //if (User.IsInRole("Request For Verification"))
                    //{
                    <div class="col-md-4">
                        <h6 style="width: auto;float: left;margin: 7px;">Request For Verifcation</h6>
                        @if (Model.PlotData.Verification_Req == true)
                        {
                            <label class="switch"><input type="checkbox" id="veri-req" checked disabled><span class="slider round"></span></label>
                        }
                        else
                        {
                            <label class="switch"><input type="checkbox" id="veri-req"><span class="slider round"></span></label>
                        }
                    </div>
                    //}
                }
                if (User.IsInRole("Customer File"))
                {

                    <div class="col-md-4" style="padding-top: 15px;">
                        <button class="btn btn-info" data-id="@Model.PlotData.Id" id="plot_file-sa">Generate Customer File</button>
                    </div>

                }
            }
            @{
                if (Model.PlotOwners.Any())
                {
                    var allot = Model.PlotOwners.OrderByDescending(x => x.Ownership_DateTime).FirstOrDefault();
                    if (allot.Allotment_Letter == 1)
                    {
                        <div class="col-md-3"><div class="alert alert-primary" style="text-align:center" role="alert">Allotment Letter Generated</div></div>
                        if (User.IsInRole("Duplicate Allotment Letter") || User.IsInRole("Administrator"))
                        {
                            <div class="col-md-2">
                                @if (Model.PlotData.Mortgage == true)
                                {
                                    <button class="btn btn-primary" type="button" disabled>Duplicate Allotment Letter Blocked</button>
                                }
                                else
                                {
                                    <a class="btn btn-primary" href="/Plots/AllotmentDuplicateLetter?Id=@allot.GroupTag">Duplicate Allotment Letter</a>
                                }
                            </div>
                        }
                        if (User.IsInRole("Regenerate Allotment Letter") || User.IsInRole("Administrator"))
                        {
                            <div class="col-md-2">
                                <button class="btn btn-secondary ver-allotment-let" data-toggle="modal" data-target="#Modal" id="@Model.PlotData.Id">Regenerate Allotment Letter</button>
                            </div>
                        }
                    }
                    if (allot.Dup_Allotment_Letter == 1)
                    {
                        <div class="col-md-2">
                            <div class="alert alert-dark" style="text-align:center" role="alert">Duplicate Allotment Letter Generated</div>
                        </div>
                    }
                }
            }
            @if (Model.PlotData.Registry == true)
            {
                <div class="col-md-2"><div class="alert alert-danger" style="text-align:center" role="alert">Registry Plot</div></div>
            }
            @{
                if (User.IsInRole("Reinstate Plot Status") || User.IsInRole("Administrator"))
                {
                    if (Model.PlotData.Status == "Temporary_Cancelled" || Model.PlotData.Status == "Cancelled")
                    {
                        <div class="col-md-4">
                            <button class="btn btn-info" data-id="@Model.PlotData.Id" id="plot_reinstate">Reinstate Plot</button>
                        </div>
                    }
                }
            }
        </div>

        <div class="col-md-3">
            @{
                var ttl_amt = Math.Round(Model.PlotInstallments.Sum(x => x.Amount), 0);
                var rece_amt = Math.Round(Convert.ToDecimal(Model.PlotReceipts.Where(x => Type.Contains(x.Type) && x.Status == "Approved" || x.Status is null).Sum(x => x.Amount) + Convert.ToDecimal(Model.Discounts.Sum(x => x.Discount_Amount))), 0);
                if (Model.PlotOwners.Any())
                {
                    var allotd = Model.PlotOwners.OrderByDescending(x => x.Ownership_DateTime).FirstOrDefault();
                    if (Model.PlotData.Verified == true)
                    {
                        if (Math.Round(Convert.ToDouble(Model.PlotBalDets.Outstanding_Amount)) <= 0)
                        {
                            if (allotd.Allotment_Letter != 1 && Model.PlotData.Status == "Registered")
                            {
                                if (User.IsInRole("New Allotment Letters") || User.IsInRole("Administrator"))
                                {
                                    if (!(Model.PlotData.Development_Charges == null  && Model.PlotData.Application_FileNo != null))
                                    //&& Model.PlotData.Block_Name == "Sher Afghan"
                                    {
                                        <button class="btn btn-info ver-allotment-let" data-toggle="modal" data-target="#Modal" id="@Model.PlotData.Id">Generate Allotment Letter</button>
                                    }
                                }
                            }
                            if ((allotd.Possession_Leter == null || allotd.Possession_Leter == 0) && Model.PlotData.Status == "Registered")
                            {
                                if (allotd.Allotment_Letter == 1)
                                {
                                    <h6 style="width: auto;float: left;margin: 7px;">Request For Possession Letter</h6>
                                    <label class="switch">
                                        <input type="checkbox" id="Poss__req__plots">
                                        <span class="slider round"></span>
                                    </label>
                                }
                            }
                            if (allotd.Possession_Leter == 1)
                            {
                                <div class="alert alert-info" style="text-align:center" role="alert">Requested For Possession Letter<i class="ti-check"></i></div>
                            }
                            if (allotd.Possession_Leter == 2)
                            {
                                <div class="alert alert-info" style="text-align:center" role="alert">Pending submission drawing<i class="ti-check"></i></div>
                            }
                            if (allotd.Possession_Leter == 3)
                            {
                                <div class="alert alert-info" style="text-align:center" role="alert">Possession Letter Generated<i class="ti-check"></i></div>
                            }
                        }
                    }
                }
            }
            @if (User.IsInRole("Biometric Updator"))
            {
                <div class="col-md-3">
                    <button class="btn btn-info biometric-updt-btn" data-pid="@Model.PlotData.Id">Biometric Verification</button>
                </div>
            }
        </div>

        <div class="mT-30">
            <div class="form-row row">
                <div class="col-md-12">
                    <div class="form-row">
                        <div class="form-group col-md-2">
                            <label>Plot No.</label>
                            <h5 id="plt-no">@Model.PlotData.Plot_No</h5>
                            <input type="hidden" class="form-control" id="plt-id" name="Plot_Id" value="@Model.PlotData.Id" readonly>
                        </div>
                        <div class="form-group col-md-2">
                            <label>Block</label>
                            <h5 id="plt-blk">@Model.PlotData.Block_Name</h5>
                        </div>
                        <div class="form-group col-md-2">
                            <label>Plot Size</label>
                            <h5 id="plt-size">@Model.PlotData.Plot_Size</h5>
                        </div>
                        <div class="form-group col-md-2">
                            <label>Type</label>
                            <h5 id="plt-type">@Model.PlotData.Type</h5>
                        </div>
                        <div class="form-group col-md-4">
                            <label>Dimension</label>
                            <h5 id="plt-dim">@Model.PlotData.Dimension</h5>
                        </div>
                        <br />
                        <div class="form-group col-md-2">
                            <label>Status</label>
                            <h5 id="plt-status"> @Model.PlotData.Develop_Status.Replace('_', ' ')</h5>
                        </div>
                        <div class="form-group col-md-2">
                            <label>Road</label>
                            <h5 id="plt-road">@Model.PlotData.Road_Type</h5>
                        </div>
                        <div class="form-group col-md-2">
                            <label>Area</label>
                            <h5 id="plt-area">@Convert.ToDecimal(Model.PlotData.Area).ToString("0.##") Sq-Ft</h5>
                        </div>
                        <div class="form-group col-md-2">
                            <label>Location</label>
                            <h5 id="plt-loc">@Model.PlotData.Plot_Location</h5>
                        </div>
                        @if (Model.PlotData.Development_Charges == true)
                        {
                            <div class="form-group col-md-2">
                                <label>Development Charges</label>
                                <h5 id="dev-ch">With Development Charges</h5>
                            </div>
                        }
                        else if (Model.PlotData.Development_Charges == false)
                        {
                            <div class="form-group col-md-2">
                                <label>Development Charges</label>
                                <h5 id="dev-ch">Non Development Charges</h5>
                            </div>
                        }
                        @*else if (Model.PlotData.Development_Charges == null && Model.PlotData.Block_Name == "Sher Afghan" && Model.PlotData.Application_FileNo != null)
                        {
                            <div class="form-group col-md-3">
                                <label>Development Charges</label>
                                <h5 id="dev-ch">To Be Announced</h5>
                            </div>
                        }*@
                        <div class="form-group col-md-2">
                            <label>Status</label>
                            <h5>@Model.PlotData.Status.Replace("_", " ")</h5>
                            @if (User.IsInRole("Reinstate Plot Status") || User.IsInRole("Administrator"))
                            {
                                if (Model.PlotData.Status != "Registered")
                                {
                                    <button class="btn btn-info re-ins-p" data-toggle="modal" data-target="#Modal">Reinstate Plot Status</button>
                                }
                            }
                        </div>
                        @if (Model.PlotData.Mortgage == true)
                        {
                            <div class="form-group col-md-2">
                                <label>Mortgaged Status</label>
                                <h5 id="">Plot is Mortgaged</h5>
                            </div>
                        }
                        @*else if (Model.PlotData.Development_Charges == null && Model.PlotData.Block_Name == "Sher Afghan" && Model.PlotData.Application_FileNo == null)
                            {
                                <div class="form-group col-md-3">
                                    <label>Development Charges</label>
                                    <h5 id="dev-ch">Not Applicable</h5>
                                </div>
                            }*@

                    </div>
                    <h4><b>Booking Details</b></h4>
                    <div class="form-row">
                        <div class="form-group col-md-2">
                            <label>Plot Price</label>
                            <h5 id="plt-price">@string.Format("{0:n0}", TotalPric)</h5>
                        </div>
                        <div class="form-group col-md-2" id="dis-amt-sec" style="display:none">
                            <label>Discount Amount</label>
                            <h5 id="dis-amt"></h5>
                        </div>
                        <div class="form-group col-md-2">
                            <label>Booking Date</label>
                            @*<h5 id="booking-date">@Model.PlotOwners.FirstOrDefault().Ownership_DateTime</h5>*@
                            <h5 id="booking-date">@((Model.PlotOwners.FirstOrDefault()?.Ownership_DateTime)?.ToString("MM/dd/yyyy"))</h5>
                            @*.ToString("MM/dd/yyyy")*@
                        </div>
                        @*<div class="form-group col-md-2">
                            <label>Balance</label>
                            <h5 id="bal-in"></h5>
                        </div>*@
                        <div class="form-group col-md-2 est-mrk-div" style="display:none">
                            <label>D.C. Value</label>
                            <h5 id="est-mrk"></h5>
                        </div>
                        @if (Model.Refunded_Repurchased != null)
                        {
                            if (Model.PlotData.Status == "Repurchased")
                            {
                                <div class="form-group col-md-2">
                                    <label>@Model.Refunded_Repurchased.Receipt_Type Value</label>
                                    <h5 id="">@string.Format("{0:n0}", Model.Refunded_Repurchased.Repurchased_Amt)</h5>
                                </div>
                            }
                            else if (Model.PlotData.Status == "Hold")
                            {
                                <div class="form-group col-md-2">
                                    <label>@Model.Refunded_Repurchased.Receipt_Type Value</label>
                                    <h5 id="">@string.Format("{0:n0}", Model.Refunded_Repurchased.Plot_Total_Amount - Model.Refunded_Repurchased.Deduction_Amt)</h5>
                                </div>
                            }

                        }
                    </div>
                </div>
                <div class="col-md-4"></div>
            </div>
        </div>
        <div class="mT-30">
            <div class="panel-group" id="accordion">
                @{ int ownercount = 1;
                    foreach (var item in Model.PlotOwners.OrderByDescending(x => x.Ownership_DateTime).GroupBy(x => x.GroupTag))
                    {
                        <div class="panel-heading central-text-align" style="background-color:black;color:white;">
                            <h5>@item.Select(x => x.Ownership_Status).FirstOrDefault() - @string.Format("{0: dd-MMM-yyyy}", item.Select(x => x.Ownership_DateTime).FirstOrDefault())</h5>
                        </div>
                        foreach (var own in item)
                        {
                            string show = "";
                            if (ownercount == 1)
                            {
                                @*<script>
                                    var pltprice = "@own.Total_Price";
                                    if (pltprice > 0) {
                                        $("#plt-price").text(Number(parseFloat(pltprice).toFixed(0)).toLocaleString());
                                    }
                                    else {
                                        var instprice = "@Model.PlotInstallments.Sum(x=> x.Amount)";
                                        $("#plt-price").text(Number(parseFloat(instprice).toFixed(0)).toLocaleString());
                                    }
                                    var disamt = "@own.Discount";
                                    if (disamt > 0 || disamt != "") {
                                        $("#dis-amt-sec").show();
                                        $("#dis-amt").text(Number(parseFloat(disamt).toFixed(0)).toLocaleString());
                                    }
                                    </script>*@
                                show = "show";
                            }
                            else
                            {
                                var det = Model.PlotOwners.Where(x => x.Ownership_Status == "Transfered").OrderByDescending(x => x.Ownership_DateTime).Select(x => x.Total_Price).FirstOrDefault();
                                @*<script>
                                    var pltprice = "@det";
                                    if (pltprice > 0) {
                                        $("#plt-price").text(Number(parseFloat(pltprice).toFixed(0)).toLocaleString());
                                    }
                                    else {
                                        var instprice = "@Model.PlotInstallments.Sum(x=> x.Amount)";
                                        $("#plt-price").text(Number(parseFloat(instprice).toFixed(0)).toLocaleString());
                                    }
                                    var disamt = "@own.Discount";
                                    if (disamt > 0 || disamt != "") {
                                        $("#dis-amt-sec").show();
                                        $("#dis-amt").text(Number(parseFloat(disamt).toFixed(0)).toLocaleString());
                                    }
                                    </script>*@
                            }
                            <div class="panel panel-default">
                                <div class="panel-heading">
                                    <h5 class="panel-title">
                                        <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion" href="#@own.Id" aria-expanded="true" style="margin-right: 5%;">
                                            @own.Name
                                        </a>
                                        @if (own.Ownership_Status == "Owner" && (User.IsInRole("Customer File") || User.IsInRole("Administrator")))
                                        {
                                            <button class="btn btn-info" data-id="@Model.PlotData.Id" id="plot_file">Generate Customer File</button>

                                            @*if (Model.PlotData.Block_Name == "Sher Afghan")
            {
                <button class="btn btn-info" data-id="@Model.PlotData.Id" id="plot_file-sa">Generate Customer File</button>
            }
            else
            {
                <button class="btn btn-info" data-id="@Model.PlotData.Id" id="plot_file">Generate Customer File</button>
            }*@
                                        }
                                        @if (User.IsInRole("Generate Plots Transfer Letter") || User.IsInRole("Administrator"))
                                        {
                                            if (Model.PlotData.Mortgage == true)
                                            {
                                                <button class="btn btn-info" disabled style="margin-left:5%">Generate Transfer Letter Blocked</button>
                                            }
                                            else
                                            {
                                                <button class="btn btn-info p-tran-lett" data-ownid="@own.Id" style="margin-left:5%">Generate Transfer Letter</button>
                                            }
                                        }
                                    </h5>
                                </div>
                                <div id="@own.Id" class="panel-collapse collapse in @show" aria-expanded="true" style="">
                                    <div class="panel-body">
                                        <div class="own-det">
                                            <div class="form-row">
                                                <div class="form-group col-md-3">
                                                    <label>Name</label>
                                                    <input type="text" class="form-control" name="Name" value="@own.Name" readonly>
                                                </div>
                                                <div class="form-group col-md-3">
                                                    <label>Currency Note #</label>
                                                    <input type="text" class="form-control" name="CNo" value="@CurrencyNoteNo" readonly>
                                                </div>
                                                <div class="form-group col-md-3">
                                                    <label>Father's/Husband's Name</label>
                                                    <input type="text" class="form-control" name="Father_Husband" value="@own.Father_Husband" readonly>
                                                </div>
                                                <div class="form-group col-md-3">
                                                    <label>CNIC / NICOP</label>
                                                    <input type="text" class="form-control" name="CNIC_NICOP" value="@own.CNIC_NICOP" placeholder="12345-1234567-1   or   123456-123456-1" readonly>
                                                </div>

                                                <div class="form-group col-md-6">
                                                    <label>Postal Address</label>
                                                    <input type="text" class="form-control" name="Postal_Address" value="@own.Postal_Address" placeholder="1234 Main St" readonly>
                                                </div>
                                                <div class="form-group col-md-6">
                                                    <label>Residential Address</label>
                                                    <input type="text" class="form-control" name="Residential_Address" value="@own.Residential_Address" placeholder="Apartment, Plot, or floor" readonly>
                                                </div>
                                                <div class="form-group col-md-3">
                                                    <label>Date Of Birth</label>
                                                    <input type="text" class="form-control" data-provide="datepicker" value="@own.Date_Of_Birth" placeholder="mm/dd/yyyy" name="Date_Of_Birth" readonly>
                                                </div>
                                                <div class="form-group col-md-3">
                                                    <label>City</label>
                                                    <input type="text" class="form-control" value="@own.City" readonly>
                                                </div>
                                                <div class="form-group col-md-3">
                                                    <label>Occupation</label>
                                                    <input type="text" class="form-control" value="@own.Occupation" name="Occupation" readonly>
                                                </div>
                                                <div class="form-group col-md-3">
                                                    <label>Nationality</label>
                                                    <input type="text" class="form-control" value="@own.Nationality" name="Nationality" readonly>
                                                </div>
                                                <div class="form-group col-md-3">
                                                    <label>Email</label>
                                                    <input type="text" class="form-control" value="@own.Email" name="Email" readonly>
                                                </div>

                                                <div class="form-group col-md-3">
                                                    <label>Phone Office</label>
                                                    <input type="text" class="form-control" value="@own.Phone_Office" name="Phone_Office" readonly>
                                                </div>
                                                <div class="form-group col-md-3">
                                                    <label>Residential</label>
                                                    <input type="text" class="form-control" value="@own.Residential" name="Residential" readonly>
                                                </div>
                                                <div class="form-group col-md-3">
                                                    <label>Mobile 1</label>
                                                    <input type="text" class="form-control" value="@own.Mobile_1" placeholder="03121234567" name="Mobile_1" readonly>
                                                </div>
                                                <div class="form-group col-md-3">
                                                    <label>Mobile 2</label>
                                                    <input type="text" class="form-control" value="@own.Mobile_2" pattern="^0\d{10}" placeholder="03121234567" name="Mobile_2" readonly>
                                                </div>
                                            </div>
                                            @*<div class="form-row">
                                                <div class="form-group col-md-3">
                                                    <label>Phone Office</label>
                                                    <input type="text" class="form-control" value="@own.Phone_Office" name="Phone_Office" readonly>
                                                </div>
                                                <div class="form-group col-md-3">
                                                    <label>Residential</label>
                                                    <input type="text" class="form-control" value="@own.Residential" name="Residential" readonly>
                                                </div>
                                                <div class="form-group col-md-3">
                                                    <label>Mobile 1</label>
                                                    <input type="text" class="form-control" value="@own.Mobile_1" placeholder="03121234567" name="Mobile_1" readonly>
                                                </div>
                                                <div class="form-group col-md-3">
                                                    <label>Mobile 2</label>
                                                    <input type="text" class="form-control" value="@own.Mobile_2" pattern="^0\d{10}" placeholder="03121234567" name="Mobile_2" readonly>
                                                </div>
                                            </div>*@
                                            <h5 class="c-grey-900"><b>Nominee</b></h5>
                                            <div class="form-row">
                                                <div class="form-group col-md-3">
                                                    <label>Name</label>
                                                    <input type="text" class="form-control" value="@own.Nominee_Name" name="Nominee_Name" readonly>
                                                </div>
                                                <div class="form-group col-md-2">
                                                    <label>CNIC / NICOP</label>
                                                    <input type="text" class="form-control" value="@own.Nominee_CNIC_NICOP" placeholder="12345-1234567-1 or 123456-123456-1" name="Nominee_CNIC_NICOP" readonly>
                                                </div>
                                                <div class="form-group col-md-2">
                                                    <label>Relation</label>
                                                    <input class="form-control" value="@own.Nominee_Relation" name="Nominee_Relation" placeholder="" readonly>
                                                </div>
                                                <div class="form-group col-md-5">
                                                    <label>Address</label>
                                                    <input type="text" class="form-control" value="@own.Nominee_Address" name="Nominee_Address" placeholder="1234 Main St" readonly>
                                                </div>
                                            </div>
                                            <div class="form-row">
                                                <div class="col-md-3">
                                                    <img style="margin-top:10px" src="~/Repository/CustomerImagesPlots/@Model.PlotData.Id/@own.Id/1.jpg" onerror="this.onerror=null; this.src='/images/placeholder.png';" width="200" height="200" id="own_img" alt="Owner Image" />
                                                    <input type="button" class="btn btn-info own-img add-own-img" id="add-own-img1" style="margin-top:10px;display:none" data-toggle="modal" value="Add Image" data-target="#Modal" />
                                                </div>
                                            </div>
                                            <div class="form-row" id="can-ow-led-@own.Id" style="margin-top:10px"></div>
                                            @if (Model.PlotData.Status == "Cancelled" || Model.PlotData.Status == "Cancelled_Not_Refunded")
                                            {
                                                <script>
                                                    $('#can-ow-led-'+ @own.Id).load('/Plots/CancelledOwnerLedger/', { Plotid: @own.Plot_Id , OwnerId: @own.Id});
                                                </script>
                                                <style>
                                                    #can-ow-led table tr th, #can-ow-led table tr td {
                                                        padding: 2px;
                                                    }
                                                </style>
                                                <a class="btn btn-primary" style="color:white" href="/Plots/PreviousPlotDetailReport?Plotid=@Model.PlotData.Id&OwnerId=@own.Id" target="_blank">@own.Name Ledger Report</a>
                                            }

                                        </div>
                                    </div>
                                </div>
                            </div>
                            ownercount++;
                        }
                        <hr />
                    }
                }
            </div>
        </div>
        <button class="btn btn-primary" style="margin-bottom: 1%;"><a style="color:white;" href="/Plots/PlotStatment?Plotid=@Model.PlotData.Id" target="_blank">Ledger Report</a></button>
        <button class="btn btn-primary up_inst_btn_plot" style="margin-bottom: 1%;" data-toggle="modal" data-target="#Modal">Update Installment</button>
    </div>
    <div class="col-md-3" id="det-rep">
        <ul class="nav nav-tabs" id="myTab" role="tablist">
            <li class="nav-item"><a class="nav-link active" data-lead="1" role="tab" data-toggle="tab" aria-controls="home" aria-selected="true" href="#assigned">History</a></li>
            <li class="nav-item"><a class="nav-link" role="tab" data-lead="1" data-toggle="tab" aria-controls="home" aria-selected="true" href="#created">Reminders</a></li>
        </ul>
        <div class="tab-content">
            <div id="assigned" class="tab-pane active">
                @{ Html.RenderAction("PlotsComments", "Messages", new { Plotid = Model.PlotData.Id });}
            </div>
            <div id="created" class="tab-pane">
                @{ Html.RenderAction("GetUpcomingRemindersByModule", "Reminders", new { module = "Plot", modId = Model.PlotData.Id });}
            </div>
        </div>
    </div>
</div>

<div class="bgc-white p-20 bd row">
    <div class="col-md-12">
        <div class="form-row">
            <div class="col-md-5" style="max-height:500px;overflow-y:scroll">
                <div class="form-row">
                    <ul class="nav nav-tabs">
                        <li class="nav-item">
                            <a class="nav-link active pointer sideLink installPlan" data-typ="installPlan">Installment Plan</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link sideLink pointer sideLink SurChargefile" data-typ="SurChargefile">SurCharge Schedule</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link sideLink pointer sideLink Not_Included" data-typ="Not_Included">Not_Included</a>
                        </li>
                    </ul>
                </div>
                @if (Model.PlotInstallments.Any())
                {
                    <table class="table table-striped table-bordered installPlanView" cellspacing="0" width="100%" style="margin-bottom:0px">
                        <thead class="thead-dark">
                            <tr>
                                <th>Installment</th>
                                <th>Amount</th>
                                <th>Due Date</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                decimal overduetotal = 0;
                                foreach (var own in Model.PlotInstallments)
                                {
                                    if (own.Installment_Type !="10" && own.Installment_Type != "11")
                                    {
                                        string[] adva = { "Advance", "Booking" };
                                        var statuscolor = "";
                                        if (own.Status == "NotPaid")
                                        {
                                            statuscolor = "bgc-red-50";
                                            overduetotal = overduetotal + own.Amount;
                                        }
                                        else if (own.Status == "Paid")
                                        {
                                            statuscolor = "bgc-green-50";
                                        }
                                        //if (adva.Contains(own.Installment_Name))
                                        //{

                                        //        var res = own.DueDate.ToString("MM/dd/yyyy");

                                        //        $("#booking-date").text(res);
                                        //}

                                        <tr class="@statuscolor">
                                            <td>@own.Installment_Name</td>
                                            <td>@string.Format("{0:n0}", own.Amount)</td>
                                            <td>@string.Format("{0:dd-MMM-yyyy}", own.DueDate)</td>
                                            <td>@own.Status</td>
                                        </tr>
                                        }
                                    }
                                }
                        </tbody>
                    </table>
                    <table class="table table-striped table-bordered SurChargefileView" cellspacing="0" width="100%" style="margin-bottom:0px;display:none;">
                        <thead>
                            <tr class="thead-dark">
                                <th>Particulars</th>
                                <th>Days</th>
                                @*<th>Amount</th>*@
                                <th>Surcharge Amount</th>
                                <th>Due Date</th>
                                <th>Status</th>
                                <th>Action</th>
                                @* <th><button style="padding:5px;" class="btn btn-primary btn-success btn-outline-success up_inst_btn_plot">Update Plan</button></th>*@
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                overduetotal = 0;
                                foreach (var item in Model.PlotInstallmentsSurcharge.OrderBy(x => x.DueDate))
                                {
                                   
                                        var statuscolor = "";
                                        if (item.Status == "NotPaid")
                                        {
                                            statuscolor = "bgc-red-50";
                                            overduetotal = overduetotal + item.Amount;
                                        }
                                        else if (item.Status == "Paid")
                                        {
                                            statuscolor = "bgc-green-50";
                                        }
                                        if (item.Waveoff == 1)
                                        {
                                            statuscolor = "bgc-black-50";
                                        }

                                        <tr class="@statuscolor" style="background-color:white">
                                            <td>@item.Installment_Name</td>
                                            <td>@item.Surchargedays</td>
                                            @*<td>@string.Format("{0:00.00}", item.Amount)</td>*@
                                            <td>@string.Format("{0:00.00}", item.SurchargeAmount)</td>
                                            <td>@string.Format("{0:dd-MMM-yyyy}", item.DueDate_New)</td>
                                            @if (item.Waveoff == 1)
                                            {
                                                <td> Wave Off  </td>
                                            }
                                            else
                                            {
                                                <td> @item.Status </td>
                                            }
                                            @if (item.Status == "NotPaid" && item.Waveoff == null)
                                            {
                                                <td>
                                                    <ul style="list-style:none;margin-left:0px;">
                                                        <li class="dropdown">
                                                            <a href="" class="dropdown-toggle no-after peers " data-toggle="dropdown">
                                                                <i class="ti-more-alt" style="transform:rotate(90deg);"></i>
                                                            </a>
                                                            <ul class="dropdown-menu" style="padding:10px;width:auto !important">
                                                                @*<li><a id="@item.Id" class="wave-off-surcharge pointer"><span>Wave off Surcharge</span></a></li>*@
                                                                <li><a href="~/Plots/UpdateWaveOffStatus?id=@item.Id" class="wave-off-surcharge pointer"><span>Wave off Surcharge</span></a></li>
                                                            </ul>
                                                        </li>
                                                    </ul>
                                                </td>
                                            }
                                            else
                                            {
                                                <td>  </td>
                                            }
                                           </tr>
                                     
                                    }
                                }
                        </tbody>
                    </table>
                    <table class="table table-striped table-bordered installPlanNotIncluded" cellspacing="0" width="100%" style="margin-bottom:0px">
                        <thead class="thead-dark">
                            <tr>
                                <th>Installment</th>
                                <th>Amount</th>
                                <th>Due Date</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                overduetotal = 0;
                                foreach (var item in Model.PlotInstallments)
                                {
                                    if (item.Installment_Type == "10")
                                    {
                                        var statuscolor = "";
                                        if (item.Status == "NotPaid")
                                        {
                                            statuscolor = "bgc-red-50";
                                            overduetotal = overduetotal + item.Amount;
                                        }
                                        else if (item.Status == "Paid")
                                        {
                                            statuscolor = "bgc-green-50";
                                        }
                                        <tr class="@statuscolor">
                                            <td>@item.Installment_Name</td>
                                            <td>@string.Format("{0:0,0.##}", item.Amount)</td>
                                            <td>@string.Format("{0:dd-MMM-yyyy}", item.DueDate)</td>
                                            <td>@item.Status</td>
                                        </tr>
                                    }
                                }
                            }
                        </tbody>
                    </table>
                }

            </div>
          
            @*@if (Model.PlotInstallments.Any())
        {
            <div class="col-md-5" style="max-height:500px; overflow-y:scroll">
                <table class="table table-striped table-bordered" cellspacing="0" width="100%" style="margin-bottom:0px">
                    <thead class="thead-dark">
                        <tr>
                            <th>Installment</th>
                            <th>Amount</th>
                            <th>Due Date</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            decimal overduetotal = 0;
                            foreach (var own in Model.PlotInstallments)
                            {
                                string[] adva = { "Advance", "Booking" };
                                var statuscolor = "";
                                if (own.Status == "NotPaid")
                                {
                                    statuscolor = "bgc-red-50";
                                    overduetotal = overduetotal + own.Amount;
                                }
                                else if (own.Status == "Paid")
                                {
                                    statuscolor = "bgc-green-50";
                                }
                                //if (adva.Contains(own.Installment_Name))
                                //{

                                //        var res = own.DueDate.ToString("MM/dd/yyyy");

                                //        $("#booking-date").text(res);
                                //}

                                <tr class="@statuscolor">
                                    <td>@own.Installment_Name</td>
                                    <td>@string.Format("{0:n0}", own.Amount)</td>
                                    <td>@string.Format("{0:dd-MMM-yyyy}", own.DueDate)</td>
                                    <td>@own.Status</td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        }*@
            @if (Model.PlotReceipts.Any())
            {
        <div class="col-md-7" style="max-height:500px;overflow-y:scroll">
            <div class="form-row">
                <ul class="nav nav-tabs">
                    <li class="nav-item">
                        <a class="nav-link active pointer sideLink instrec" data-typ="instrec">Booking & Installment</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link sideLink pointer sideLink SurchargerecPlot" data-typ="SurchargerecPlot">Surcharge </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link sideLink pointer sideLink otherrec" data-typ="otherrec">Other</a>
                    </li>

                </ul>
            </div>
             <table class="table table-striped table-bordered instrecview" cellspacing="0" width="100%" style="margin-bottom:0px">
                    <thead class="thead-dark">
                        @*<tr>
                            <th colspan="7">@g.Key</th>
                        </tr>*@
                        <tr>
                            <th>Sr.</th>
                            <th>Receipt No.</th>
                            <th>Inst No.</th>
                            <th>Type</th>
                            <th>Status</th>
                            <th>Amount</th>
                            <th>Date</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var g in Model.PlotReceipts.GroupBy(x => x.Type).Where(x => x.Key == "Booking" || x.Key == "Installment"))
                        {
                            int srcount = 1;
                            foreach (var own in g)
                            {
                                string stat = "";
                                if (own.Status == "Pending")
                                {
                                    stat = "bgc-yellow-50";
                                }
                                else if (own.Status == "Dishonored")
                                {
                                    stat = "bgc-red-50";
                                }
                                else if (own.Status == "Approved")
                                {
                                    stat = "bgc-green-50";
                                }
                                else if (own.Status == "Deposited")
                                {
                                    stat = "bgc-orange-50";
                                }
                                else
                                {
                                    stat = "";
                                }
                                    <tr class="@stat" id="@own.Id">
                                        <td>@srcount</td>
                                        <td>@own.ReceiptNo</td>
                                        <td>@string.Format("{0:n0}", own.Ch_Pay_Draft_No)</td>
                                        <td>@own.PaymentType</td>
                                        <td>@own.Status</td>
                                        <td>@string.Format("{0:n0}", own.Amount)</td>
                                        <td>@string.Format("{0:dd-MMM-yyyy}", own.DateTime)</td>
                                    </tr>
                                srcount++;
                            }
                        }
                       
                        </tbody>
                </table>
             <table class="table table-striped table-bordered SurChargerecviewPlot" cellspacing="0" width="100%" style="margin-bottom:0px;display:none;">
                    <thead class="thead-dark">
                        @*<tr>
                            <th colspan="7">@g.Key</th>
                        </tr>*@
                        <tr>
                            <th>Sr.</th>
                            <th>Receipt No.</th>
                            <th>Inst No.</th>
                            <th>Type</th>
                            <th>Status</th>
                            <th>Amount</th>
                            <th>Date</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var g in Model.PlotReceipts.GroupBy(x => x.Type).Where(x => x.Key == "SurCharge"))
                        {
                            int srcount = 1;
                            foreach (var own in g)
                            {
                                string stat = "";
                                if (own.Status == "Pending")
                                {
                                    stat = "bgc-yellow-50";
                                }
                                else if (own.Status == "Dishonored")
                                {
                                    stat = "bgc-red-50";
                                }
                                else if (own.Status == "Approved")
                                {
                                    stat = "bgc-green-50";
                                }
                                else if (own.Status == "Deposited")
                                {
                                    stat = "bgc-orange-50";
                                }
                                else
                                {
                                    stat = "";
                                }
                                    <tr class="@stat" id="@own.Id">
                                        <td>@srcount</td>
                                        <td>@own.ReceiptNo</td>
                                        <td>@string.Format("{0:n0}", own.Ch_Pay_Draft_No)</td>
                                        <td>@own.PaymentType</td>
                                        <td>@own.Status</td>
                                        <td>@string.Format("{0:n0}", own.Amount)</td>
                                        <td>@string.Format("{0:dd-MMM-yyyy}", own.DateTime)</td>
                                    </tr>
                                srcount++;
                            }
                        }
                        
                        </tbody>
                </table>
             <table class="table table-striped table-bordered otherrecview" cellspacing="0" width="100%" style="margin-bottom:0px;display:none;">
                    <thead class="thead-dark">
                        @*<tr>
                            <th colspan="7">@g.Key</th>
                        </tr>*@
                        <tr>
                            <th>Sr.</th>
                            <th>Receipt No.</th>
                            <th>Inst No.</th>
                            <th>Type</th>
                            <th>Status</th>
                            <th>Amount</th>
                            <th>Date</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{ foreach (var g in Model.PlotReceipts.GroupBy(x => x.Type).Where(x => x.Key != "Booking" && x.Key != "Installment" && x.Key != "Adjusted" && x.Key != "Surcharge"))
                            {
                                int srcount = 1;
                                foreach (var own in g)
                                {
                                    string stat = "";
                                    if (own.Status == "Pending")
                                    {
                                        stat = "bgc-yellow-50";
                                    }
                                    else if (own.Status == "Dishonored")
                                    {
                                        stat = "bgc-red-50";
                                    }
                                    else if (own.Status == "Approved")
                                    {
                                        stat = "bgc-green-50";
                                    }
                                    else if (own.Status == "Deposited")
                                    {
                                        stat = "bgc-orange-50";
                                    }
                                    else
                                    {
                                        stat = "";
                                    }
                                <tr class="@stat" id="@own.Id">
                                    <td>@srcount</td>
                                    <td>@own.ReceiptNo</td>
                                    <td>@string.Format("{0:n0}", own.Ch_Pay_Draft_No)</td>
                                    <td>@own.PaymentType</td>
                                    <td>@own.Status</td>
                                    <td>@string.Format("{0:n0}", own.Amount)</td>
                                    <td>@string.Format("{0:dd-MMM-yyyy}", own.DateTime)</td>
                                </tr>
                                    srcount++;
                                }
                            }
                            }
                    </tbody>
                </table>
            
        </div>
                            }
        </div>
        <br />
        <br />
        <div class="col-md-12">
           
            <div class="form-row">
                <div class="col-md-12" id="plot-rep" style="margin-top:1%"></div>
            </div>
        </div>
        <div class="form-row">
            <div class="col-md-12" id="plot-rep" style="margin-top:1%"></div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        $('#plot-rep').load('/Plots/PlotInstallmentsReports/', { Plotid: @Model.PlotData.Id});
        //$('#det-rep').load('/Messages/PlotsComments/', { Plotid: @Model.PlotData.Id});

		$('.biometric-updt-btn').unbind().click(function(){
			let plId = $(this).attr('data-pid');
			window.open('/Biometric/BioAuthSetting?Id='+plId+"&module=PlotManagement");
		});
    });
    $('.disc-btn-fsdkhj').unbind().click(function () {
        let plt = $(this).attr('data-plot');
        showLoader();
        EmptyModel();
        $('#ModalLabel').text("Discount Request");
        $('#modalbody').load('/Plots/DiscountRequest/', { Plotid: plt }, function () {
            hideLoader();
        });
    });
    //$('.sideLink').unbind().click(function () {
    //    if (!$(this).hasClass('active')) {
    //        $(this).addClass('active');
    //        let typeOfLink = $(this).attr('data-typ');

    //        if (typeOfLink == 'instrec') {
    //            $('.instrecview').show();
    //            $('.otherrecview').hide();
    //            $('.otherrec').removeClass('active');;
    //        }
    //        else {
    //            $('.instrecview').hide();
    //            $('.instrec').removeClass('active');
    //            $('.otherrecview').show();
    //        }
    //    }
    //});

    $('.sideLink').unbind().click(function () {
        if (!$(this).hasClass('active')) {
            $(this).addClass('active');
            let typeOfLink = $(this).attr('data-typ');
            debugger
            if (typeOfLink == 'installPlan') {
                $('.installPlanView').show();
                $('.SurChargefileView').hide();
                $('.SurChargefile').removeClass('active');
                $('.installPlanNotIncluded').hide();
                $('.Not_Included').removeClass('active');
            }
            else if (typeOfLink == 'SurChargefile') {
                $('.installPlanView').hide();
                $('.installPlan').removeClass('active');
                $('.installPlanNotIncluded').hide();
                $('.Not_Included').removeClass('active');
                $('.SurChargefileView').show();
            }
            else if (typeOfLink == 'Not_Included') {
                $('.installPlanView').hide();
                $('.installPlan').removeClass('active');
                $('.SurChargefileView').hide();
                $('.SurChargefile').removeClass('active');;
                $('.installPlanNotIncluded').show();
            }
            if (typeOfLink == 'instrec') {
                $('.instrecview').show();
                $('.otherrecview').hide();
                $('.otherrec').removeClass('active');
                $('.SurChargerecviewPlot').hide();
                $('.SurchargerecPlot').removeClass('active');
            }
            else if(typeOfLink == 'otherrec'){
                $('.instrecview').hide();
                $('.instrec').removeClass('active');
                $('.instrecview').hide();
                $('.SurChargerecviewPlot').hide();
                $('.SurchargerecPlot').removeClass('active');
                $('.otherrecview').show();
            }
            else if (typeOfLink == 'SurchargerecPlot') {
                $('.instrecview').hide();
                $('.instrec').removeClass('active');
                $('.otherrecview').hide();
                $('.otherrec').removeClass('active');
                $('.SurChargerecviewPlot').show();
            }

        }
    });
    $(document).ready(function () {
        $(".wave-off-surcharge").click(function (e) {
            e.preventDefault(); // Prevent the default action of the link

            var url = $(this).attr("href");

            $.ajax({
                type: "POST",
                url: url,
                success: function (response) {
                    if (response.success) {
                        // Success message or action (optional)
                        alert("Surcharge waved off successfully.");
                    } else {
                        // Handle failure (optional)
                        alert("Failed to wave off surcharge.");
                    }
                },
                error: function () {
                    // Handle errors (optional)
                    alert("An error occurred while processing your request.");
                }
            });
        });
    });

</script>
