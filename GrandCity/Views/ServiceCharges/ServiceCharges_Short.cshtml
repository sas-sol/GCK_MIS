@model MeherEstateDevelopers.Models.ElectricityChargesDetails
<table class="table  table-bordered" cellspacing="0" width="100%">
    <tr>
        <th colspan="11" style="text-align:center"><font size="5">All Blocks Summary of  @string.Format("{0:MMMM yyyy}", DateTime.UtcNow)</font></th>
    </tr>
    <col>
    <colgroup span="2"></colgroup>
    <colgroup span="2"></colgroup>
    <tr>
        <td rowspan="2"></td>
        <th colspan="2" scope="colgroup" style="text-align:center;">  <font size="5">Residential</font></th>
        <th colspan="2" scope="colgroup" style="text-align:center;">  <font size="5">Commercial</font></th>
    </tr>
    <tr>
        <th scope="col">Receivable</th>
        <th scope="col">Received</th>
        <th scope="col">Receivable</th>
        <th scope="col">Received</th>
    </tr>

    @{
        foreach (var item in Model.ServiceChargesList.GroupBy(x => new { x.Block }))
        {
            <tr>
                <th scope="row">@item.Key.Block</th>
                <td>@string.Format("{0:n0}", item.Where(x => x.Type == "Residential").Select(x => x.Grand_Total).Sum())</td>
                <td>@string.Format("{0:n0}", item.Where(x => x.Type == "Residential").Select(x => x.Amount_Paid).Sum())</td>
                <td>@string.Format("{0:n0}", item.Where(x => x.Type == "Commercial").Select(x => x.Grand_Total).Sum()) </td>
                <td>@string.Format("{0:n0}", item.Where(x => x.Type == "Commercial").Select(x => x.Amount_Paid).Sum())</td>
            </tr>
        }


    }
    <tfoot>
        <tr>
            <th scope="row">Grand Total</th>
            <td>@string.Format("{0:n0}", Model.ServiceChargesList.Where(x => x.Type == "Residential").Select(x => x.Grand_Total).Sum())</td>
            <td>@string.Format("{0:n0}", Model.ServiceChargesList.Where(x => x.Type == "Residential").Select(x => x.Amount_Paid).Sum())</td>
            <td>@string.Format("{0:n0}", Model.ServiceChargesList.Where(x => x.Type == "Commercial").Select(x => x.Grand_Total).Sum()) </td>
            <td>@string.Format("{0:n0}", Model.ServiceChargesList.Where(x => x.Type == "Commercial").Select(x => x.Amount_Paid).Sum())</td>
        </tr>
    </tfoot>
</table>
<nav>
    <div class="nav nav-tabs" id="nav-tab" role="tablist">
        <a class="nav-item nav-link active" id="nav-home-tab" data-toggle="tab" data-lead="1" href="#nav-home" role="tab" aria-controls="nav-home" aria-selected="true">Residential</a>
        <a class="nav-item nav-link" id="nav-profile-tab" data-toggle="tab" data-lead="1"  href="#nav-profile" role="tab" aria-controls="nav-profile" aria-selected="false">Commercial</a>
    </div>
</nav>
<div class="tab-content" id="nav-tabContent">
    <div class="tab-pane fade show active" id="nav-home" role="tabpanel" aria-labelledby="nav-home-tab">
        <div class="col-md-12 bgc-white bd bdrs-3 p-20 mB-20">
            <h4 class="c-grey-900 mB-20">Residential</h4>
            <table id="" class="table table-striped table-bordered rea-dat" cellspacing="0" width="100%">
                <thead class="thead-dark">
                    <tr>
                        <th width="" class="col-name">Block Name</th>
                        <th width="" align="center" class="col-date">Plot No</th>
                        <th width="" class="col-name">Name</th>
                        <th width="" class="col-rece">Amount</th>
                        <th width="" class="col-rece">Arrears</th>
                        <th width="" class="col-rece">Grand Total</th>
                        <th width="" class="col-rece">Due Date</th>
                        <th width="" class="col-rece">After Due Date</th>
                        <th width="" class="col-rece">Paid Amount</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        foreach (var item in Model.ServiceChargesList.Where(c => c.Type == "Residential"))
                        {
                            <tr class="pointer" data-id="@item.Plot_Id" id="@item.Id">
                                <td class="col-type"><span class="h4"> @item.Block </span><button class="btn btn-info  blk-ser-bills__type__wise" style="float:right" id="@item.Block_Id" data-id="@item.Type">Download Bills</button></td>
                                <td align="center" class="col-mod">@item.Plot_No</td>
                                <td class="col-type">@item.Name</td>
                                <td class="pre-read">@item.Amount</td>
                                <td class="pre-read">@item.Arrears</td>
                                <td class="pre-read">@String.Format("{0:n0}", item.Grand_Total) </td>
                                <td class="pre-read">@String.Format("{0:MMMM dd yyyy}", item.Due_Date) </td>
                                <td class="pre-read">@String.Format("{0:n0}", item.Net_Total) </td>
                                <td class="pre-read">
                                    @if (item.Amount_Paid != null || item.Amount_Paid != 0)
                                    {
                                        @String.Format("{0:n0}", item.Amount_Paid)

                                    }
                                    else
                                    {
                                        <span>0</span>
                                    }
                                </td>

                                <td>
                                    <i class="ti-eye vie-ser-bill" id="@item.Id" data-id="@item.Id"></i>
                                    @if (User.IsInRole("Update Electric Bill"))
                                    {
                                        <i class="ti-pencil ser-char" data-toggle="modal" data-target="#Modal" id="@item.Id" data-pltid="@item.Plot_Id"></i>
                                        <i class="ti-filter plt-scbl-det" data-toggle="modal" data-target="#Modal" id="@item.Id" data-id="@item.Plot_Id"></i>
                                    }
                                </td>

                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>

    </div>
    <div class="tab-pane fade" id="nav-profile" role="tabpanel" aria-labelledby="nav-profile-tab">
        <div class="tab-pane fade show active" id="nav-home" role="tabpanel" aria-labelledby="nav-home-tab">
            <div class="col-md-12 bgc-white bd bdrs-3 p-20 mB-20">
                <h4 class="c-grey-900 mB-20">Commercial</h4>
                <table id="" class="table table-striped table-bordered rea-dat" cellspacing="0" width="100%">
                    <thead class="thead-dark">
                        <tr>
                            <th width="" class="col-name">Block Name</th>
                            <th width="" align="center" class="col-date">Plot No</th>
                            <th width="" class="col-name">Name</th>
                            <th width="" class="col-rece">Amount</th>
                            <th width="" class="col-rece">Arrears</th>
                            <th width="" class="col-rece">Grand Total</th>
                            <th width="" class="col-rece">Due Date</th>
                            <th width="" class="col-rece">After Due Date</th>
                            <th width="" class="col-rece">Paid Amount</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            foreach (var item in Model.ServiceChargesList.Where(c => c.Type == "Commercial"))
                            {
                                <tr class="pointer" data-id="@item.Plot_Id" id="@item.Id">
                                    <td class="col-type"><span class="h4"> @item.Block </span><button class="btn btn-info  blk-ser-bills__type__wise" style="float:right" id="@item.Block_Id" data-id="@item.Type">Download Bills</button></td>
                                    <td align="center" class="col-mod">@item.Plot_No</td>
                                    <td class="col-type">@item.Name</td>
                                    <td class="pre-read">@item.Amount</td>
                                    <td class="pre-read">@item.Arrears</td>
                                    <td class="pre-read">@String.Format("{0:n0}", item.Grand_Total) </td>
                                    <td class="pre-read">@String.Format("{0:MMMM dd yyyy}", item.Due_Date) </td>
                                    <td class="pre-read">@String.Format("{0:n0}", item.Net_Total) </td>
                                    <td class="pre-read">
                                        @if (item.Amount_Paid != null || item.Amount_Paid != 0)
                                        {
                                            @String.Format("{0:n0}", item.Amount_Paid)

                                        }
                                        else
                                        {
                                            <span>0</span>
                                        }
                                    </td>

                                    <td>
                                        <i class="ti-eye vie-ser-bill" id="@item.Id" data-id="@item.Id"></i>
                                        @if (User.IsInRole("Update Electric Bill"))
                                        {
                                            <i class="ti-pencil ser-char " data-toggle="modal" data-target="#Modal" id="@item.Id" data-pltid="@item.Plot_Id"></i>
                                            <i class="ti-filter plt-scbl-det" data-toggle="modal" data-target="#Modal" id="@item.Id" data-id="@item.Plot_Id"></i>
                                        }
                                    </td>

                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>

        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        var groupColumn = 0;
        var table = $('.rea-dat').DataTable({
            dom: 'Bfrtip',
            "order": [[groupColumn, 'asc']],
            "displayLength": 25,
            "drawCallback": function (settings) {
                var api = this.api();
                var rows = api.rows({ page: 'current' }).nodes();
                var last = null;

                api.column(groupColumn, { page: 'current' }).data().each(function (group, i) {
                    if (last !== group) {
                        $(rows).eq(i).before(
                            '<tr class="group"><td colspan="10">' + group + '</td></tr>'
                        );

                        last = group;
                    }
                });
            },
            "columnDefs": [
                { "targets": groupColumn, "visible": false, },

            ]
        });
        // Order by the grouping
        $('#example tbody').on('click', 'tr.group', function () {
            var currentOrder = table.order()[0];
            if (currentOrder[0] === groupColumn && currentOrder[1] === 'asc') {
                table.order([groupColumn, 'desc']).draw();
            }
            else {
                table.order([groupColumn, 'asc']).draw();
            }
        });
    });
</script>