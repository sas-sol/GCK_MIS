
@model IEnumerable<MeherEstateDevelopers.Models.Sp_Get_CommercialMeterDetails_Result>
<style>
    table thead tr th, table tbody tr td {
        font-size: 12px;
    }

    .scrolling-box {
        height: 740px;
        overflow-y: scroll;
        overflow-x: scroll;
        width: 100%;
        position: sticky;
        top: 0;
    }

    .tableFixHead {
        overflow: auto;
        height: 700px;
    }

        .tableFixHead .ka th {
            position: sticky;
            top: 0;
        }
</style>

<div class="tableFixHead">
    <table id="" class="table table-striped table-bordered" cellspacing="0" width="100%">
        <thead class="thead-dark ka">
            <tr>
                <th>Shop No</th>
                <th>Meter No</th>
                <th>Prev Reading</th>
                <th>Cur Reading</th>
                <th>Units</th>
                <th></th>


            </tr>
        </thead>
        @{
            /**/
            if (!Model.Any())
            {
                <tr><td colspan="6" style="text-align:center">No data available</td></tr>
            }
            else
            {
                int sr = 1;
                foreach (var g in Model.GroupBy(x => new { x.projectid, x.Project_Name, x.Floor }))
                {

                    <thead class="">
                        <tr>
                            <th colspan="6" style="font-size:21px;text-align:center">@g.Key.Project_Name -  @g.Key.Floor</th>
                        </tr>
                        <tr>
                            <th align="center" class="col-date">Shop No</th>
                            <th class="col-name">Meter No</th>
                            <th class="col-rece">Prev Reading</th>
                            <th class="col-file">Cur Reading</th>
                            <th class="col-file">Units</th>
                            <th class="col-deal"></th>

                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                        var units = item.Current_Reading - item.Previous_Reading;
                        <tr id="@item.Id">
                            <td align="center" class="col-mod">@item.Shop</td>
                            <td class="col-type">@item.Meter_No</td>
                            <td class="pre-read">@item.Previous_Reading</td>
                            <td class="col-deal"><input value="@item.Current_Reading" type="text" class="read" /></td>
                            <td class="uni-cons">@units</td>
                            <td class="col-deal">
                                <i class="ti-check" id="check-@item.Id" style="display:none; color:green;font-weight:bold"></i>
                                <i class="ti-pencil rc-up" data-toggle="modal" data-target="#Modal" style="float:right; margin-right:15px" title="Update"></i>
                            </td>
                        </tr>
                        }
                    </tbody>
                }
            }
        }

    </table>
</div>
<style>
    tr.group,
    tr.group:hover {
        background-color: #ddd !important;
    }
</style>